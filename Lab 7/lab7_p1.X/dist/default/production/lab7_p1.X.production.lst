

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Oct 10 20:28:27 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	text13,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	text24,global,reloc=2,class=CODE,delta=1
    35                           	psect	text25,global,reloc=2,class=CODE,delta=1
    36                           	psect	text26,global,reloc=2,class=CODE,delta=1
    37                           	psect	text27,global,reloc=2,class=CODE,delta=1
    38                           	psect	text28,global,reloc=2,class=CODE,delta=1
    39                           	psect	text29,global,reloc=2,class=CODE,delta=1
    40                           	psect	text30,global,reloc=2,class=CODE,delta=1
    41                           	psect	text31,global,reloc=2,class=CODE,delta=1
    42                           	psect	text32,global,reloc=2,class=CODE,delta=1
    43                           	psect	text33,global,reloc=2,class=CODE,delta=1
    44                           	psect	text34,global,reloc=2,class=CODE,delta=1
    45                           	psect	text35,global,reloc=2,class=CODE,delta=1
    46                           	psect	text36,global,reloc=2,class=CODE,delta=1
    47                           	psect	text37,global,reloc=2,class=CODE,delta=1
    48                           	psect	text38,global,reloc=2,class=CODE,delta=1
    49                           	psect	text39,global,reloc=2,class=CODE,delta=1
    50                           	psect	text40,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    53  0000                     
    54                           	psect	idataCOMRAM
    55  00DF2C                     __pidataCOMRAM:
    56                           	opt stack 0
    57                           
    58                           ;initializer for _LED_7seg
    59  00DF2C  01                 	db	1
    60  00DF2D  4F                 	db	79
    61  00DF2E  12                 	db	18
    62  00DF2F  06                 	db	6
    63  00DF30  4C                 	db	76
    64  00DF31  24                 	db	36
    65  00DF32  20                 	db	32
    66  00DF33  0F                 	db	15
    67  00DF34  00                 	db	0
    68  00DF35  0C                 	db	12
    69                           
    70                           	psect	mediumconst
    71  00FDD2                     __pmediumconst:
    72                           	opt stack 0
    73  00FDD2  00                 	db	0
    74  00FDD3                     _dpowers:
    75                           	opt stack 0
    76  00FDD3  0001               	dw	1
    77  00FDD5  0000               	dw	0
    78  00FDD7  000A               	dw	10
    79  00FDD9  0000               	dw	0
    80  00FDDB  0064               	dw	100
    81  00FDDD  0000               	dw	0
    82  00FDDF  03E8               	dw	1000
    83  00FDE1  0000               	dw	0
    84  00FDE3  2710               	dw	10000
    85  00FDE5  0000               	dw	0
    86  00FDE7  86A0               	dw	34464
    87  00FDE9  0001               	dw	1
    88  00FDEB  4240               	dw	16960
    89  00FDED  000F               	dw	15
    90  00FDEF  9680               	dw	38528
    91  00FDF1  0098               	dw	152
    92  00FDF3  E100               	dw	57600
    93  00FDF5  05F5               	dw	1525
    94  00FDF7  CA00               	dw	51712
    95  00FDF9  3B9A               	dw	15258
    96  00FDFB                     __end_of_dpowers:
    97                           	opt stack 0
    98  00FDFB                     __npowers_:
    99                           	opt stack 0
   100  00FDFB  00                 	db	0
   101  00FDFC  80                 	db	128
   102  00FDFD  3F                 	db	63
   103  00FDFE  CD                 	db	205
   104  00FDFF  CC                 	db	204
   105  00FE00  3D                 	db	61
   106  00FE01  D7                 	db	215
   107  00FE02  23                 	db	35
   108  00FE03  3C                 	db	60
   109  00FE04  12                 	db	18
   110  00FE05  83                 	db	131
   111  00FE06  3A                 	db	58
   112  00FE07  B7                 	db	183
   113  00FE08  D1                 	db	209
   114  00FE09  38                 	db	56
   115  00FE0A  C6                 	db	198
   116  00FE0B  27                 	db	39
   117  00FE0C  37                 	db	55
   118  00FE0D  38                 	db	56
   119  00FE0E  86                 	db	134
   120  00FE0F  35                 	db	53
   121  00FE10  C0                 	db	192
   122  00FE11  D6                 	db	214
   123  00FE12  33                 	db	51
   124  00FE13  CC                 	db	204
   125  00FE14  2B                 	db	43
   126  00FE15  32                 	db	50
   127  00FE16  70                 	db	112
   128  00FE17  89                 	db	137
   129  00FE18  30                 	db	48
   130  00FE19  E7                 	db	231
   131  00FE1A  DB                 	db	219
   132  00FE1B  2E                 	db	46
   133  00FE1C  E5                 	db	229
   134  00FE1D  3C                 	db	60
   135  00FE1E  1E                 	db	30
   136  00FE1F  42                 	db	66
   137  00FE20  A2                 	db	162
   138  00FE21  0D                 	db	13
   139  00FE22                     __end_of__npowers_:
   140                           	opt stack 0
   141  00FE22                     __powers_:
   142                           	opt stack 0
   143  00FE22  00                 	db	0
   144  00FE23  80                 	db	128
   145  00FE24  3F                 	db	63
   146  00FE25  00                 	db	0
   147  00FE26  20                 	db	32
   148  00FE27  41                 	db	65
   149  00FE28  00                 	db	0
   150  00FE29  C8                 	db	200
   151  00FE2A  42                 	db	66
   152  00FE2B  00                 	db	0
   153  00FE2C  7A                 	db	122
   154  00FE2D  44                 	db	68
   155  00FE2E  40                 	db	64
   156  00FE2F  1C                 	db	28
   157  00FE30  46                 	db	70
   158  00FE31  50                 	db	80
   159  00FE32  C3                 	db	195
   160  00FE33  47                 	db	71
   161  00FE34  24                 	db	36
   162  00FE35  74                 	db	116
   163  00FE36  49                 	db	73
   164  00FE37  97                 	db	151
   165  00FE38  18                 	db	24
   166  00FE39  4B                 	db	75
   167  00FE3A  BC                 	db	188
   168  00FE3B  BE                 	db	190
   169  00FE3C  4C                 	db	76
   170  00FE3D  6B                 	db	107
   171  00FE3E  6E                 	db	110
   172  00FE3F  4E                 	db	78
   173  00FE40  03                 	db	3
   174  00FE41  15                 	db	21
   175  00FE42  50                 	db	80
   176  00FE43  79                 	db	121
   177  00FE44  AD                 	db	173
   178  00FE45  60                 	db	96
   179  00FE46  F3                 	db	243
   180  00FE47  49                 	db	73
   181  00FE48  71                 	db	113
   182  00FE49                     __end_of__powers_:
   183                           	opt stack 0
   184  0000                     _ADCON0	set	4034
   185  0000                     _ADCON0bits	set	4034
   186  0000                     _ADCON1	set	4033
   187  0000                     _ADCON2	set	4032
   188  0000                     _ADRESH	set	4036
   189  0000                     _ADRESL	set	4035
   190  0000                     _CCP2CON	set	4026
   191  0000                     _CCPR2L	set	4027
   192  0000                     _INTCONbits	set	4082
   193  0000                     _OSCCON	set	4051
   194  0000                     _PIE1bits	set	3997
   195  0000                     _PIR1bits	set	3998
   196  0000                     _PORTAbits	set	3968
   197  0000                     _PORTB	set	3969
   198  0000                     _PORTCbits	set	3970
   199  0000                     _PORTD	set	3971
   200  0000                     _PORTDbits	set	3971
   201  0000                     _PORTEbits	set	3972
   202  0000                     _PR2	set	4043
   203  0000                     _RCSTA	set	4011
   204  0000                     _RCSTAbits	set	4011
   205  0000                     _SPBRG	set	4015
   206  0000                     _SPBRGH	set	4016
   207  0000                     _T0CON	set	4053
   208  0000                     _T0CONbits	set	4053
   209  0000                     _T2CON	set	4042
   210  0000                     _TMR0H	set	4055
   211  0000                     _TMR0L	set	4054
   212  0000                     _TRISA	set	3986
   213  0000                     _TRISB	set	3987
   214  0000                     _TRISC	set	3988
   215  0000                     _TRISCbits	set	3988
   216  0000                     _TRISD	set	3989
   217  0000                     _TRISE	set	3990
   218  0000                     _TXREG	set	4013
   219  0000                     _TXSTA	set	4012
   220  0000                     _TXSTAbits	set	4012
   221  0000                     _TRMT	set	32097
   222  00FE49                     STR_1:
   223  00FE49  20                 	db	32
   224  00FE4A  56                 	db	86	;'V'
   225  00FE4B  6F                 	db	111	;'o'
   226  00FE4C  6C                 	db	108	;'l'
   227  00FE4D  74                 	db	116	;'t'
   228  00FE4E  61                 	db	97	;'a'
   229  00FE4F  67                 	db	103	;'g'
   230  00FE50  65                 	db	101	;'e'
   231  00FE51  20                 	db	32
   232  00FE52  50                 	db	80	;'P'
   233  00FE53  68                 	db	104	;'h'
   234  00FE54  6F                 	db	111	;'o'
   235  00FE55  74                 	db	116	;'t'
   236  00FE56  6F                 	db	111	;'o'
   237  00FE57  20                 	db	32
   238  00FE58  52                 	db	82	;'R'
   239  00FE59  65                 	db	101	;'e'
   240  00FE5A  73                 	db	115	;'s'
   241  00FE5B  69                 	db	105	;'i'
   242  00FE5C  73                 	db	115	;'s'
   243  00FE5D  74                 	db	116	;'t'
   244  00FE5E  6F                 	db	111	;'o'
   245  00FE5F  72                 	db	114	;'r'
   246  00FE60  20                 	db	32
   247  00FE61  3D                 	db	61	;'='
   248  00FE62  20                 	db	32
   249  00FE63  25                 	db	37
   250  00FE64  66                 	db	102	;'f'
   251  00FE65  20                 	db	32
   252  00FE66  0D                 	db	13
   253  00FE67  0A                 	db	10
   254  00FE68  00                 	db	0
   255  00FE69                     STR_14:
   256  00FE69  20                 	db	32
   257  00FE6A  73                 	db	115	;'s'
   258  00FE6B  74                 	db	116	;'t'
   259  00FE6C  65                 	db	101	;'e'
   260  00FE6D  70                 	db	112	;'p'
   261  00FE6E  20                 	db	32
   262  00FE6F  31                 	db	49	;'1'
   263  00FE70  33                 	db	51	;'3'
   264  00FE71  2C                 	db	44
   265  00FE72  20                 	db	32
   266  00FE73  45                 	db	69	;'E'
   267  00FE74  57                 	db	87	;'W'
   268  00FE75  50                 	db	80	;'P'
   269  00FE76  45                 	db	69	;'E'
   270  00FE77  44                 	db	68	;'D'
   271  00FE78  5F                 	db	95	;'_'
   272  00FE79  53                 	db	83	;'S'
   273  00FE7A  57                 	db	87	;'W'
   274  00FE7B  20                 	db	32
   275  00FE7C  3D                 	db	61	;'='
   276  00FE7D  20                 	db	32
   277  00FE7E  25                 	db	37
   278  00FE7F  66                 	db	102	;'f'
   279  00FE80  20                 	db	32
   280  00FE81  0D                 	db	13
   281  00FE82  0A                 	db	10
   282  00FE83  00                 	db	0
   283  00FE84                     STR_4:
   284  00FE84  20                 	db	32
   285  00FE85  73                 	db	115	;'s'
   286  00FE86  74                 	db	116	;'t'
   287  00FE87  65                 	db	101	;'e'
   288  00FE88  70                 	db	112	;'p'
   289  00FE89  20                 	db	32
   290  00FE8A  33                 	db	51	;'3'
   291  00FE8B  2C                 	db	44
   292  00FE8C  20                 	db	32
   293  00FE8D  4E                 	db	78	;'N'
   294  00FE8E  53                 	db	83	;'S'
   295  00FE8F  50                 	db	80	;'P'
   296  00FE90  45                 	db	69	;'E'
   297  00FE91  44                 	db	68	;'D'
   298  00FE92  5F                 	db	95	;'_'
   299  00FE93  53                 	db	83	;'S'
   300  00FE94  57                 	db	87	;'W'
   301  00FE95  20                 	db	32
   302  00FE96  3D                 	db	61	;'='
   303  00FE97  20                 	db	32
   304  00FE98  25                 	db	37
   305  00FE99  66                 	db	102	;'f'
   306  00FE9A  20                 	db	32
   307  00FE9B  0D                 	db	13
   308  00FE9C  0A                 	db	10
   309  00FE9D  00                 	db	0
   310  00FE9E                     STR_33:
   311  00FE9E  20                 	db	32
   312  00FE9F  73                 	db	115	;'s'
   313  00FEA0  74                 	db	116	;'t'
   314  00FEA1  65                 	db	101	;'e'
   315  00FEA2  70                 	db	112	;'p'
   316  00FEA3  20                 	db	32
   317  00FEA4  31                 	db	49	;'1'
   318  00FEA5  33                 	db	51	;'3'
   319  00FEA6  2C                 	db	44
   320  00FEA7  20                 	db	32
   321  00FEA8  4E                 	db	78	;'N'
   322  00FEA9  53                 	db	83	;'S'
   323  00FEAA  4C                 	db	76	;'L'
   324  00FEAB  54                 	db	84	;'T'
   325  00FEAC  5F                 	db	95	;'_'
   326  00FEAD  53                 	db	83	;'S'
   327  00FEAE  57                 	db	87	;'W'
   328  00FEAF  20                 	db	32
   329  00FEB0  3D                 	db	61	;'='
   330  00FEB1  20                 	db	32
   331  00FEB2  25                 	db	37
   332  00FEB3  66                 	db	102	;'f'
   333  00FEB4  20                 	db	32
   334  00FEB5  0D                 	db	13
   335  00FEB6  0A                 	db	10
   336  00FEB7  00                 	db	0
   337  00FEB8                     STR_19:
   338  00FEB8  20                 	db	32
   339  00FEB9  73                 	db	115	;'s'
   340  00FEBA  74                 	db	116	;'t'
   341  00FEBB  65                 	db	101	;'e'
   342  00FEBC  70                 	db	112	;'p'
   343  00FEBD  20                 	db	32
   344  00FEBE  31                 	db	49	;'1'
   345  00FEBF  38                 	db	56	;'8'
   346  00FEC0  2C                 	db	44
   347  00FEC1  20                 	db	32
   348  00FEC2  4E                 	db	78	;'N'
   349  00FEC3  53                 	db	83	;'S'
   350  00FEC4  4C                 	db	76	;'L'
   351  00FEC5  54                 	db	84	;'T'
   352  00FEC6  5F                 	db	95	;'_'
   353  00FEC7  53                 	db	83	;'S'
   354  00FEC8  57                 	db	87	;'W'
   355  00FEC9  20                 	db	32
   356  00FECA  3D                 	db	61	;'='
   357  00FECB  20                 	db	32
   358  00FECC  25                 	db	37
   359  00FECD  66                 	db	102	;'f'
   360  00FECE  20                 	db	32
   361  00FECF  0D                 	db	13
   362  00FED0  0A                 	db	10
   363  00FED1  00                 	db	0
   364  00FED2                     STR_18:
   365  00FED2  20                 	db	32
   366  00FED3  73                 	db	115	;'s'
   367  00FED4  74                 	db	116	;'t'
   368  00FED5  65                 	db	101	;'e'
   369  00FED6  70                 	db	112	;'p'
   370  00FED7  20                 	db	32
   371  00FED8  31                 	db	49	;'1'
   372  00FED9  37                 	db	55	;'7'
   373  00FEDA  20                 	db	32
   374  00FEDB  4E                 	db	78	;'N'
   375  00FEDC  53                 	db	83	;'S'
   376  00FEDD  4C                 	db	76	;'L'
   377  00FEDE  54                 	db	84	;'T'
   378  00FEDF  5F                 	db	95	;'_'
   379  00FEE0  53                 	db	83	;'S'
   380  00FEE1  57                 	db	87	;'W'
   381  00FEE2  20                 	db	32
   382  00FEE3  3D                 	db	61	;'='
   383  00FEE4  20                 	db	32
   384  00FEE5  25                 	db	37
   385  00FEE6  66                 	db	102	;'f'
   386  00FEE7  20                 	db	32
   387  00FEE8  0D                 	db	13
   388  00FEE9  0A                 	db	10
   389  00FEEA  00                 	db	0
   390  00FEEB                     STR_27:
   391  00FEEB  20                 	db	32
   392  00FEEC  73                 	db	115	;'s'
   393  00FEED  74                 	db	116	;'t'
   394  00FEEE  65                 	db	101	;'e'
   395  00FEEF  70                 	db	112	;'p'
   396  00FEF0  20                 	db	32
   397  00FEF1  36                 	db	54	;'6'
   398  00FEF2  2C                 	db	44
   399  00FEF3  20                 	db	32
   400  00FEF4  45                 	db	69	;'E'
   401  00FEF5  57                 	db	87	;'W'
   402  00FEF6  4C                 	db	76	;'L'
   403  00FEF7  54                 	db	84	;'T'
   404  00FEF8  5F                 	db	95	;'_'
   405  00FEF9  53                 	db	83	;'S'
   406  00FEFA  57                 	db	87	;'W'
   407  00FEFB  20                 	db	32
   408  00FEFC  3D                 	db	61	;'='
   409  00FEFD  20                 	db	32
   410  00FEFE  25                 	db	37
   411  00FEFF  66                 	db	102	;'f'
   412  00FF00  20                 	db	32
   413  00FF01  0D                 	db	13
   414  00FF02  0A                 	db	10
   415  00FF03  00                 	db	0
   416  00FF04                     STR_9:
   417  00FF04  20                 	db	32
   418  00FF05  73                 	db	115	;'s'
   419  00FF06  74                 	db	116	;'t'
   420  00FF07  65                 	db	101	;'e'
   421  00FF08  70                 	db	112	;'p'
   422  00FF09  20                 	db	32
   423  00FF0A  38                 	db	56	;'8'
   424  00FF0B  2C                 	db	44
   425  00FF0C  20                 	db	32
   426  00FF0D  45                 	db	69	;'E'
   427  00FF0E  57                 	db	87	;'W'
   428  00FF0F  4C                 	db	76	;'L'
   429  00FF10  54                 	db	84	;'T'
   430  00FF11  5F                 	db	95	;'_'
   431  00FF12  53                 	db	83	;'S'
   432  00FF13  57                 	db	87	;'W'
   433  00FF14  20                 	db	32
   434  00FF15  3D                 	db	61	;'='
   435  00FF16  20                 	db	32
   436  00FF17  25                 	db	37
   437  00FF18  66                 	db	102	;'f'
   438  00FF19  20                 	db	32
   439  00FF1A  0D                 	db	13
   440  00FF1B  0A                 	db	10
   441  00FF1C  00                 	db	0
   442  00FF1D                     STR_22:
   443  00FF1D  20                 	db	32
   444  00FF1E  6E                 	db	110	;'n'
   445  00FF1F  69                 	db	105	;'i'
   446  00FF20  67                 	db	103	;'g'
   447  00FF21  68                 	db	104	;'h'
   448  00FF22  74                 	db	116	;'t'
   449  00FF23  20                 	db	32
   450  00FF24  6D                 	db	109	;'m'
   451  00FF25  6F                 	db	111	;'o'
   452  00FF26  64                 	db	100	;'d'
   453  00FF27  65                 	db	101	;'e'
   454  00FF28  20                 	db	32
   455  00FF29  73                 	db	115	;'s'
   456  00FF2A  74                 	db	116	;'t'
   457  00FF2B  65                 	db	101	;'e'
   458  00FF2C  70                 	db	112	;'p'
   459  00FF2D  20                 	db	32
   460  00FF2E  31                 	db	49	;'1'
   461  00FF2F  20                 	db	32
   462  00FF30  0D                 	db	13
   463  00FF31  0A                 	db	10
   464  00FF32  00                 	db	0
   465  00FF33                     STR_2:
   466  00FF33  20                 	db	32
   467  00FF34  64                 	db	100	;'d'
   468  00FF35  61                 	db	97	;'a'
   469  00FF36  79                 	db	121	;'y'
   470  00FF37  20                 	db	32
   471  00FF38  6D                 	db	109	;'m'
   472  00FF39  6F                 	db	111	;'o'
   473  00FF3A  64                 	db	100	;'d'
   474  00FF3B  65                 	db	101	;'e'
   475  00FF3C  20                 	db	32
   476  00FF3D  73                 	db	115	;'s'
   477  00FF3E  74                 	db	116	;'t'
   478  00FF3F  65                 	db	101	;'e'
   479  00FF40  70                 	db	112	;'p'
   480  00FF41  20                 	db	32
   481  00FF42  31                 	db	49	;'1'
   482  00FF43  20                 	db	32
   483  00FF44  0D                 	db	13
   484  00FF45  0A                 	db	10
   485  00FF46  00                 	db	0
   486  00FF47                     STR_11:
   487  00FF47  20                 	db	32
   488  00FF48  73                 	db	115	;'s'
   489  00FF49  74                 	db	116	;'t'
   490  00FF4A  65                 	db	101	;'e'
   491  00FF4B  70                 	db	112	;'p'
   492  00FF4C  20                 	db	32
   493  00FF4D  31                 	db	49	;'1'
   494  00FF4E  30                 	db	48	;'0'
   495  00FF4F  20                 	db	32
   496  00FF50  0D                 	db	13
   497  00FF51  0A                 	db	10
   498  00FF52  00                 	db	0
   499  00FF53                     STR_21:
   500  00FF53  20                 	db	32
   501  00FF54  73                 	db	115	;'s'
   502  00FF55  74                 	db	116	;'t'
   503  00FF56  65                 	db	101	;'e'
   504  00FF57  70                 	db	112	;'p'
   505  00FF58  20                 	db	32
   506  00FF59  32                 	db	50	;'2'
   507  00FF5A  30                 	db	48	;'0'
   508  00FF5B  20                 	db	32
   509  00FF5C  0D                 	db	13
   510  00FF5D  0A                 	db	10
   511  00FF5E  00                 	db	0
   512  00FF5F                     STR_12:
   513  00FF5F  20                 	db	32
   514  00FF60  73                 	db	115	;'s'
   515  00FF61  74                 	db	116	;'t'
   516  00FF62  65                 	db	101	;'e'
   517  00FF63  70                 	db	112	;'p'
   518  00FF64  20                 	db	32
   519  00FF65  31                 	db	49	;'1'
   520  00FF66  31                 	db	49	;'1'
   521  00FF67  20                 	db	32
   522  00FF68  0D                 	db	13
   523  00FF69  0A                 	db	10
   524  00FF6A  00                 	db	0
   525  00FF6B                     STR_13:
   526  00FF6B  20                 	db	32
   527  00FF6C  73                 	db	115	;'s'
   528  00FF6D  74                 	db	116	;'t'
   529  00FF6E  65                 	db	101	;'e'
   530  00FF6F  70                 	db	112	;'p'
   531  00FF70  20                 	db	32
   532  00FF71  31                 	db	49	;'1'
   533  00FF72  32                 	db	50	;'2'
   534  00FF73  20                 	db	32
   535  00FF74  0D                 	db	13
   536  00FF75  0A                 	db	10
   537  00FF76  00                 	db	0
   538  00FF77                     STR_15:
   539  00FF77  20                 	db	32
   540  00FF78  73                 	db	115	;'s'
   541  00FF79  74                 	db	116	;'t'
   542  00FF7A  65                 	db	101	;'e'
   543  00FF7B  70                 	db	112	;'p'
   544  00FF7C  20                 	db	32
   545  00FF7D  31                 	db	49	;'1'
   546  00FF7E  34                 	db	52	;'4'
   547  00FF7F  20                 	db	32
   548  00FF80  0D                 	db	13
   549  00FF81  0A                 	db	10
   550  00FF82  00                 	db	0
   551  00FF83                     STR_16:
   552  00FF83  20                 	db	32
   553  00FF84  73                 	db	115	;'s'
   554  00FF85  74                 	db	116	;'t'
   555  00FF86  65                 	db	101	;'e'
   556  00FF87  70                 	db	112	;'p'
   557  00FF88  20                 	db	32
   558  00FF89  31                 	db	49	;'1'
   559  00FF8A  35                 	db	53	;'5'
   560  00FF8B  20                 	db	32
   561  00FF8C  0D                 	db	13
   562  00FF8D  0A                 	db	10
   563  00FF8E  00                 	db	0
   564  00FF8F                     STR_17:
   565  00FF8F  20                 	db	32
   566  00FF90  73                 	db	115	;'s'
   567  00FF91  74                 	db	116	;'t'
   568  00FF92  65                 	db	101	;'e'
   569  00FF93  70                 	db	112	;'p'
   570  00FF94  20                 	db	32
   571  00FF95  31                 	db	49	;'1'
   572  00FF96  36                 	db	54	;'6'
   573  00FF97  20                 	db	32
   574  00FF98  0D                 	db	13
   575  00FF99  0A                 	db	10
   576  00FF9A  00                 	db	0
   577  00FF9B                     STR_20:
   578  00FF9B  20                 	db	32
   579  00FF9C  73                 	db	115	;'s'
   580  00FF9D  74                 	db	116	;'t'
   581  00FF9E  65                 	db	101	;'e'
   582  00FF9F  70                 	db	112	;'p'
   583  00FFA0  20                 	db	32
   584  00FFA1  31                 	db	49	;'1'
   585  00FFA2  39                 	db	57	;'9'
   586  00FFA3  20                 	db	32
   587  00FFA4  0D                 	db	13
   588  00FFA5  0A                 	db	10
   589  00FFA6  00                 	db	0
   590  00FFA7                     STR_3:
   591  00FFA7  20                 	db	32
   592  00FFA8  73                 	db	115	;'s'
   593  00FFA9  74                 	db	116	;'t'
   594  00FFAA  65                 	db	101	;'e'
   595  00FFAB  70                 	db	112	;'p'
   596  00FFAC  20                 	db	32
   597  00FFAD  32                 	db	50	;'2'
   598  00FFAE  20                 	db	32
   599  00FFAF  0D                 	db	13
   600  00FFB0  0A                 	db	10
   601  00FFB1  00                 	db	0
   602  00FFB2                     STR_24:
   603  00FFB2  20                 	db	32
   604  00FFB3  73                 	db	115	;'s'
   605  00FFB4  74                 	db	116	;'t'
   606  00FFB5  65                 	db	101	;'e'
   607  00FFB6  70                 	db	112	;'p'
   608  00FFB7  20                 	db	32
   609  00FFB8  33                 	db	51	;'3'
   610  00FFB9  20                 	db	32
   611  00FFBA  0D                 	db	13
   612  00FFBB  0A                 	db	10
   613  00FFBC  00                 	db	0
   614  00FFBD                     STR_5:
   615  00FFBD  20                 	db	32
   616  00FFBE  73                 	db	115	;'s'
   617  00FFBF  74                 	db	116	;'t'
   618  00FFC0  65                 	db	101	;'e'
   619  00FFC1  70                 	db	112	;'p'
   620  00FFC2  20                 	db	32
   621  00FFC3  34                 	db	52	;'4'
   622  00FFC4  20                 	db	32
   623  00FFC5  0D                 	db	13
   624  00FFC6  0A                 	db	10
   625  00FFC7  00                 	db	0
   626  00FFC8                     STR_6:
   627  00FFC8  20                 	db	32
   628  00FFC9  73                 	db	115	;'s'
   629  00FFCA  74                 	db	116	;'t'
   630  00FFCB  65                 	db	101	;'e'
   631  00FFCC  70                 	db	112	;'p'
   632  00FFCD  20                 	db	32
   633  00FFCE  35                 	db	53	;'5'
   634  00FFCF  20                 	db	32
   635  00FFD0  0D                 	db	13
   636  00FFD1  0A                 	db	10
   637  00FFD2  00                 	db	0
   638  00FFD3                     STR_7:
   639  00FFD3  20                 	db	32
   640  00FFD4  73                 	db	115	;'s'
   641  00FFD5  74                 	db	116	;'t'
   642  00FFD6  65                 	db	101	;'e'
   643  00FFD7  70                 	db	112	;'p'
   644  00FFD8  20                 	db	32
   645  00FFD9  36                 	db	54	;'6'
   646  00FFDA  20                 	db	32
   647  00FFDB  0D                 	db	13
   648  00FFDC  0A                 	db	10
   649  00FFDD  00                 	db	0
   650  00FFDE                     STR_8:
   651  00FFDE  20                 	db	32
   652  00FFDF  73                 	db	115	;'s'
   653  00FFE0  74                 	db	116	;'t'
   654  00FFE1  65                 	db	101	;'e'
   655  00FFE2  70                 	db	112	;'p'
   656  00FFE3  20                 	db	32
   657  00FFE4  37                 	db	55	;'7'
   658  00FFE5  20                 	db	32
   659  00FFE6  0D                 	db	13
   660  00FFE7  0A                 	db	10
   661  00FFE8  00                 	db	0
   662  00FFE9                     STR_29:
   663  00FFE9  20                 	db	32
   664  00FFEA  73                 	db	115	;'s'
   665  00FFEB  74                 	db	116	;'t'
   666  00FFEC  65                 	db	101	;'e'
   667  00FFED  70                 	db	112	;'p'
   668  00FFEE  20                 	db	32
   669  00FFEF  38                 	db	56	;'8'
   670  00FFF0  20                 	db	32
   671  00FFF1  0D                 	db	13
   672  00FFF2  0A                 	db	10
   673  00FFF3  00                 	db	0
   674  00FFF4                     STR_10:
   675  00FFF4  20                 	db	32
   676  00FFF5  73                 	db	115	;'s'
   677  00FFF6  74                 	db	116	;'t'
   678  00FFF7  65                 	db	101	;'e'
   679  00FFF8  70                 	db	112	;'p'
   680  00FFF9  20                 	db	32
   681  00FFFA  39                 	db	57	;'9'
   682  00FFFB  20                 	db	32
   683  00FFFC  0D                 	db	13
   684  00FFFD  0A                 	db	10
   685  00FFFE  00                 	db	0
   686  0000                     
   687                           ; #config settings
   688  00FFFF  00                 	db	0	; dummy byte at the end
   689  0000                     
   690                           	psect	cinit
   691  00E08A                     __pcinit:
   692                           	opt stack 0
   693  00E08A                     start_initialization:
   694                           	opt stack 0
   695  00E08A                     __initialization:
   696                           	opt stack 0
   697                           
   698                           ; Initialize objects allocated to COMRAM (10 bytes)
   699                           ; load TBLPTR registers with __pidataCOMRAM
   700  00E08A  0E2C               	movlw	low __pidataCOMRAM
   701  00E08C  6EF6               	movwf	tblptrl,c
   702  00E08E  0EDF               	movlw	high __pidataCOMRAM
   703  00E090  6EF7               	movwf	tblptrh,c
   704  00E092  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   705  00E094  6EF8               	movwf	tblptru,c
   706  00E096  EE00  F06B         	lfsr	0,__pdataCOMRAM
   707  00E09A  EE10 F00A          	lfsr	1,10
   708  00E09E                     copy_data0:
   709  00E09E  0009               	tblrd		*+
   710  00E0A0  CFF5 FFEE          	movff	tablat,postinc0
   711  00E0A4  50E5               	movf	postdec1,w,c
   712  00E0A6  50E1               	movf	fsr1l,w,c
   713  00E0A8  E1FA               	bnz	copy_data0
   714  00E0AA                     end_of_initialization:
   715                           	opt stack 0
   716  00E0AA                     __end_of__initialization:
   717                           	opt stack 0
   718  00E0AA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   719  00E0AC  6EF8               	movwf	tblptru,c
   720  00E0AE  0100               	movlb	0
   721  00E0B0  EF54  F073         	goto	_main	;jump to C main() function
   722                           tblptru	equ	0xFF8
   723                           tblptrh	equ	0xFF7
   724                           tblptrl	equ	0xFF6
   725                           tablat	equ	0xFF5
   726                           postinc0	equ	0xFEE
   727                           postdec1	equ	0xFE5
   728                           fsr1l	equ	0xFE1
   729                           
   730                           	psect	dataCOMRAM
   731  00006B                     __pdataCOMRAM:
   732                           	opt stack 0
   733  00006B                     _LED_7seg:
   734                           	opt stack 0
   735  00006B                     	ds	10
   736                           tblptru	equ	0xFF8
   737                           tblptrh	equ	0xFF7
   738                           tblptrl	equ	0xFF6
   739                           tablat	equ	0xFF5
   740                           postinc0	equ	0xFEE
   741                           postdec1	equ	0xFE5
   742                           fsr1l	equ	0xFE1
   743                           
   744                           	psect	cstackCOMRAM
   745  000001                     __pcstackCOMRAM:
   746                           	opt stack 0
   747  000001                     ?_get_full_ADC:
   748                           	opt stack 0
   749  000001                     ?___awmod:
   750                           	opt stack 0
   751  000001                     ?___ftpack:
   752                           	opt stack 0
   753  000001                     ?___ftneg:
   754                           	opt stack 0
   755  000001                     ?__tdiv_to_l_:
   756                           	opt stack 0
   757  000001                     ?__div_to_l_:
   758                           	opt stack 0
   759  000001                     ?___lldiv:
   760                           	opt stack 0
   761  000001                     ?___llmod:
   762                           	opt stack 0
   763  000001                     putch@c:
   764                           	opt stack 0
   765  000001                     select_ADC_CH@AN_pin:
   766                           	opt stack 0
   767  000001                     Wait_N_Seconds@seconds:
   768                           	opt stack 0
   769  000001                     Set_NS@color:
   770                           	opt stack 0
   771  000001                     Set_NSLT@color:
   772                           	opt stack 0
   773  000001                     Set_EW@color:
   774                           	opt stack 0
   775  000001                     Set_EWLT@color:
   776                           	opt stack 0
   777  000001                     PED_Control@num_sec:
   778                           	opt stack 0
   779  000001                     OpenUSART@spbrg:
   780                           	opt stack 0
   781  000001                     ___awmod@dividend:
   782                           	opt stack 0
   783  000001                     __div_to_l_@f1:
   784                           	opt stack 0
   785  000001                     ___ftpack@arg:
   786                           	opt stack 0
   787  000001                     __tdiv_to_l_@f1:
   788                           	opt stack 0
   789  000001                     ___ftge@ff1:
   790                           	opt stack 0
   791  000001                     ___ftneg@f1:
   792                           	opt stack 0
   793  000001                     ___lldiv@dividend:
   794                           	opt stack 0
   795  000001                     ___llmod@dividend:
   796                           	opt stack 0
   797                           
   798                           ; 4 bytes @ 0x0
   799  000001                     	ds	1
   800  000002                     Wait_N_Seconds@I:
   801                           	opt stack 0
   802  000002                     PED_Control@direction:
   803                           	opt stack 0
   804                           
   805                           ; 1 bytes @ 0x1
   806  000002                     	ds	1
   807  000003                     ??_get_full_ADC:
   808  000003                     OpenUSART@config:
   809                           	opt stack 0
   810  000003                     PED_Control@i:
   811                           	opt stack 0
   812  000003                     ___awmod@divisor:
   813                           	opt stack 0
   814                           
   815                           ; 2 bytes @ 0x2
   816  000003                     	ds	1
   817  000004                     ___ftpack@exp:
   818                           	opt stack 0
   819  000004                     __div_to_l_@f2:
   820                           	opt stack 0
   821  000004                     __tdiv_to_l_@f2:
   822                           	opt stack 0
   823  000004                     ___ftge@ff2:
   824                           	opt stack 0
   825                           
   826                           ; 3 bytes @ 0x3
   827  000004                     	ds	1
   828  000005                     ___awmod@counter:
   829                           	opt stack 0
   830  000005                     ___ftpack@sign:
   831                           	opt stack 0
   832  000005                     get_full_ADC@result:
   833                           	opt stack 0
   834  000005                     PED_Control@j:
   835                           	opt stack 0
   836  000005                     ___lldiv@divisor:
   837                           	opt stack 0
   838  000005                     ___llmod@divisor:
   839                           	opt stack 0
   840                           
   841                           ; 4 bytes @ 0x4
   842  000005                     	ds	1
   843  000006                     ??___ftpack:
   844  000006                     ___awmod@sign:
   845                           	opt stack 0
   846                           
   847                           ; 1 bytes @ 0x5
   848  000006                     	ds	1
   849  000007                     ??__tdiv_to_l_:
   850  000007                     ??___ftge:
   851  000007                     ?___awdiv:
   852                           	opt stack 0
   853  000007                     ___awdiv@dividend:
   854                           	opt stack 0
   855  000007                     __div_to_l_@quot:
   856                           	opt stack 0
   857                           
   858                           ; 4 bytes @ 0x6
   859  000007                     	ds	2
   860  000009                     ?___lltoft:
   861                           	opt stack 0
   862  000009                     ?___lwtoft:
   863                           	opt stack 0
   864  000009                     ___llmod@counter:
   865                           	opt stack 0
   866  000009                     ___awdiv@divisor:
   867                           	opt stack 0
   868  000009                     ___lwtoft@c:
   869                           	opt stack 0
   870  000009                     ___lldiv@quotient:
   871                           	opt stack 0
   872  000009                     ___lltoft@c:
   873                           	opt stack 0
   874                           
   875                           ; 4 bytes @ 0x8
   876  000009                     	ds	1
   877  00000A                     __tdiv_to_l_@quot:
   878                           	opt stack 0
   879                           
   880                           ; 4 bytes @ 0x9
   881  00000A                     	ds	1
   882  00000B                     ___awdiv@counter:
   883                           	opt stack 0
   884  00000B                     __div_to_l_@cntr:
   885                           	opt stack 0
   886                           
   887                           ; 1 bytes @ 0xA
   888  00000B                     	ds	1
   889  00000C                     ___awdiv@sign:
   890                           	opt stack 0
   891  00000C                     __div_to_l_@exp1:
   892                           	opt stack 0
   893                           
   894                           ; 1 bytes @ 0xB
   895  00000C                     	ds	1
   896  00000D                     ??___lltoft:
   897  00000D                     ___lldiv@counter:
   898                           	opt stack 0
   899  00000D                     ___awdiv@quotient:
   900                           	opt stack 0
   901                           
   902                           ; 2 bytes @ 0xC
   903  00000D                     	ds	1
   904  00000E                     __tdiv_to_l_@cntr:
   905                           	opt stack 0
   906                           
   907                           ; 1 bytes @ 0xD
   908  00000E                     	ds	1
   909  00000F                     ?___wmul:
   910                           	opt stack 0
   911  00000F                     __tdiv_to_l_@exp1:
   912                           	opt stack 0
   913  00000F                     ___wmul@multiplier:
   914                           	opt stack 0
   915                           
   916                           ; 2 bytes @ 0xE
   917  00000F                     	ds	2
   918  000011                     ___lltoft@exp:
   919                           	opt stack 0
   920  000011                     ___wmul@multiplicand:
   921                           	opt stack 0
   922                           
   923                           ; 2 bytes @ 0x10
   924  000011                     	ds	2
   925  000013                     ___wmul@product:
   926                           	opt stack 0
   927                           
   928                           ; 2 bytes @ 0x12
   929  000013                     	ds	2
   930  000015                     ?___ftmul:
   931                           	opt stack 0
   932  000015                     ___ftmul@f1:
   933                           	opt stack 0
   934                           
   935                           ; 3 bytes @ 0x14
   936  000015                     	ds	3
   937  000018                     ___ftmul@f2:
   938                           	opt stack 0
   939                           
   940                           ; 3 bytes @ 0x17
   941  000018                     	ds	3
   942  00001B                     ??___ftmul:
   943                           
   944                           ; 0 bytes @ 0x1A
   945  00001B                     	ds	3
   946  00001E                     ___ftmul@exp:
   947                           	opt stack 0
   948                           
   949                           ; 1 bytes @ 0x1D
   950  00001E                     	ds	1
   951  00001F                     ___ftmul@f3_as_product:
   952                           	opt stack 0
   953                           
   954                           ; 3 bytes @ 0x1E
   955  00001F                     	ds	3
   956  000022                     ___ftmul@cntr:
   957                           	opt stack 0
   958                           
   959                           ; 1 bytes @ 0x21
   960  000022                     	ds	1
   961  000023                     ___ftmul@sign:
   962                           	opt stack 0
   963                           
   964                           ; 1 bytes @ 0x22
   965  000023                     	ds	1
   966  000024                     ?___ftdiv:
   967                           	opt stack 0
   968  000024                     ?_fround:
   969                           	opt stack 0
   970  000024                     ?_scale:
   971                           	opt stack 0
   972  000024                     ___ftdiv@f1:
   973                           	opt stack 0
   974                           
   975                           ; 3 bytes @ 0x23
   976  000024                     	ds	3
   977  000027                     ___ftdiv@f2:
   978                           	opt stack 0
   979  000027                     _fround$1714:
   980                           	opt stack 0
   981  000027                     _scale$1715:
   982                           	opt stack 0
   983                           
   984                           ; 3 bytes @ 0x26
   985  000027                     	ds	3
   986  00002A                     ??___ftdiv:
   987  00002A                     scale@scl:
   988                           	opt stack 0
   989  00002A                     _fround$1713:
   990                           	opt stack 0
   991                           
   992                           ; 3 bytes @ 0x29
   993  00002A                     	ds	1
   994  00002B                     ?___fttol:
   995                           	opt stack 0
   996  00002B                     ___fttol@f1:
   997                           	opt stack 0
   998                           
   999                           ; 3 bytes @ 0x2A
  1000  00002B                     	ds	2
  1001  00002D                     fround@prec:
  1002                           	opt stack 0
  1003  00002D                     ___ftdiv@cntr:
  1004                           	opt stack 0
  1005                           
  1006                           ; 1 bytes @ 0x2C
  1007  00002D                     	ds	1
  1008  00002E                     ?___ftadd:
  1009                           	opt stack 0
  1010  00002E                     ___ftadd@f1:
  1011                           	opt stack 0
  1012  00002E                     ___ftdiv@f3:
  1013                           	opt stack 0
  1014                           
  1015                           ; 3 bytes @ 0x2D
  1016  00002E                     	ds	1
  1017  00002F                     ??___fttol:
  1018                           
  1019                           ; 0 bytes @ 0x2E
  1020  00002F                     	ds	2
  1021  000031                     ___ftdiv@exp:
  1022                           	opt stack 0
  1023  000031                     ___ftadd@f2:
  1024                           	opt stack 0
  1025                           
  1026                           ; 3 bytes @ 0x30
  1027  000031                     	ds	1
  1028  000032                     ___ftdiv@sign:
  1029                           	opt stack 0
  1030                           
  1031                           ; 1 bytes @ 0x31
  1032  000032                     	ds	2
  1033  000034                     ??___ftadd:
  1034  000034                     ___fttol@sign1:
  1035                           	opt stack 0
  1036                           
  1037                           ; 1 bytes @ 0x33
  1038  000034                     	ds	1
  1039  000035                     ___fttol@lval:
  1040                           	opt stack 0
  1041                           
  1042                           ; 4 bytes @ 0x34
  1043  000035                     	ds	2
  1044  000037                     ___ftadd@sign:
  1045                           	opt stack 0
  1046                           
  1047                           ; 1 bytes @ 0x36
  1048  000037                     	ds	1
  1049  000038                     ___ftadd@exp2:
  1050                           	opt stack 0
  1051                           
  1052                           ; 1 bytes @ 0x37
  1053  000038                     	ds	1
  1054  000039                     ___ftadd@exp1:
  1055                           	opt stack 0
  1056  000039                     ___fttol@exp1:
  1057                           	opt stack 0
  1058                           
  1059                           ; 1 bytes @ 0x38
  1060  000039                     	ds	1
  1061  00003A                     ?___ftsub:
  1062                           	opt stack 0
  1063  00003A                     ___ftsub@f1:
  1064                           	opt stack 0
  1065                           
  1066                           ; 3 bytes @ 0x39
  1067  00003A                     	ds	3
  1068  00003D                     ___ftsub@f2:
  1069                           	opt stack 0
  1070                           
  1071                           ; 3 bytes @ 0x3C
  1072  00003D                     	ds	3
  1073  000040                     ?_printf:
  1074                           	opt stack 0
  1075  000040                     printf@f:
  1076                           	opt stack 0
  1077                           
  1078                           ; 2 bytes @ 0x3F
  1079  000040                     	ds	5
  1080  000045                     ??_printf:
  1081                           
  1082                           ; 0 bytes @ 0x44
  1083  000045                     	ds	6
  1084  00004B                     _printf$1716:
  1085                           	opt stack 0
  1086                           
  1087                           ; 3 bytes @ 0x4A
  1088  00004B                     	ds	3
  1089  00004E                     printf@ap:
  1090                           	opt stack 0
  1091                           
  1092                           ; 2 bytes @ 0x4D
  1093  00004E                     	ds	2
  1094  000050                     printf@flag:
  1095                           	opt stack 0
  1096                           
  1097                           ; 2 bytes @ 0x4F
  1098  000050                     	ds	2
  1099  000052                     printf@prec:
  1100                           	opt stack 0
  1101                           
  1102                           ; 2 bytes @ 0x51
  1103  000052                     	ds	2
  1104  000054                     printf@val:
  1105                           	opt stack 0
  1106                           
  1107                           ; 4 bytes @ 0x53
  1108  000054                     	ds	4
  1109  000058                     printf@exp:
  1110                           	opt stack 0
  1111                           
  1112                           ; 2 bytes @ 0x57
  1113  000058                     	ds	2
  1114  00005A                     printf@tmpval:
  1115                           	opt stack 0
  1116                           
  1117                           ; 4 bytes @ 0x59
  1118  00005A                     	ds	4
  1119  00005E                     printf@fval:
  1120                           	opt stack 0
  1121                           
  1122                           ; 3 bytes @ 0x5D
  1123  00005E                     	ds	3
  1124  000061                     printf@c:
  1125                           	opt stack 0
  1126                           
  1127                           ; 1 bytes @ 0x60
  1128  000061                     	ds	1
  1129  000062                     ??_Day_Mode:
  1130  000062                     ??_Night_Mode:
  1131                           
  1132                           ; 0 bytes @ 0x61
  1133  000062                     	ds	1
  1134  000063                     main@nStep:
  1135                           	opt stack 0
  1136                           
  1137                           ; 3 bytes @ 0x62
  1138  000063                     	ds	3
  1139  000066                     main@MODE:
  1140                           	opt stack 0
  1141                           
  1142                           ; 2 bytes @ 0x65
  1143  000066                     	ds	2
  1144  000068                     main@volt:
  1145                           	opt stack 0
  1146                           
  1147                           ; 3 bytes @ 0x67
  1148  000068                     	ds	3
  1149                           tblptru	equ	0xFF8
  1150                           tblptrh	equ	0xFF7
  1151                           tblptrl	equ	0xFF6
  1152                           tablat	equ	0xFF5
  1153                           postinc0	equ	0xFEE
  1154                           postdec1	equ	0xFE5
  1155                           fsr1l	equ	0xFE1
  1156                           
  1157 ;;
  1158 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1159 ;;
  1160 ;; *************** function _main *****************
  1161 ;; Defined at:
  1162 ;;		line 72 in file "lab7p1.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;		None
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;  volt            3  103[COMRAM] float 
  1167 ;;  nStep           3   98[COMRAM] float 
  1168 ;;  MODE            2  101[COMRAM] unsigned int 
  1169 ;; Return value:  Size  Location     Type
  1170 ;;		None               void
  1171 ;; Registers used:
  1172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1179 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1181 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1182 ;;Total ram usage:        8 bytes
  1183 ;; Hardware stack levels required when called:    5
  1184 ;; This function calls:
  1185 ;;		_Day_Mode
  1186 ;;		_Init_ADC
  1187 ;;		_Init_TRIS
  1188 ;;		_Night_Mode
  1189 ;;		___ftdiv
  1190 ;;		___ftge
  1191 ;;		___ftmul
  1192 ;;		___lwtoft
  1193 ;;		_get_full_ADC
  1194 ;;		_init_UART
  1195 ;;		_printf
  1196 ;;		_select_ADC_CH
  1197 ;; This function is called by:
  1198 ;;		Startup code after reset
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           	psect	text0
  1203  00E6A8                     __ptext0:
  1204                           	opt stack 0
  1205  00E6A8                     _main:
  1206                           	opt stack 26
  1207                           
  1208                           ;lab7p1.c: 74: init_UART();
  1209                           
  1210                           ;incstack = 0
  1211  00E6A8  ECBF  F06F         	call	_init_UART	;wreg free
  1212                           
  1213                           ;lab7p1.c: 75: Init_ADC();
  1214  00E6AC  ECAF  F06F         	call	_Init_ADC	;wreg free
  1215                           
  1216                           ;lab7p1.c: 76: Init_TRIS();
  1217  00E6B0  ECD4  F06F         	call	_Init_TRIS	;wreg free
  1218  00E6B4  D000               	goto	l3028
  1219  00E6B6                     l3028:
  1220                           
  1221                           ;lab7p1.c: 104: {
  1222                           ;lab7p1.c: 105: select_ADC_CH(0);
  1223  00E6B6  0E00               	movlw	0
  1224  00E6B8  EC9B  F06F         	call	_select_ADC_CH
  1225                           
  1226                           ;lab7p1.c: 106: float nStep = get_full_ADC();
  1227  00E6BC  EC1E  F070         	call	_get_full_ADC	;wreg free
  1228  00E6C0  C001  F009         	movff	?_get_full_ADC,___lwtoft@c
  1229  00E6C4  C002  F00A         	movff	?_get_full_ADC+1,___lwtoft@c+1
  1230  00E6C8  EC0B  F070         	call	___lwtoft	;wreg free
  1231  00E6CC  C009  F063         	movff	?___lwtoft,main@nStep
  1232  00E6D0  C00A  F064         	movff	?___lwtoft+1,main@nStep+1
  1233  00E6D4  C00B  F065         	movff	?___lwtoft+2,main@nStep+2
  1234                           
  1235                           ;lab7p1.c: 107: float volt = nStep * 5/1024.0;
  1236  00E6D8  0E00               	movlw	0
  1237  00E6DA  6E18               	movwf	___ftmul@f2,c
  1238  00E6DC  0EA0               	movlw	160
  1239  00E6DE  6E19               	movwf	___ftmul@f2+1,c
  1240  00E6E0  0E40               	movlw	64
  1241  00E6E2  6E1A               	movwf	___ftmul@f2+2,c
  1242  00E6E4  C063  F015         	movff	main@nStep,___ftmul@f1
  1243  00E6E8  C064  F016         	movff	main@nStep+1,___ftmul@f1+1
  1244  00E6EC  C065  F017         	movff	main@nStep+2,___ftmul@f1+2
  1245  00E6F0  ECA1  F074         	call	___ftmul	;wreg free
  1246  00E6F4  C015  F024         	movff	?___ftmul,___ftdiv@f1
  1247  00E6F8  C016  F025         	movff	?___ftmul+1,___ftdiv@f1+1
  1248  00E6FC  C017  F026         	movff	?___ftmul+2,___ftdiv@f1+2
  1249  00E700  0E00               	movlw	0
  1250  00E702  6E27               	movwf	___ftdiv@f2,c
  1251  00E704  0E80               	movlw	128
  1252  00E706  6E28               	movwf	___ftdiv@f2+1,c
  1253  00E708  0E44               	movlw	68
  1254  00E70A  6E29               	movwf	___ftdiv@f2+2,c
  1255  00E70C  ECBD  F073         	call	___ftdiv	;wreg free
  1256  00E710  C024  F068         	movff	?___ftdiv,main@volt
  1257  00E714  C025  F069         	movff	?___ftdiv+1,main@volt+1
  1258  00E718  C026  F06A         	movff	?___ftdiv+2,main@volt+2
  1259                           
  1260                           ;lab7p1.c: 108: unsigned int MODE = volt < 2.5 ? 1:0;
  1261  00E71C  C068  F001         	movff	main@volt,___ftge@ff1
  1262  00E720  C069  F002         	movff	main@volt+1,___ftge@ff1+1
  1263  00E724  C06A  F003         	movff	main@volt+2,___ftge@ff1+2
  1264  00E728  0E00               	movlw	0
  1265  00E72A  6E04               	movwf	___ftge@ff2,c
  1266  00E72C  0E20               	movlw	32
  1267  00E72E  6E05               	movwf	___ftge@ff2+1,c
  1268  00E730  0E40               	movlw	64
  1269  00E732  6E06               	movwf	___ftge@ff2+2,c
  1270  00E734  EC0F  F072         	call	___ftge	;wreg free
  1271  00E738  B0D8               	btfsc	status,0,c
  1272  00E73A  D002               	goto	u3110
  1273  00E73C  0E01               	movlw	1
  1274  00E73E  D001               	goto	u3120
  1275  00E740                     u3110:
  1276  00E740  0E00               	movlw	0
  1277  00E742                     u3120:
  1278  00E742  6E66               	movwf	main@MODE,c
  1279  00E744  6A67               	clrf	main@MODE+1,c
  1280                           
  1281                           ;lab7p1.c: 110: printf(" Voltage Photo Resistor = %f \r\n",volt);
  1282  00E746  0E49               	movlw	low STR_1
  1283  00E748  6E40               	movwf	printf@f,c
  1284  00E74A  0EFE               	movlw	high STR_1
  1285  00E74C  6E41               	movwf	printf@f+1,c
  1286  00E74E  C068  F042         	movff	main@volt,?_printf+2
  1287  00E752  C069  F043         	movff	main@volt+1,?_printf+3
  1288  00E756  C06A  F044         	movff	main@volt+2,?_printf+4
  1289  00E75A  ECD6  F07B         	call	_printf	;wreg free
  1290                           
  1291                           ;lab7p1.c: 112: if (MODE)
  1292  00E75E  5066               	movf	main@MODE,w,c
  1293  00E760  1067               	iorwf	main@MODE+1,w,c
  1294  00E762  B4D8               	btfsc	status,2,c
  1295  00E764  D004               	goto	l97
  1296                           
  1297                           ;lab7p1.c: 113: {
  1298                           ;lab7p1.c: 114: PORTEbits.RE0 = 1;
  1299  00E766  8084               	bsf	3972,0,c	;volatile
  1300                           
  1301                           ;lab7p1.c: 115: Day_Mode();
  1302  00E768  ECC1  F077         	call	_Day_Mode	;wreg free
  1303                           
  1304                           ;lab7p1.c: 116: }
  1305  00E76C  D7A4               	goto	l3028
  1306  00E76E                     l97:
  1307                           
  1308                           ;lab7p1.c: 117: else
  1309                           ;lab7p1.c: 118: {
  1310                           ;lab7p1.c: 119: PORTEbits.RE0 = 0;
  1311  00E76E  9084               	bcf	3972,0,c	;volatile
  1312                           
  1313                           ;lab7p1.c: 120: Night_Mode();
  1314  00E770  EC2A  F076         	call	_Night_Mode	;wreg free
  1315  00E774  D7A0               	goto	l3028
  1316  00E776  EF00  F000         	goto	start
  1317  00E77A                     __end_of_main:
  1318                           	opt stack 0
  1319                           tblptru	equ	0xFF8
  1320                           tblptrh	equ	0xFF7
  1321                           tblptrl	equ	0xFF6
  1322                           tablat	equ	0xFF5
  1323                           postinc0	equ	0xFEE
  1324                           postdec1	equ	0xFE5
  1325                           fsr1l	equ	0xFE1
  1326                           status	equ	0xFD8
  1327                           
  1328 ;; *************** function _select_ADC_CH *****************
  1329 ;; Defined at:
  1330 ;;		line 125 in file "lab7p1.c"
  1331 ;; Parameters:    Size  Location     Type
  1332 ;;  AN_pin          1    wreg     unsigned char 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  AN_pin          1    0[COMRAM] unsigned char 
  1335 ;; Return value:  Size  Location     Type
  1336 ;;		None               void
  1337 ;; Registers used:
  1338 ;;		wreg, status,2, status,0, prodl, prodh
  1339 ;; Tracked objects:
  1340 ;;		On entry : 0/0
  1341 ;;		On exit  : 0/0
  1342 ;;		Unchanged: 0/0
  1343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1345 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1347 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1348 ;;Total ram usage:        1 bytes
  1349 ;; Hardware stack levels used:    1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_main
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           	psect	text1
  1358  00DF36                     __ptext1:
  1359                           	opt stack 0
  1360  00DF36                     _select_ADC_CH:
  1361                           	opt stack 30
  1362                           
  1363                           ;incstack = 0
  1364                           ;select_ADC_CH@AN_pin stored from wreg
  1365  00DF36  6E01               	movwf	select_ADC_CH@AN_pin,c
  1366                           
  1367                           ;lab7p1.c: 127: ADCON0 = AN_pin * 4 + 1;
  1368  00DF38  5001               	movf	select_ADC_CH@AN_pin,w,c
  1369  00DF3A  0D04               	mullw	4
  1370  00DF3C  28F3               	incf	prodl,w,c
  1371  00DF3E  6EC2               	movwf	4034,c	;volatile
  1372  00DF40  0012               	return		;funcret
  1373  00DF42                     __end_of_select_ADC_CH:
  1374                           	opt stack 0
  1375                           tblptru	equ	0xFF8
  1376                           tblptrh	equ	0xFF7
  1377                           tblptrl	equ	0xFF6
  1378                           tablat	equ	0xFF5
  1379                           prodl	equ	0xFF3
  1380                           postinc0	equ	0xFEE
  1381                           postdec1	equ	0xFE5
  1382                           fsr1l	equ	0xFE1
  1383                           status	equ	0xFD8
  1384                           
  1385 ;; *************** function _init_UART *****************
  1386 ;; Defined at:
  1387 ;;		line 58 in file "lab7p1.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;		None
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;		None
  1392 ;; Return value:  Size  Location     Type
  1393 ;;		None               void
  1394 ;; Registers used:
  1395 ;;		wreg, status,2, cstack
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1405 ;;Total ram usage:        0 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    1
  1408 ;; This function calls:
  1409 ;;		_OpenUSART
  1410 ;; This function is called by:
  1411 ;;		_main
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           	psect	text2
  1416  00DF7E                     __ptext2:
  1417                           	opt stack 0
  1418  00DF7E                     _init_UART:
  1419                           	opt stack 29
  1420                           
  1421                           ;lab7p1.c: 60: OpenUSART (0b01111111 & 0b10111111 &
  1422                           ;lab7p1.c: 61: 0b11111110 & 0b11111101 & 0b11111111 &
  1423                           ;lab7p1.c: 62: 0b11111111, 25);
  1424                           
  1425                           ;incstack = 0
  1426  00DF7E  0E00               	movlw	0
  1427  00DF80  6E02               	movwf	OpenUSART@spbrg+1,c
  1428  00DF82  0E19               	movlw	25
  1429  00DF84  6E01               	movwf	OpenUSART@spbrg,c
  1430  00DF86  0E3C               	movlw	60
  1431  00DF88  EC50  F071         	call	_OpenUSART
  1432                           
  1433                           ;lab7p1.c: 63: OSCCON = 0x70;
  1434  00DF8C  0E70               	movlw	112
  1435  00DF8E  6ED3               	movwf	4051,c	;volatile
  1436  00DF90  0012               	return		;funcret
  1437  00DF92                     __end_of_init_UART:
  1438                           	opt stack 0
  1439                           tblptru	equ	0xFF8
  1440                           tblptrh	equ	0xFF7
  1441                           tblptrl	equ	0xFF6
  1442                           tablat	equ	0xFF5
  1443                           prodl	equ	0xFF3
  1444                           postinc0	equ	0xFEE
  1445                           postdec1	equ	0xFE5
  1446                           fsr1l	equ	0xFE1
  1447                           status	equ	0xFD8
  1448                           
  1449 ;; *************** function _OpenUSART *****************
  1450 ;; Defined at:
  1451 ;;		line 73 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  config          1    wreg     unsigned char 
  1454 ;;  spbrg           2    0[COMRAM] unsigned int 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  config          1    2[COMRAM] unsigned char 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;		None               void
  1459 ;; Registers used:
  1460 ;;		wreg, status,2
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1469 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1470 ;;Total ram usage:        3 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_init_UART
  1476 ;; This function uses a non-reentrant model
  1477 ;;
  1478                           
  1479                           	psect	text3
  1480  00E2A0                     __ptext3:
  1481                           	opt stack 0
  1482  00E2A0                     _OpenUSART:
  1483                           	opt stack 29
  1484                           
  1485                           ;incstack = 0
  1486                           ;OpenUSART@config stored from wreg
  1487  00E2A0  6E03               	movwf	OpenUSART@config,c
  1488  00E2A2  0E00               	movlw	0
  1489  00E2A4  6EAC               	movwf	4012,c	;volatile
  1490  00E2A6  0E00               	movlw	0
  1491  00E2A8  6EAB               	movwf	4011,c	;volatile
  1492  00E2AA  A003               	btfss	OpenUSART@config,0,c
  1493  00E2AC  D002               	goto	l2588
  1494  00E2AE  88AC               	bsf	4012,4,c	;volatile
  1495  00E2B0  D000               	goto	l2588
  1496  00E2B2                     l2588:
  1497  00E2B2  A203               	btfss	OpenUSART@config,1,c
  1498  00E2B4  D003               	goto	l2592
  1499  00E2B6  8CAC               	bsf	4012,6,c	;volatile
  1500  00E2B8  8CAB               	bsf	4011,6,c	;volatile
  1501  00E2BA  D000               	goto	l2592
  1502  00E2BC                     l2592:
  1503  00E2BC  A403               	btfss	OpenUSART@config,2,c
  1504  00E2BE  D002               	goto	l2596
  1505  00E2C0  8EAC               	bsf	4012,7,c	;volatile
  1506  00E2C2  D000               	goto	l2596
  1507  00E2C4                     l2596:
  1508  00E2C4  A603               	btfss	OpenUSART@config,3,c
  1509  00E2C6  D002               	goto	l309
  1510  00E2C8  88AB               	bsf	4011,4,c	;volatile
  1511  00E2CA  D002               	goto	l2600
  1512  00E2CC                     l309:
  1513  00E2CC  8AAB               	bsf	4011,5,c	;volatile
  1514  00E2CE  D000               	goto	l2600
  1515  00E2D0                     l2600:
  1516  00E2D0  B803               	btfsc	OpenUSART@config,4,c
  1517  00E2D2  84AC               	bsf	4012,2,c	;volatile
  1518  00E2D4  989E               	bcf	3998,4,c	;volatile
  1519  00E2D6  AA03               	btfss	OpenUSART@config,5,c
  1520  00E2D8  D002               	goto	l2608
  1521  00E2DA  86AB               	bsf	4011,3,c	;volatile
  1522  00E2DC  D000               	goto	l2608
  1523  00E2DE                     l2608:
  1524  00E2DE  AC03               	btfss	OpenUSART@config,6,c
  1525  00E2E0  D002               	goto	l313
  1526  00E2E2  8A9D               	bsf	3997,5,c	;volatile
  1527  00E2E4  D001               	goto	l314
  1528  00E2E6                     l313:
  1529  00E2E6  9A9D               	bcf	3997,5,c	;volatile
  1530  00E2E8                     l314:
  1531  00E2E8  9A9E               	bcf	3998,5,c	;volatile
  1532  00E2EA  AE03               	btfss	OpenUSART@config,7,c
  1533  00E2EC  D002               	goto	l315
  1534  00E2EE  889D               	bsf	3997,4,c	;volatile
  1535  00E2F0  D001               	goto	l316
  1536  00E2F2                     l315:
  1537  00E2F2  989D               	bcf	3997,4,c	;volatile
  1538  00E2F4                     l316:
  1539  00E2F4  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  1540  00E2F8  5002               	movf	OpenUSART@spbrg+1,w,c
  1541  00E2FA  6EB0               	movwf	4016,c	;volatile
  1542  00E2FC  8AAC               	bsf	4012,5,c	;volatile
  1543  00E2FE  8EAB               	bsf	4011,7,c	;volatile
  1544  00E300  9C94               	bcf	3988,6,c	;volatile
  1545  00E302  8E94               	bsf	3988,7,c	;volatile
  1546  00E304  B8AC               	btfsc	4012,4,c	;volatile
  1547  00E306  BEAC               	btfsc	4012,7,c	;volatile
  1548  00E308  D002               	goto	l318
  1549  00E30A  8C94               	bsf	3988,6,c	;volatile
  1550  00E30C  D000               	goto	l318
  1551  00E30E                     l318:
  1552  00E30E  0012               	return		;funcret
  1553  00E310                     __end_of_OpenUSART:
  1554                           	opt stack 0
  1555                           tblptru	equ	0xFF8
  1556                           tblptrh	equ	0xFF7
  1557                           tblptrl	equ	0xFF6
  1558                           tablat	equ	0xFF5
  1559                           prodl	equ	0xFF3
  1560                           postinc0	equ	0xFEE
  1561                           postdec1	equ	0xFE5
  1562                           fsr1l	equ	0xFE1
  1563                           status	equ	0xFD8
  1564                           
  1565 ;; *************** function _get_full_ADC *****************
  1566 ;; Defined at:
  1567 ;;		line 139 in file "lab7p1.c"
  1568 ;; Parameters:    Size  Location     Type
  1569 ;;		None
  1570 ;; Auto vars:     Size  Location     Type
  1571 ;;  result          2    4[COMRAM] int 
  1572 ;; Return value:  Size  Location     Type
  1573 ;;                  2    0[COMRAM] unsigned int 
  1574 ;; Registers used:
  1575 ;;		wreg, status,2, status,0
  1576 ;; Tracked objects:
  1577 ;;		On entry : 0/0
  1578 ;;		On exit  : 0/0
  1579 ;;		Unchanged: 0/0
  1580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1581 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1582 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1583 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1584 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1585 ;;Total ram usage:        6 bytes
  1586 ;; Hardware stack levels used:    1
  1587 ;; This function calls:
  1588 ;;		Nothing
  1589 ;; This function is called by:
  1590 ;;		_main
  1591 ;; This function uses a non-reentrant model
  1592 ;;
  1593                           
  1594                           	psect	text4
  1595  00E03C                     __ptext4:
  1596                           	opt stack 0
  1597  00E03C                     _get_full_ADC:
  1598                           	opt stack 30
  1599                           
  1600                           ;lab7p1.c: 141: int result;
  1601                           ;lab7p1.c: 142: ADCON0bits.GO=1;
  1602                           
  1603                           ;incstack = 0
  1604  00E03C  82C2               	bsf	4034,1,c	;volatile
  1605                           
  1606                           ;lab7p1.c: 143: while(ADCON0bits.DONE==1);
  1607  00E03E  D000               	goto	l110
  1608  00E040                     l110:
  1609  00E040  B2C2               	btfsc	4034,1,c	;volatile
  1610  00E042  D7FE               	goto	l110
  1611                           
  1612                           ;lab7p1.c: 144: result = (ADRESH * 0x100) + ADRESL;
  1613  00E044  50C4               	movf	4036,w,c	;volatile
  1614  00E046  6E04               	movwf	(??_get_full_ADC+1)& (0+255),c
  1615  00E048  6A03               	clrf	??_get_full_ADC& (0+255),c
  1616  00E04A  50C3               	movf	4035,w,c	;volatile
  1617  00E04C  2403               	addwf	??_get_full_ADC,w,c
  1618  00E04E  6E05               	movwf	get_full_ADC@result,c
  1619  00E050  0E00               	movlw	0
  1620  00E052  2004               	addwfc	??_get_full_ADC+1,w,c
  1621  00E054  6E06               	movwf	get_full_ADC@result+1,c
  1622                           
  1623                           ;lab7p1.c: 146: return result;
  1624  00E056  C005  F001         	movff	get_full_ADC@result,?_get_full_ADC
  1625  00E05A  C006  F002         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  1626  00E05E  D000               	goto	l113
  1627  00E060                     l113:
  1628  00E060  0012               	return		;funcret
  1629  00E062                     __end_of_get_full_ADC:
  1630                           	opt stack 0
  1631                           tblptru	equ	0xFF8
  1632                           tblptrh	equ	0xFF7
  1633                           tblptrl	equ	0xFF6
  1634                           tablat	equ	0xFF5
  1635                           prodl	equ	0xFF3
  1636                           postinc0	equ	0xFEE
  1637                           postdec1	equ	0xFE5
  1638                           fsr1l	equ	0xFE1
  1639                           status	equ	0xFD8
  1640                           
  1641 ;; *************** function ___lwtoft *****************
  1642 ;; Defined at:
  1643 ;;		line 28 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  1644 ;; Parameters:    Size  Location     Type
  1645 ;;  c               2    8[COMRAM] unsigned int 
  1646 ;; Auto vars:     Size  Location     Type
  1647 ;;		None
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  3    8[COMRAM] float 
  1650 ;; Registers used:
  1651 ;;		wreg, status,2, status,0, cstack
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1657 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1660 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1661 ;;Total ram usage:        3 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:    1
  1664 ;; This function calls:
  1665 ;;		___ftpack
  1666 ;; This function is called by:
  1667 ;;		_main
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text5
  1672  00E016                     __ptext5:
  1673                           	opt stack 0
  1674  00E016                     ___lwtoft:
  1675                           	opt stack 29
  1676                           
  1677                           ;incstack = 0
  1678  00E016  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  1679  00E01A  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  1680  00E01E  6A03               	clrf	___ftpack@arg+2,c
  1681  00E020  0E8E               	movlw	142
  1682  00E022  6E04               	movwf	___ftpack@exp,c
  1683  00E024  0E00               	movlw	0
  1684  00E026  6E05               	movwf	___ftpack@sign,c
  1685  00E028  ECF1  F072         	call	___ftpack	;wreg free
  1686  00E02C  C001  F009         	movff	?___ftpack,?___lwtoft
  1687  00E030  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  1688  00E034  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  1689  00E038  D000               	goto	l900
  1690  00E03A                     l900:
  1691  00E03A  0012               	return		;funcret
  1692  00E03C                     __end_of___lwtoft:
  1693                           	opt stack 0
  1694                           tblptru	equ	0xFF8
  1695                           tblptrh	equ	0xFF7
  1696                           tblptrl	equ	0xFF6
  1697                           tablat	equ	0xFF5
  1698                           prodl	equ	0xFF3
  1699                           postinc0	equ	0xFEE
  1700                           postdec1	equ	0xFE5
  1701                           fsr1l	equ	0xFE1
  1702                           status	equ	0xFD8
  1703                           
  1704 ;; *************** function ___ftdiv *****************
  1705 ;; Defined at:
  1706 ;;		line 54 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  1707 ;; Parameters:    Size  Location     Type
  1708 ;;  f1              3   35[COMRAM] float 
  1709 ;;  f2              3   38[COMRAM] float 
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  f3              3   45[COMRAM] float 
  1712 ;;  sign            1   49[COMRAM] unsigned char 
  1713 ;;  exp             1   48[COMRAM] unsigned char 
  1714 ;;  cntr            1   44[COMRAM] unsigned char 
  1715 ;; Return value:  Size  Location     Type
  1716 ;;                  3   35[COMRAM] float 
  1717 ;; Registers used:
  1718 ;;		wreg, status,2, status,0, cstack
  1719 ;; Tracked objects:
  1720 ;;		On entry : 0/0
  1721 ;;		On exit  : 0/0
  1722 ;;		Unchanged: 0/0
  1723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1724 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1725 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1726 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1727 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1728 ;;Total ram usage:       15 bytes
  1729 ;; Hardware stack levels used:    1
  1730 ;; Hardware stack levels required when called:    1
  1731 ;; This function calls:
  1732 ;;		___ftpack
  1733 ;; This function is called by:
  1734 ;;		_main
  1735 ;; This function uses a non-reentrant model
  1736 ;;
  1737                           
  1738                           	psect	text6
  1739  00E77A                     __ptext6:
  1740                           	opt stack 0
  1741  00E77A                     ___ftdiv:
  1742                           	opt stack 29
  1743                           
  1744                           ;incstack = 0
  1745  00E77A  C026  F02A         	movff	___ftdiv@f1+2,??___ftdiv
  1746  00E77E  6A2B               	clrf	(??___ftdiv+1)& (0+255),c
  1747  00E780  6A2C               	clrf	(??___ftdiv+2)& (0+255),c
  1748  00E782  3425               	rlcf	___ftdiv@f1+1,w,c
  1749  00E784  362A               	rlcf	??___ftdiv& (0+255),f,c
  1750  00E786  E301               	bnc	u3061
  1751  00E788  802B               	bsf	(??___ftdiv+1)& (0+255),0,c
  1752  00E78A                     u3061:
  1753  00E78A  502A               	movf	??___ftdiv,w,c
  1754  00E78C  6E31               	movwf	___ftdiv@exp,c
  1755  00E78E  5031               	movf	___ftdiv@exp,w,c
  1756  00E790  A4D8               	btfss	status,2,c
  1757  00E792  D002               	goto	l2982
  1758  00E794  D00E               	goto	l2984
  1759  00E796  D061               	goto	l718
  1760  00E798                     l2982:
  1761  00E798  C029  F02A         	movff	___ftdiv@f2+2,??___ftdiv
  1762  00E79C  6A2B               	clrf	(??___ftdiv+1)& (0+255),c
  1763  00E79E  6A2C               	clrf	(??___ftdiv+2)& (0+255),c
  1764  00E7A0  3428               	rlcf	___ftdiv@f2+1,w,c
  1765  00E7A2  362A               	rlcf	??___ftdiv& (0+255),f,c
  1766  00E7A4  E301               	bnc	u3081
  1767  00E7A6  802B               	bsf	(??___ftdiv+1)& (0+255),0,c
  1768  00E7A8                     u3081:
  1769  00E7A8  502A               	movf	??___ftdiv,w,c
  1770  00E7AA  6E32               	movwf	___ftdiv@sign,c
  1771  00E7AC  5032               	movf	___ftdiv@sign,w,c
  1772  00E7AE  A4D8               	btfss	status,2,c
  1773  00E7B0  D007               	goto	l2988
  1774  00E7B2                     l2984:
  1775  00E7B2  0E00               	movlw	0
  1776  00E7B4  6E24               	movwf	?___ftdiv,c
  1777  00E7B6  0E00               	movlw	0
  1778  00E7B8  6E25               	movwf	?___ftdiv+1,c
  1779  00E7BA  0E00               	movlw	0
  1780  00E7BC  6E26               	movwf	?___ftdiv+2,c
  1781  00E7BE  D04D               	goto	l718
  1782  00E7C0                     l2988:
  1783  00E7C0  0E00               	movlw	0
  1784  00E7C2  6E2E               	movwf	___ftdiv@f3,c
  1785  00E7C4  0E00               	movlw	0
  1786  00E7C6  6E2F               	movwf	___ftdiv@f3+1,c
  1787  00E7C8  0E00               	movlw	0
  1788  00E7CA  6E30               	movwf	___ftdiv@f3+2,c
  1789  00E7CC  5032               	movf	___ftdiv@sign,w,c
  1790  00E7CE  0F89               	addlw	137
  1791  00E7D0  5E31               	subwf	___ftdiv@exp,f,c
  1792  00E7D2  C026  F032         	movff	___ftdiv@f1+2,___ftdiv@sign
  1793  00E7D6  5029               	movf	___ftdiv@f2+2,w,c
  1794  00E7D8  1A32               	xorwf	___ftdiv@sign,f,c
  1795  00E7DA  0E80               	movlw	128
  1796  00E7DC  1632               	andwf	___ftdiv@sign,f,c
  1797  00E7DE  8E25               	bsf	___ftdiv@f1+1,7,c
  1798  00E7E0  0EFF               	movlw	255
  1799  00E7E2  1624               	andwf	___ftdiv@f1,f,c
  1800  00E7E4  0EFF               	movlw	255
  1801  00E7E6  1625               	andwf	___ftdiv@f1+1,f,c
  1802  00E7E8  0E00               	movlw	0
  1803  00E7EA  1626               	andwf	___ftdiv@f1+2,f,c
  1804  00E7EC  8E28               	bsf	___ftdiv@f2+1,7,c
  1805  00E7EE  0EFF               	movlw	255
  1806  00E7F0  1627               	andwf	___ftdiv@f2,f,c
  1807  00E7F2  0EFF               	movlw	255
  1808  00E7F4  1628               	andwf	___ftdiv@f2+1,f,c
  1809  00E7F6  0E00               	movlw	0
  1810  00E7F8  1629               	andwf	___ftdiv@f2+2,f,c
  1811  00E7FA  0E18               	movlw	24
  1812  00E7FC  6E2D               	movwf	___ftdiv@cntr,c
  1813  00E7FE  D000               	goto	l3008
  1814  00E800                     l3008:
  1815  00E800  90D8               	bcf	status,0,c
  1816  00E802  362E               	rlcf	___ftdiv@f3,f,c
  1817  00E804  362F               	rlcf	___ftdiv@f3+1,f,c
  1818  00E806  3630               	rlcf	___ftdiv@f3+2,f,c
  1819  00E808  5027               	movf	___ftdiv@f2,w,c
  1820  00E80A  5C24               	subwf	___ftdiv@f1,w,c
  1821  00E80C  5028               	movf	___ftdiv@f2+1,w,c
  1822  00E80E  5825               	subwfb	___ftdiv@f1+1,w,c
  1823  00E810  5029               	movf	___ftdiv@f2+2,w,c
  1824  00E812  5826               	subwfb	___ftdiv@f1+2,w,c
  1825  00E814  A0D8               	btfss	status,0,c
  1826  00E816  D007               	goto	l721
  1827  00E818  5027               	movf	___ftdiv@f2,w,c
  1828  00E81A  5E24               	subwf	___ftdiv@f1,f,c
  1829  00E81C  5028               	movf	___ftdiv@f2+1,w,c
  1830  00E81E  5A25               	subwfb	___ftdiv@f1+1,f,c
  1831  00E820  5029               	movf	___ftdiv@f2+2,w,c
  1832  00E822  5A26               	subwfb	___ftdiv@f1+2,f,c
  1833  00E824  802E               	bsf	___ftdiv@f3,0,c
  1834  00E826                     l721:
  1835  00E826  90D8               	bcf	status,0,c
  1836  00E828  3624               	rlcf	___ftdiv@f1,f,c
  1837  00E82A  3625               	rlcf	___ftdiv@f1+1,f,c
  1838  00E82C  3626               	rlcf	___ftdiv@f1+2,f,c
  1839  00E82E  2E2D               	decfsz	___ftdiv@cntr,f,c
  1840  00E830  D7E7               	goto	l3008
  1841  00E832  D000               	goto	l3018
  1842  00E834                     l3018:
  1843  00E834  C02E  F001         	movff	___ftdiv@f3,___ftpack@arg
  1844  00E838  C02F  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  1845  00E83C  C030  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  1846  00E840  C031  F004         	movff	___ftdiv@exp,___ftpack@exp
  1847  00E844  C032  F005         	movff	___ftdiv@sign,___ftpack@sign
  1848  00E848  ECF1  F072         	call	___ftpack	;wreg free
  1849  00E84C  C001  F024         	movff	?___ftpack,?___ftdiv
  1850  00E850  C002  F025         	movff	?___ftpack+1,?___ftdiv+1
  1851  00E854  C003  F026         	movff	?___ftpack+2,?___ftdiv+2
  1852  00E858  D000               	goto	l718
  1853  00E85A                     l718:
  1854  00E85A  0012               	return		;funcret
  1855  00E85C                     __end_of___ftdiv:
  1856                           	opt stack 0
  1857                           tblptru	equ	0xFF8
  1858                           tblptrh	equ	0xFF7
  1859                           tblptrl	equ	0xFF6
  1860                           tablat	equ	0xFF5
  1861                           prodl	equ	0xFF3
  1862                           postinc0	equ	0xFEE
  1863                           postdec1	equ	0xFE5
  1864                           fsr1l	equ	0xFE1
  1865                           status	equ	0xFD8
  1866                           
  1867 ;; *************** function _Night_Mode *****************
  1868 ;; Defined at:
  1869 ;;		line 362 in file "lab7p1.c"
  1870 ;; Parameters:    Size  Location     Type
  1871 ;;		None
  1872 ;; Auto vars:     Size  Location     Type
  1873 ;;		None
  1874 ;; Return value:  Size  Location     Type
  1875 ;;		None               void
  1876 ;; Registers used:
  1877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1878 ;; Tracked objects:
  1879 ;;		On entry : 0/0
  1880 ;;		On exit  : 0/0
  1881 ;;		Unchanged: 0/0
  1882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1885 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1886 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1887 ;;Total ram usage:        1 bytes
  1888 ;; Hardware stack levels used:    1
  1889 ;; Hardware stack levels required when called:    4
  1890 ;; This function calls:
  1891 ;;		_Set_EW
  1892 ;;		_Set_EWLT
  1893 ;;		_Set_NS
  1894 ;;		_Set_NSLT
  1895 ;;		_Wait_N_Seconds
  1896 ;;		_printf
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           	psect	text7
  1903  00EC54                     __ptext7:
  1904                           	opt stack 0
  1905  00EC54                     _Night_Mode:
  1906                           	opt stack 26
  1907                           
  1908                           ;lab7p1.c: 364: PORTB = 0xFF;
  1909                           
  1910                           ;incstack = 0
  1911  00EC54  6881               	setf	3969,c	;volatile
  1912                           
  1913                           ;lab7p1.c: 365: PORTD = 0xFF;
  1914  00EC56  6883               	setf	3971,c	;volatile
  1915                           
  1916                           ;lab7p1.c: 366: PORTEbits.RE0 = 0;
  1917  00EC58  9084               	bcf	3972,0,c	;volatile
  1918                           
  1919                           ;lab7p1.c: 367: printf(" night mode step 1 \r\n");
  1920  00EC5A  0E1D               	movlw	low STR_22
  1921  00EC5C  6E40               	movwf	printf@f,c
  1922  00EC5E  0EFF               	movlw	high STR_22
  1923  00EC60  6E41               	movwf	printf@f+1,c
  1924  00EC62  ECD6  F07B         	call	_printf	;wreg free
  1925                           
  1926                           ;lab7p1.c: 368: Set_NSLT(1);
  1927  00EC66  0E01               	movlw	1
  1928  00EC68  ECAB  F070         	call	_Set_NSLT
  1929                           
  1930                           ;lab7p1.c: 369: Set_EW(1);
  1931  00EC6C  0E01               	movlw	1
  1932  00EC6E  EC5A  F070         	call	_Set_EW
  1933                           
  1934                           ;lab7p1.c: 370: Set_EWLT(1);
  1935  00EC72  0E01               	movlw	1
  1936  00EC74  EC75  F070         	call	_Set_EWLT
  1937                           
  1938                           ;lab7p1.c: 371: Set_NS(2);
  1939  00EC78  0E02               	movlw	2
  1940  00EC7A  EC90  F070         	call	_Set_NS
  1941                           
  1942                           ;lab7p1.c: 372: printf(" step 2 \r\n");
  1943  00EC7E  0EA7               	movlw	low STR_3
  1944  00EC80  6E40               	movwf	printf@f,c
  1945  00EC82  0EFF               	movlw	high STR_3
  1946  00EC84  6E41               	movwf	printf@f+1,c
  1947  00EC86  ECD6  F07B         	call	_printf	;wreg free
  1948                           
  1949                           ;lab7p1.c: 373: Wait_N_Seconds(7);
  1950  00EC8A  0E07               	movlw	7
  1951  00EC8C  ECEC  F06F         	call	_Wait_N_Seconds
  1952                           
  1953                           ;lab7p1.c: 374: printf(" step 3 \r\n");
  1954  00EC90  0EB2               	movlw	low STR_24
  1955  00EC92  6E40               	movwf	printf@f,c
  1956  00EC94  0EFF               	movlw	high STR_24
  1957  00EC96  6E41               	movwf	printf@f+1,c
  1958  00EC98  ECD6  F07B         	call	_printf	;wreg free
  1959                           
  1960                           ;lab7p1.c: 375: Set_NS(3);
  1961  00EC9C  0E03               	movlw	3
  1962  00EC9E  EC90  F070         	call	_Set_NS
  1963                           
  1964                           ;lab7p1.c: 376: Wait_N_Seconds(3);
  1965  00ECA2  0E03               	movlw	3
  1966  00ECA4  ECEC  F06F         	call	_Wait_N_Seconds
  1967                           
  1968                           ;lab7p1.c: 377: printf(" step 4 \r\n");
  1969  00ECA8  0EBD               	movlw	low STR_5
  1970  00ECAA  6E40               	movwf	printf@f,c
  1971  00ECAC  0EFF               	movlw	high STR_5
  1972  00ECAE  6E41               	movwf	printf@f+1,c
  1973  00ECB0  ECD6  F07B         	call	_printf	;wreg free
  1974                           
  1975                           ;lab7p1.c: 378: Set_NS(1);
  1976  00ECB4  0E01               	movlw	1
  1977  00ECB6  EC90  F070         	call	_Set_NS
  1978                           
  1979                           ;lab7p1.c: 379: printf(" step 5 \r\n");
  1980  00ECBA  0EC8               	movlw	low STR_6
  1981  00ECBC  6E40               	movwf	printf@f,c
  1982  00ECBE  0EFF               	movlw	high STR_6
  1983  00ECC0  6E41               	movwf	printf@f+1,c
  1984  00ECC2  ECD6  F07B         	call	_printf	;wreg free
  1985                           
  1986                           ;lab7p1.c: 380: if(PORTAbits.RA3 == 1)
  1987  00ECC6  A680               	btfss	3968,3,c	;volatile
  1988  00ECC8  D02B               	goto	l2952
  1989                           
  1990                           ;lab7p1.c: 381: {
  1991                           ;lab7p1.c: 382: printf(" step 6, EWLT_SW = %f \r\n",PORTAbits.RA3);
  1992  00ECCA  0EEB               	movlw	low STR_27
  1993  00ECCC  6E40               	movwf	printf@f,c
  1994  00ECCE  0EFE               	movlw	high STR_27
  1995  00ECD0  6E41               	movwf	printf@f+1,c
  1996  00ECD2  A680               	btfss	3968,3,c	;volatile
  1997  00ECD4  D003               	goto	u3030
  1998  00ECD6  6A62               	clrf	??_Night_Mode& (0+255),c
  1999  00ECD8  2A62               	incf	??_Night_Mode& (0+255),f,c
  2000  00ECDA  D001               	goto	u3038
  2001  00ECDC                     u3030:
  2002  00ECDC  6A62               	clrf	??_Night_Mode& (0+255),c
  2003  00ECDE                     u3038:
  2004  00ECDE  5062               	movf	??_Night_Mode,w,c
  2005  00ECE0  6E42               	movwf	?_printf+2,c
  2006  00ECE2  6A43               	clrf	?_printf+3,c
  2007  00ECE4  ECD6  F07B         	call	_printf	;wreg free
  2008                           
  2009                           ;lab7p1.c: 383: Set_EWLT(2);
  2010  00ECE8  0E02               	movlw	2
  2011  00ECEA  EC75  F070         	call	_Set_EWLT
  2012                           
  2013                           ;lab7p1.c: 384: Wait_N_Seconds(5);
  2014  00ECEE  0E05               	movlw	5
  2015  00ECF0  ECEC  F06F         	call	_Wait_N_Seconds
  2016                           
  2017                           ;lab7p1.c: 385: printf(" step 7 \r\n");
  2018  00ECF4  0EDE               	movlw	low STR_8
  2019  00ECF6  6E40               	movwf	printf@f,c
  2020  00ECF8  0EFF               	movlw	high STR_8
  2021  00ECFA  6E41               	movwf	printf@f+1,c
  2022  00ECFC  ECD6  F07B         	call	_printf	;wreg free
  2023                           
  2024                           ;lab7p1.c: 386: Set_EWLT(3);
  2025  00ED00  0E03               	movlw	3
  2026  00ED02  EC75  F070         	call	_Set_EWLT
  2027                           
  2028                           ;lab7p1.c: 387: Wait_N_Seconds(3);
  2029  00ED06  0E03               	movlw	3
  2030  00ED08  ECEC  F06F         	call	_Wait_N_Seconds
  2031                           
  2032                           ;lab7p1.c: 388: printf(" step 8 \r\n");
  2033  00ED0C  0EE9               	movlw	low STR_29
  2034  00ED0E  6E40               	movwf	printf@f,c
  2035  00ED10  0EFF               	movlw	high STR_29
  2036  00ED12  6E41               	movwf	printf@f+1,c
  2037  00ED14  ECD6  F07B         	call	_printf	;wreg free
  2038                           
  2039                           ;lab7p1.c: 389: Set_EWLT(1);
  2040  00ED18  0E01               	movlw	1
  2041  00ED1A  EC75  F070         	call	_Set_EWLT
  2042  00ED1E  D000               	goto	l2952
  2043  00ED20                     l2952:
  2044                           
  2045                           ;lab7p1.c: 390: }
  2046                           ;lab7p1.c: 391: printf(" step 9 \r\n");
  2047  00ED20  0EF4               	movlw	low STR_10
  2048  00ED22  6E40               	movwf	printf@f,c
  2049  00ED24  0EFF               	movlw	high STR_10
  2050  00ED26  6E41               	movwf	printf@f+1,c
  2051  00ED28  ECD6  F07B         	call	_printf	;wreg free
  2052                           
  2053                           ;lab7p1.c: 392: Set_EW(2);
  2054  00ED2C  0E02               	movlw	2
  2055  00ED2E  EC5A  F070         	call	_Set_EW
  2056                           
  2057                           ;lab7p1.c: 393: Wait_N_Seconds(7);
  2058  00ED32  0E07               	movlw	7
  2059  00ED34  ECEC  F06F         	call	_Wait_N_Seconds
  2060                           
  2061                           ;lab7p1.c: 394: printf(" step 10 \r\n");
  2062  00ED38  0E47               	movlw	low STR_11
  2063  00ED3A  6E40               	movwf	printf@f,c
  2064  00ED3C  0EFF               	movlw	high STR_11
  2065  00ED3E  6E41               	movwf	printf@f+1,c
  2066  00ED40  ECD6  F07B         	call	_printf	;wreg free
  2067                           
  2068                           ;lab7p1.c: 395: Set_EW(3);
  2069  00ED44  0E03               	movlw	3
  2070  00ED46  EC5A  F070         	call	_Set_EW
  2071                           
  2072                           ;lab7p1.c: 396: Wait_N_Seconds(3);
  2073  00ED4A  0E03               	movlw	3
  2074  00ED4C  ECEC  F06F         	call	_Wait_N_Seconds
  2075                           
  2076                           ;lab7p1.c: 397: printf(" step 11 \r\n");
  2077  00ED50  0E5F               	movlw	low STR_12
  2078  00ED52  6E40               	movwf	printf@f,c
  2079  00ED54  0EFF               	movlw	high STR_12
  2080  00ED56  6E41               	movwf	printf@f+1,c
  2081  00ED58  ECD6  F07B         	call	_printf	;wreg free
  2082                           
  2083                           ;lab7p1.c: 398: Set_EW(1);
  2084  00ED5C  0E01               	movlw	1
  2085  00ED5E  EC5A  F070         	call	_Set_EW
  2086                           
  2087                           ;lab7p1.c: 399: if(PORTAbits.RA4 == 1)
  2088  00ED62  A880               	btfss	3968,4,c	;volatile
  2089  00ED64  D02B               	goto	l202
  2090                           
  2091                           ;lab7p1.c: 400: {
  2092                           ;lab7p1.c: 401: printf(" step 13, NSLT_SW = %f \r\n",PORTAbits.RA4);
  2093  00ED66  0E9E               	movlw	low STR_33
  2094  00ED68  6E40               	movwf	printf@f,c
  2095  00ED6A  0EFE               	movlw	high STR_33
  2096  00ED6C  6E41               	movwf	printf@f+1,c
  2097  00ED6E  A880               	btfss	3968,4,c	;volatile
  2098  00ED70  D003               	goto	u3050
  2099  00ED72  6A62               	clrf	??_Night_Mode& (0+255),c
  2100  00ED74  2A62               	incf	??_Night_Mode& (0+255),f,c
  2101  00ED76  D001               	goto	u3058
  2102  00ED78                     u3050:
  2103  00ED78  6A62               	clrf	??_Night_Mode& (0+255),c
  2104  00ED7A                     u3058:
  2105  00ED7A  5062               	movf	??_Night_Mode,w,c
  2106  00ED7C  6E42               	movwf	?_printf+2,c
  2107  00ED7E  6A43               	clrf	?_printf+3,c
  2108  00ED80  ECD6  F07B         	call	_printf	;wreg free
  2109                           
  2110                           ;lab7p1.c: 402: Set_NSLT(2);
  2111  00ED84  0E02               	movlw	2
  2112  00ED86  ECAB  F070         	call	_Set_NSLT
  2113                           
  2114                           ;lab7p1.c: 403: Wait_N_Seconds(5);
  2115  00ED8A  0E05               	movlw	5
  2116  00ED8C  ECEC  F06F         	call	_Wait_N_Seconds
  2117                           
  2118                           ;lab7p1.c: 404: printf(" step 14 \r\n");
  2119  00ED90  0E77               	movlw	low STR_15
  2120  00ED92  6E40               	movwf	printf@f,c
  2121  00ED94  0EFF               	movlw	high STR_15
  2122  00ED96  6E41               	movwf	printf@f+1,c
  2123  00ED98  ECD6  F07B         	call	_printf	;wreg free
  2124                           
  2125                           ;lab7p1.c: 405: Set_NSLT(3);
  2126  00ED9C  0E03               	movlw	3
  2127  00ED9E  ECAB  F070         	call	_Set_NSLT
  2128                           
  2129                           ;lab7p1.c: 406: Wait_N_Seconds(3);
  2130  00EDA2  0E03               	movlw	3
  2131  00EDA4  ECEC  F06F         	call	_Wait_N_Seconds
  2132                           
  2133                           ;lab7p1.c: 407: printf(" step 15 \r\n");
  2134  00EDA8  0E83               	movlw	low STR_16
  2135  00EDAA  6E40               	movwf	printf@f,c
  2136  00EDAC  0EFF               	movlw	high STR_16
  2137  00EDAE  6E41               	movwf	printf@f+1,c
  2138  00EDB0  ECD6  F07B         	call	_printf	;wreg free
  2139                           
  2140                           ;lab7p1.c: 408: Set_NSLT(1);
  2141  00EDB4  0E01               	movlw	1
  2142  00EDB6  ECAB  F070         	call	_Set_NSLT
  2143  00EDBA  D000               	goto	l202
  2144  00EDBC                     l202:
  2145  00EDBC  0012               	return		;funcret
  2146  00EDBE                     __end_of_Night_Mode:
  2147                           	opt stack 0
  2148                           tblptru	equ	0xFF8
  2149                           tblptrh	equ	0xFF7
  2150                           tblptrl	equ	0xFF6
  2151                           tablat	equ	0xFF5
  2152                           prodl	equ	0xFF3
  2153                           postinc0	equ	0xFEE
  2154                           postdec1	equ	0xFE5
  2155                           fsr1l	equ	0xFE1
  2156                           status	equ	0xFD8
  2157                           
  2158 ;; *************** function _Init_TRIS *****************
  2159 ;; Defined at:
  2160 ;;		line 149 in file "lab7p1.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;		None
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;		None
  2165 ;; Return value:  Size  Location     Type
  2166 ;;		None               void
  2167 ;; Registers used:
  2168 ;;		wreg, status,2
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2178 ;;Total ram usage:        0 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_main
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text8
  2188  00DFA8                     __ptext8:
  2189                           	opt stack 0
  2190  00DFA8                     _Init_TRIS:
  2191                           	opt stack 30
  2192                           
  2193                           ;lab7p1.c: 151: TRISA =0x1F;
  2194                           
  2195                           ;incstack = 0
  2196  00DFA8  0E1F               	movlw	31
  2197  00DFAA  6E92               	movwf	3986,c	;volatile
  2198                           
  2199                           ;lab7p1.c: 152: TRISB =0x00;
  2200  00DFAC  0E00               	movlw	0
  2201  00DFAE  6E93               	movwf	3987,c	;volatile
  2202                           
  2203                           ;lab7p1.c: 153: TRISC = 0x00;
  2204  00DFB0  0E00               	movlw	0
  2205  00DFB2  6E94               	movwf	3988,c	;volatile
  2206                           
  2207                           ;lab7p1.c: 154: TRISD = 0x00;
  2208  00DFB4  0E00               	movlw	0
  2209  00DFB6  6E95               	movwf	3989,c	;volatile
  2210                           
  2211                           ;lab7p1.c: 155: TRISE = 0x00;
  2212  00DFB8  0E00               	movlw	0
  2213  00DFBA  6E96               	movwf	3990,c	;volatile
  2214  00DFBC  0012               	return		;funcret
  2215  00DFBE                     __end_of_Init_TRIS:
  2216                           	opt stack 0
  2217                           tblptru	equ	0xFF8
  2218                           tblptrh	equ	0xFF7
  2219                           tblptrl	equ	0xFF6
  2220                           tablat	equ	0xFF5
  2221                           prodl	equ	0xFF3
  2222                           postinc0	equ	0xFEE
  2223                           postdec1	equ	0xFE5
  2224                           fsr1l	equ	0xFE1
  2225                           status	equ	0xFD8
  2226                           
  2227 ;; *************** function _Init_ADC *****************
  2228 ;; Defined at:
  2229 ;;		line 130 in file "lab7p1.c"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;		None               void
  2236 ;; Registers used:
  2237 ;;		wreg, status,2
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2247 ;;Total ram usage:        0 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; This function calls:
  2250 ;;		Nothing
  2251 ;; This function is called by:
  2252 ;;		_main
  2253 ;; This function uses a non-reentrant model
  2254 ;;
  2255                           
  2256                           	psect	text9
  2257  00DF5E                     __ptext9:
  2258                           	opt stack 0
  2259  00DF5E                     _Init_ADC:
  2260                           	opt stack 30
  2261                           
  2262                           ;lab7p1.c: 132: ADCON0=0x01;
  2263                           
  2264                           ;incstack = 0
  2265  00DF5E  0E01               	movlw	1
  2266  00DF60  6EC2               	movwf	4034,c	;volatile
  2267                           
  2268                           ;lab7p1.c: 133: ADCON1=0x0E ;
  2269  00DF62  0E0E               	movlw	14
  2270  00DF64  6EC1               	movwf	4033,c	;volatile
  2271                           
  2272                           ;lab7p1.c: 135: ADCON2=0xA9;
  2273  00DF66  0EA9               	movlw	169
  2274  00DF68  6EC0               	movwf	4032,c	;volatile
  2275  00DF6A  0012               	return		;funcret
  2276  00DF6C                     __end_of_Init_ADC:
  2277                           	opt stack 0
  2278                           tblptru	equ	0xFF8
  2279                           tblptrh	equ	0xFF7
  2280                           tblptrl	equ	0xFF6
  2281                           tablat	equ	0xFF5
  2282                           prodl	equ	0xFF3
  2283                           postinc0	equ	0xFEE
  2284                           postdec1	equ	0xFE5
  2285                           fsr1l	equ	0xFE1
  2286                           status	equ	0xFD8
  2287                           
  2288 ;; *************** function _Day_Mode *****************
  2289 ;; Defined at:
  2290 ;;		line 295 in file "lab7p1.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;		None
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;		None
  2295 ;; Return value:  Size  Location     Type
  2296 ;;		None               void
  2297 ;; Registers used:
  2298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2299 ;; Tracked objects:
  2300 ;;		On entry : 0/0
  2301 ;;		On exit  : 0/0
  2302 ;;		Unchanged: 0/0
  2303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2306 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2307 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2308 ;;Total ram usage:        1 bytes
  2309 ;; Hardware stack levels used:    1
  2310 ;; Hardware stack levels required when called:    4
  2311 ;; This function calls:
  2312 ;;		_PED_Control
  2313 ;;		_Set_EW
  2314 ;;		_Set_EWLT
  2315 ;;		_Set_NS
  2316 ;;		_Set_NSLT
  2317 ;;		_Wait_N_Seconds
  2318 ;;		_printf
  2319 ;; This function is called by:
  2320 ;;		_main
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           	psect	text10
  2325  00EF82                     __ptext10:
  2326                           	opt stack 0
  2327  00EF82                     _Day_Mode:
  2328                           	opt stack 26
  2329                           
  2330                           ;lab7p1.c: 297: PORTB = 0xFF;
  2331                           
  2332                           ;incstack = 0
  2333  00EF82  6881               	setf	3969,c	;volatile
  2334                           
  2335                           ;lab7p1.c: 298: PORTD = 0xFF;
  2336  00EF84  6883               	setf	3971,c	;volatile
  2337                           
  2338                           ;lab7p1.c: 299: printf(" day mode step 1 \r\n");
  2339  00EF86  0E33               	movlw	low STR_2
  2340  00EF88  6E40               	movwf	printf@f,c
  2341  00EF8A  0EFF               	movlw	high STR_2
  2342  00EF8C  6E41               	movwf	printf@f+1,c
  2343  00EF8E  ECD6  F07B         	call	_printf	;wreg free
  2344                           
  2345                           ;lab7p1.c: 300: Set_NSLT(1);
  2346  00EF92  0E01               	movlw	1
  2347  00EF94  ECAB  F070         	call	_Set_NSLT
  2348                           
  2349                           ;lab7p1.c: 301: Set_EW(1);
  2350  00EF98  0E01               	movlw	1
  2351  00EF9A  EC5A  F070         	call	_Set_EW
  2352                           
  2353                           ;lab7p1.c: 302: Set_EWLT(1);
  2354  00EF9E  0E01               	movlw	1
  2355  00EFA0  EC75  F070         	call	_Set_EWLT
  2356                           
  2357                           ;lab7p1.c: 303: Set_NS(2);
  2358  00EFA4  0E02               	movlw	2
  2359  00EFA6  EC90  F070         	call	_Set_NS
  2360                           
  2361                           ;lab7p1.c: 305: printf(" step 2 \r\n");
  2362  00EFAA  0EA7               	movlw	low STR_3
  2363  00EFAC  6E40               	movwf	printf@f,c
  2364  00EFAE  0EFF               	movlw	high STR_3
  2365  00EFB0  6E41               	movwf	printf@f+1,c
  2366  00EFB2  ECD6  F07B         	call	_printf	;wreg free
  2367                           
  2368                           ;lab7p1.c: 306: if(PORTAbits.RA2 == 1)
  2369  00EFB6  A480               	btfss	3968,2,c	;volatile
  2370  00EFB8  D015               	goto	l2848
  2371                           
  2372                           ;lab7p1.c: 307: {
  2373                           ;lab7p1.c: 308: printf(" step 3, NSPED_SW = %f \r\n",PORTAbits.RA2);
  2374  00EFBA  0E84               	movlw	low STR_4
  2375  00EFBC  6E40               	movwf	printf@f,c
  2376  00EFBE  0EFE               	movlw	high STR_4
  2377  00EFC0  6E41               	movwf	printf@f+1,c
  2378  00EFC2  A480               	btfss	3968,2,c	;volatile
  2379  00EFC4  D003               	goto	u2940
  2380  00EFC6  6A62               	clrf	??_Day_Mode& (0+255),c
  2381  00EFC8  2A62               	incf	??_Day_Mode& (0+255),f,c
  2382  00EFCA  D001               	goto	u2948
  2383  00EFCC                     u2940:
  2384  00EFCC  6A62               	clrf	??_Day_Mode& (0+255),c
  2385  00EFCE                     u2948:
  2386  00EFCE  5062               	movf	??_Day_Mode,w,c
  2387  00EFD0  6E42               	movwf	?_printf+2,c
  2388  00EFD2  6A43               	clrf	?_printf+3,c
  2389  00EFD4  ECD6  F07B         	call	_printf	;wreg free
  2390                           
  2391                           ;lab7p1.c: 309: PED_Control(0,7);
  2392  00EFD8  0E07               	movlw	7
  2393  00EFDA  6E01               	movwf	PED_Control@num_sec,c
  2394  00EFDC  0E00               	movlw	0
  2395  00EFDE  ECA5  F072         	call	_PED_Control
  2396  00EFE2  D000               	goto	l2848
  2397  00EFE4                     l2848:
  2398                           
  2399                           ;lab7p1.c: 310: }
  2400                           ;lab7p1.c: 311: printf(" step 4 \r\n");
  2401  00EFE4  0EBD               	movlw	low STR_5
  2402  00EFE6  6E40               	movwf	printf@f,c
  2403  00EFE8  0EFF               	movlw	high STR_5
  2404  00EFEA  6E41               	movwf	printf@f+1,c
  2405  00EFEC  ECD6  F07B         	call	_printf	;wreg free
  2406                           
  2407                           ;lab7p1.c: 312: Wait_N_Seconds(5);
  2408  00EFF0  0E05               	movlw	5
  2409  00EFF2  ECEC  F06F         	call	_Wait_N_Seconds
  2410                           
  2411                           ;lab7p1.c: 313: printf(" step 5 \r\n");
  2412  00EFF6  0EC8               	movlw	low STR_6
  2413  00EFF8  6E40               	movwf	printf@f,c
  2414  00EFFA  0EFF               	movlw	high STR_6
  2415  00EFFC  6E41               	movwf	printf@f+1,c
  2416  00EFFE  ECD6  F07B         	call	_printf	;wreg free
  2417                           
  2418                           ;lab7p1.c: 314: Set_NS(3);
  2419  00F002  0E03               	movlw	3
  2420  00F004  EC90  F070         	call	_Set_NS
  2421                           
  2422                           ;lab7p1.c: 315: Wait_N_Seconds(3);
  2423  00F008  0E03               	movlw	3
  2424  00F00A  ECEC  F06F         	call	_Wait_N_Seconds
  2425                           
  2426                           ;lab7p1.c: 316: printf(" step 6 \r\n");
  2427  00F00E  0ED3               	movlw	low STR_7
  2428  00F010  6E40               	movwf	printf@f,c
  2429  00F012  0EFF               	movlw	high STR_7
  2430  00F014  6E41               	movwf	printf@f+1,c
  2431  00F016  ECD6  F07B         	call	_printf	;wreg free
  2432                           
  2433                           ;lab7p1.c: 317: Set_NS(1);
  2434  00F01A  0E01               	movlw	1
  2435  00F01C  EC90  F070         	call	_Set_NS
  2436                           
  2437                           ;lab7p1.c: 319: printf(" step 7 \r\n");
  2438  00F020  0EDE               	movlw	low STR_8
  2439  00F022  6E40               	movwf	printf@f,c
  2440  00F024  0EFF               	movlw	high STR_8
  2441  00F026  6E41               	movwf	printf@f+1,c
  2442  00F028  ECD6  F07B         	call	_printf	;wreg free
  2443                           
  2444                           ;lab7p1.c: 320: if(PORTAbits.RA3 == 1)
  2445  00F02C  A680               	btfss	3968,3,c	;volatile
  2446  00F02E  D02B               	goto	l2878
  2447                           
  2448                           ;lab7p1.c: 321: {
  2449                           ;lab7p1.c: 322: printf(" step 8, EWLT_SW = %f \r\n",PORTAbits.RA3);
  2450  00F030  0E04               	movlw	low STR_9
  2451  00F032  6E40               	movwf	printf@f,c
  2452  00F034  0EFF               	movlw	high STR_9
  2453  00F036  6E41               	movwf	printf@f+1,c
  2454  00F038  A680               	btfss	3968,3,c	;volatile
  2455  00F03A  D003               	goto	u2960
  2456  00F03C  6A62               	clrf	??_Day_Mode& (0+255),c
  2457  00F03E  2A62               	incf	??_Day_Mode& (0+255),f,c
  2458  00F040  D001               	goto	u2968
  2459  00F042                     u2960:
  2460  00F042  6A62               	clrf	??_Day_Mode& (0+255),c
  2461  00F044                     u2968:
  2462  00F044  5062               	movf	??_Day_Mode,w,c
  2463  00F046  6E42               	movwf	?_printf+2,c
  2464  00F048  6A43               	clrf	?_printf+3,c
  2465  00F04A  ECD6  F07B         	call	_printf	;wreg free
  2466                           
  2467                           ;lab7p1.c: 323: Set_EWLT(2);
  2468  00F04E  0E02               	movlw	2
  2469  00F050  EC75  F070         	call	_Set_EWLT
  2470                           
  2471                           ;lab7p1.c: 324: Wait_N_Seconds(8);
  2472  00F054  0E08               	movlw	8
  2473  00F056  ECEC  F06F         	call	_Wait_N_Seconds
  2474                           
  2475                           ;lab7p1.c: 325: printf(" step 9 \r\n");
  2476  00F05A  0EF4               	movlw	low STR_10
  2477  00F05C  6E40               	movwf	printf@f,c
  2478  00F05E  0EFF               	movlw	high STR_10
  2479  00F060  6E41               	movwf	printf@f+1,c
  2480  00F062  ECD6  F07B         	call	_printf	;wreg free
  2481                           
  2482                           ;lab7p1.c: 326: Set_EWLT(3);
  2483  00F066  0E03               	movlw	3
  2484  00F068  EC75  F070         	call	_Set_EWLT
  2485                           
  2486                           ;lab7p1.c: 327: Wait_N_Seconds(3);
  2487  00F06C  0E03               	movlw	3
  2488  00F06E  ECEC  F06F         	call	_Wait_N_Seconds
  2489                           
  2490                           ;lab7p1.c: 328: printf(" step 10 \r\n");
  2491  00F072  0E47               	movlw	low STR_11
  2492  00F074  6E40               	movwf	printf@f,c
  2493  00F076  0EFF               	movlw	high STR_11
  2494  00F078  6E41               	movwf	printf@f+1,c
  2495  00F07A  ECD6  F07B         	call	_printf	;wreg free
  2496                           
  2497                           ;lab7p1.c: 329: Set_EWLT(1);
  2498  00F07E  0E01               	movlw	1
  2499  00F080  EC75  F070         	call	_Set_EWLT
  2500  00F084  D000               	goto	l2878
  2501  00F086                     l2878:
  2502                           
  2503                           ;lab7p1.c: 330: }
  2504                           ;lab7p1.c: 331: printf(" step 11 \r\n");
  2505  00F086  0E5F               	movlw	low STR_12
  2506  00F088  6E40               	movwf	printf@f,c
  2507  00F08A  0EFF               	movlw	high STR_12
  2508  00F08C  6E41               	movwf	printf@f+1,c
  2509  00F08E  ECD6  F07B         	call	_printf	;wreg free
  2510                           
  2511                           ;lab7p1.c: 332: Set_EW(2);
  2512  00F092  0E02               	movlw	2
  2513  00F094  EC5A  F070         	call	_Set_EW
  2514                           
  2515                           ;lab7p1.c: 333: printf(" step 12 \r\n");
  2516  00F098  0E6B               	movlw	low STR_13
  2517  00F09A  6E40               	movwf	printf@f,c
  2518  00F09C  0EFF               	movlw	high STR_13
  2519  00F09E  6E41               	movwf	printf@f+1,c
  2520  00F0A0  ECD6  F07B         	call	_printf	;wreg free
  2521                           
  2522                           ;lab7p1.c: 334: if(PORTAbits.RA1 == 1)
  2523  00F0A4  A280               	btfss	3968,1,c	;volatile
  2524  00F0A6  D01B               	goto	l2890
  2525                           
  2526                           ;lab7p1.c: 335: {
  2527                           ;lab7p1.c: 336: printf(" step 13, EWPED_SW = %f \r\n",PORTAbits.RA1);
  2528  00F0A8  0E69               	movlw	low STR_14
  2529  00F0AA  6E40               	movwf	printf@f,c
  2530  00F0AC  0EFE               	movlw	high STR_14
  2531  00F0AE  6E41               	movwf	printf@f+1,c
  2532  00F0B0  A280               	btfss	3968,1,c	;volatile
  2533  00F0B2  D003               	goto	u2980
  2534  00F0B4  6A62               	clrf	??_Day_Mode& (0+255),c
  2535  00F0B6  2A62               	incf	??_Day_Mode& (0+255),f,c
  2536  00F0B8  D001               	goto	u2988
  2537  00F0BA                     u2980:
  2538  00F0BA  6A62               	clrf	??_Day_Mode& (0+255),c
  2539  00F0BC                     u2988:
  2540  00F0BC  5062               	movf	??_Day_Mode,w,c
  2541  00F0BE  6E42               	movwf	?_printf+2,c
  2542  00F0C0  6A43               	clrf	?_printf+3,c
  2543  00F0C2  ECD6  F07B         	call	_printf	;wreg free
  2544                           
  2545                           ;lab7p1.c: 337: PED_Control(1,5);
  2546  00F0C6  0E05               	movlw	5
  2547  00F0C8  6E01               	movwf	PED_Control@num_sec,c
  2548  00F0CA  0E01               	movlw	1
  2549  00F0CC  ECA5  F072         	call	_PED_Control
  2550                           
  2551                           ;lab7p1.c: 338: printf(" step 14 \r\n");
  2552  00F0D0  0E77               	movlw	low STR_15
  2553  00F0D2  6E40               	movwf	printf@f,c
  2554  00F0D4  0EFF               	movlw	high STR_15
  2555  00F0D6  6E41               	movwf	printf@f+1,c
  2556  00F0D8  ECD6  F07B         	call	_printf	;wreg free
  2557  00F0DC  D000               	goto	l2890
  2558  00F0DE                     l2890:
  2559                           
  2560                           ;lab7p1.c: 339: }
  2561                           ;lab7p1.c: 340: Wait_N_Seconds(6);
  2562  00F0DE  0E06               	movlw	6
  2563  00F0E0  ECEC  F06F         	call	_Wait_N_Seconds
  2564                           
  2565                           ;lab7p1.c: 341: printf(" step 15 \r\n");
  2566  00F0E4  0E83               	movlw	low STR_16
  2567  00F0E6  6E40               	movwf	printf@f,c
  2568  00F0E8  0EFF               	movlw	high STR_16
  2569  00F0EA  6E41               	movwf	printf@f+1,c
  2570  00F0EC  ECD6  F07B         	call	_printf	;wreg free
  2571                           
  2572                           ;lab7p1.c: 342: Set_EW(3);
  2573  00F0F0  0E03               	movlw	3
  2574  00F0F2  EC5A  F070         	call	_Set_EW
  2575                           
  2576                           ;lab7p1.c: 343: Wait_N_Seconds(3);
  2577  00F0F6  0E03               	movlw	3
  2578  00F0F8  ECEC  F06F         	call	_Wait_N_Seconds
  2579                           
  2580                           ;lab7p1.c: 344: printf(" step 16 \r\n");
  2581  00F0FC  0E8F               	movlw	low STR_17
  2582  00F0FE  6E40               	movwf	printf@f,c
  2583  00F100  0EFF               	movlw	high STR_17
  2584  00F102  6E41               	movwf	printf@f+1,c
  2585  00F104  ECD6  F07B         	call	_printf	;wreg free
  2586                           
  2587                           ;lab7p1.c: 345: Set_EW(1);
  2588  00F108  0E01               	movlw	1
  2589  00F10A  EC5A  F070         	call	_Set_EW
  2590                           
  2591                           ;lab7p1.c: 347: printf(" step 17 NSLT_SW = %f \r\n", PORTAbits.RA4);
  2592  00F10E  0ED2               	movlw	low STR_18
  2593  00F110  6E40               	movwf	printf@f,c
  2594  00F112  0EFE               	movlw	high STR_18
  2595  00F114  6E41               	movwf	printf@f+1,c
  2596  00F116  A880               	btfss	3968,4,c	;volatile
  2597  00F118  D003               	goto	u2990
  2598  00F11A  6A62               	clrf	??_Day_Mode& (0+255),c
  2599  00F11C  2A62               	incf	??_Day_Mode& (0+255),f,c
  2600  00F11E  D001               	goto	u2998
  2601  00F120                     u2990:
  2602  00F120  6A62               	clrf	??_Day_Mode& (0+255),c
  2603  00F122                     u2998:
  2604  00F122  5062               	movf	??_Day_Mode,w,c
  2605  00F124  6E42               	movwf	?_printf+2,c
  2606  00F126  6A43               	clrf	?_printf+3,c
  2607  00F128  ECD6  F07B         	call	_printf	;wreg free
  2608                           
  2609                           ;lab7p1.c: 348: if(PORTAbits.RA4 == 1)
  2610  00F12C  A880               	btfss	3968,4,c	;volatile
  2611  00F12E  D02B               	goto	l197
  2612                           
  2613                           ;lab7p1.c: 349: {
  2614                           ;lab7p1.c: 350: printf(" step 18, NSLT_SW = %f \r\n",PORTAbits.RA4);
  2615  00F130  0EB8               	movlw	low STR_19
  2616  00F132  6E40               	movwf	printf@f,c
  2617  00F134  0EFE               	movlw	high STR_19
  2618  00F136  6E41               	movwf	printf@f+1,c
  2619  00F138  A880               	btfss	3968,4,c	;volatile
  2620  00F13A  D003               	goto	u3010
  2621  00F13C  6A62               	clrf	??_Day_Mode& (0+255),c
  2622  00F13E  2A62               	incf	??_Day_Mode& (0+255),f,c
  2623  00F140  D001               	goto	u3018
  2624  00F142                     u3010:
  2625  00F142  6A62               	clrf	??_Day_Mode& (0+255),c
  2626  00F144                     u3018:
  2627  00F144  5062               	movf	??_Day_Mode,w,c
  2628  00F146  6E42               	movwf	?_printf+2,c
  2629  00F148  6A43               	clrf	?_printf+3,c
  2630  00F14A  ECD6  F07B         	call	_printf	;wreg free
  2631                           
  2632                           ;lab7p1.c: 351: Set_NSLT(2);
  2633  00F14E  0E02               	movlw	2
  2634  00F150  ECAB  F070         	call	_Set_NSLT
  2635                           
  2636                           ;lab7p1.c: 352: Wait_N_Seconds(5);
  2637  00F154  0E05               	movlw	5
  2638  00F156  ECEC  F06F         	call	_Wait_N_Seconds
  2639                           
  2640                           ;lab7p1.c: 353: printf(" step 19 \r\n");
  2641  00F15A  0E9B               	movlw	low STR_20
  2642  00F15C  6E40               	movwf	printf@f,c
  2643  00F15E  0EFF               	movlw	high STR_20
  2644  00F160  6E41               	movwf	printf@f+1,c
  2645  00F162  ECD6  F07B         	call	_printf	;wreg free
  2646                           
  2647                           ;lab7p1.c: 354: Set_NSLT(3);
  2648  00F166  0E03               	movlw	3
  2649  00F168  ECAB  F070         	call	_Set_NSLT
  2650                           
  2651                           ;lab7p1.c: 355: Wait_N_Seconds(3);
  2652  00F16C  0E03               	movlw	3
  2653  00F16E  ECEC  F06F         	call	_Wait_N_Seconds
  2654                           
  2655                           ;lab7p1.c: 356: printf(" step 20 \r\n");
  2656  00F172  0E53               	movlw	low STR_21
  2657  00F174  6E40               	movwf	printf@f,c
  2658  00F176  0EFF               	movlw	high STR_21
  2659  00F178  6E41               	movwf	printf@f+1,c
  2660  00F17A  ECD6  F07B         	call	_printf	;wreg free
  2661                           
  2662                           ;lab7p1.c: 357: Set_NSLT(1);
  2663  00F17E  0E01               	movlw	1
  2664  00F180  ECAB  F070         	call	_Set_NSLT
  2665  00F184  D000               	goto	l197
  2666  00F186                     l197:
  2667  00F186  0012               	return		;funcret
  2668  00F188                     __end_of_Day_Mode:
  2669                           	opt stack 0
  2670                           tblptru	equ	0xFF8
  2671                           tblptrh	equ	0xFF7
  2672                           tblptrl	equ	0xFF6
  2673                           tablat	equ	0xFF5
  2674                           prodl	equ	0xFF3
  2675                           postinc0	equ	0xFEE
  2676                           postdec1	equ	0xFE5
  2677                           fsr1l	equ	0xFE1
  2678                           status	equ	0xFD8
  2679                           
  2680 ;; *************** function _printf *****************
  2681 ;; Defined at:
  2682 ;;		line 464 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;  f               2   63[COMRAM] PTR const unsigned char 
  2685 ;;		 -> STR_35(12), STR_34(12), STR_33(26), STR_32(12), 
  2686 ;;		 -> STR_31(12), STR_30(11), STR_29(11), STR_28(11), 
  2687 ;;		 -> STR_27(25), STR_26(11), STR_25(11), STR_24(11), 
  2688 ;;		 -> STR_23(11), STR_22(22), STR_21(12), STR_20(12), 
  2689 ;;		 -> STR_19(26), STR_18(25), STR_17(12), STR_16(12), 
  2690 ;;		 -> STR_15(12), STR_14(27), STR_13(12), STR_12(12), 
  2691 ;;		 -> STR_11(12), STR_10(11), STR_9(25), STR_8(11), 
  2692 ;;		 -> STR_7(11), STR_6(11), STR_5(11), STR_4(26), 
  2693 ;;		 -> STR_3(11), STR_2(20), STR_1(32), 
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;  tmpval          4   89[COMRAM] struct .
  2696 ;;  val             4   83[COMRAM] unsigned long 
  2697 ;;  fval            3   93[COMRAM] unsigned long 
  2698 ;;  cp              3    0        PTR const unsigned char 
  2699 ;;  exp             2   87[COMRAM] int 
  2700 ;;  prec            2   81[COMRAM] int 
  2701 ;;  flag            2   79[COMRAM] unsigned short 
  2702 ;;  ap              2   77[COMRAM] PTR void [1]
  2703 ;;		 -> ?_printf(2), 
  2704 ;;  len             2    0        unsigned int 
  2705 ;;  width           2    0        int 
  2706 ;;  c               1   96[COMRAM] char 
  2707 ;;  d               1    0        unsigned char 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  2   63[COMRAM] int 
  2710 ;; Registers used:
  2711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2717 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2720 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2721 ;;Total ram usage:       34 bytes
  2722 ;; Hardware stack levels used:    1
  2723 ;; Hardware stack levels required when called:    3
  2724 ;; This function calls:
  2725 ;;		___awdiv
  2726 ;;		___ftadd
  2727 ;;		___ftge
  2728 ;;		___ftmul
  2729 ;;		___ftneg
  2730 ;;		___ftsub
  2731 ;;		___fttol
  2732 ;;		___lldiv
  2733 ;;		___llmod
  2734 ;;		___lltoft
  2735 ;;		___wmul
  2736 ;;		__div_to_l_
  2737 ;;		__tdiv_to_l_
  2738 ;;		_fround
  2739 ;;		_putch
  2740 ;;		_scale
  2741 ;; This function is called by:
  2742 ;;		_main
  2743 ;;		_Day_Mode
  2744 ;;		_Night_Mode
  2745 ;; This function uses a non-reentrant model
  2746 ;;
  2747                           
  2748                           	psect	text11
  2749  00F7AC                     __ptext11:
  2750                           	opt stack 0
  2751  00F7AC                     _printf:
  2752                           	opt stack 27
  2753                           
  2754                           ;doprnt.c: 466: va_list ap;
  2755                           ;doprnt.c: 499: signed char c;
  2756                           ;doprnt.c: 501: int width;
  2757                           ;doprnt.c: 504: int prec;
  2758                           ;doprnt.c: 508: unsigned short flag;
  2759                           ;doprnt.c: 515: char d;
  2760                           ;doprnt.c: 516: double fval;
  2761                           ;doprnt.c: 517: int exp;
  2762                           ;doprnt.c: 523: union {
  2763                           ;doprnt.c: 524: unsigned long vd;
  2764                           ;doprnt.c: 525: double integ;
  2765                           ;doprnt.c: 526: } tmpval;
  2766                           ;doprnt.c: 528: unsigned long val;
  2767                           ;doprnt.c: 529: unsigned len;
  2768                           ;doprnt.c: 530: const char * cp;
  2769                           ;doprnt.c: 533: *ap = __va_start();
  2770                           
  2771                           ;incstack = 0
  2772  00F7AC  0E42               	movlw	low (?_printf+2)
  2773  00F7AE  6E4E               	movwf	printf@ap,c
  2774  00F7B0  0E00               	movlw	high (?_printf+2)
  2775  00F7B2  6E4F               	movwf	printf@ap+1,c
  2776                           
  2777                           ;doprnt.c: 536: while(c = *f++) {
  2778  00F7B4  D2FF               	goto	l2782
  2779  00F7B6                     l2634:
  2780                           
  2781                           ;doprnt.c: 538: if(c != '%')
  2782  00F7B6  0E25               	movlw	37
  2783  00F7B8  1861               	xorwf	printf@c,w,c
  2784  00F7BA  B4D8               	btfsc	status,2,c
  2785  00F7BC  D004               	goto	l2638
  2786                           
  2787                           ;doprnt.c: 540: {
  2788                           ;doprnt.c: 541: (putch(c) );
  2789  00F7BE  5061               	movf	printf@c,w,c
  2790  00F7C0  ECA8  F06F         	call	_putch
  2791                           
  2792                           ;doprnt.c: 542: continue;
  2793  00F7C4  D2F7               	goto	l2782
  2794  00F7C6                     l2638:
  2795                           
  2796                           ;doprnt.c: 543: }
  2797                           ;doprnt.c: 548: flag = 0;
  2798  00F7C6  0E00               	movlw	0
  2799  00F7C8  6E51               	movwf	printf@flag+1,c
  2800  00F7CA  0E00               	movlw	0
  2801  00F7CC  6E50               	movwf	printf@flag,c
  2802                           
  2803                           ;doprnt.c: 635: switch(c = *f++) {
  2804  00F7CE  D005               	goto	l2644
  2805                           
  2806                           ;doprnt.c: 638: goto alldone;
  2807                           
  2808                           ;doprnt.c: 637: case 0:
  2809  00F7D0  D2FF               	goto	l285
  2810  00F7D2                     l2640:
  2811                           
  2812                           ;doprnt.c: 663: flag |= 0x400;
  2813  00F7D2  8451               	bsf	printf@flag+1,2,c
  2814                           
  2815                           ;doprnt.c: 664: break;
  2816  00F7D4  D013               	goto	l2646
  2817                           
  2818                           ;doprnt.c: 813: continue;
  2819                           
  2820                           ;doprnt.c: 802: default:
  2821  00F7D6  D2EE               	goto	l2782
  2822                           
  2823                           ;doprnt.c: 822: }
  2824  00F7D8  D011               	goto	l2646
  2825  00F7DA                     l2644:
  2826  00F7DA  C040  FFF6         	movff	printf@f,tblptrl
  2827  00F7DE  C041  FFF7         	movff	printf@f+1,tblptrh
  2828  00F7E2  4A40               	infsnz	printf@f,f,c
  2829  00F7E4  2A41               	incf	printf@f+1,f,c
  2830  00F7E6                     	if	0	;tblptru may be non-zero
  2831  00F7E6                     	endif
  2832  00F7E6                     	if	0	;tblptru may be non-zero
  2833  00F7E6                     	endif
  2834  00F7E6  0008               	tblrd		*
  2835  00F7E8  CFF5 F061          	movff	tablat,printf@c
  2836  00F7EC  5061               	movf	printf@c,w,c
  2837                           
  2838                           ; Switch size 1, requested type "space"
  2839                           ; Number of cases is 2, Range of values is 0 to 102
  2840                           ; switch strategies available:
  2841                           ; Name         Instructions Cycles
  2842                           ; simple_byte            7     4 (average)
  2843                           ;	Chosen strategy is simple_byte
  2844  00F7EE  0A00               	xorlw	0	; case 0
  2845  00F7F0  B4D8               	btfsc	status,2,c
  2846  00F7F2  D2EE               	goto	l285
  2847  00F7F4  0A66               	xorlw	102	; case 102
  2848  00F7F6  B4D8               	btfsc	status,2,c
  2849  00F7F8  D7EC               	goto	l2640
  2850  00F7FA  D2DC               	goto	l2782
  2851  00F7FC                     l2646:
  2852                           
  2853                           ;doprnt.c: 825: if(flag & (0x700)) {
  2854  00F7FC  0E07               	movlw	7
  2855  00F7FE  1451               	andwf	printf@flag+1,w,c
  2856  00F800  B4D8               	btfsc	status,2,c
  2857  00F802  D2CA               	goto	l2778
  2858                           
  2859                           ;doprnt.c: 829: prec = 6;
  2860  00F804  0E00               	movlw	0
  2861  00F806  6E53               	movwf	printf@prec+1,c
  2862  00F808  0E06               	movlw	6
  2863  00F80A  6E52               	movwf	printf@prec,c
  2864                           
  2865                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  2866  00F80C  C04E  FFD9         	movff	printf@ap,fsr2l
  2867  00F810  C04F  FFDA         	movff	printf@ap+1,fsr2h
  2868  00F814  CFDE F05E          	movff	postinc2,printf@fval
  2869  00F818  CFDE F05F          	movff	postinc2,printf@fval+1
  2870  00F81C  CFDD F060          	movff	postdec2,printf@fval+2
  2871  00F820  0E03               	movlw	3
  2872  00F822  264E               	addwf	printf@ap,f,c
  2873  00F824  0E00               	movlw	0
  2874  00F826  224F               	addwfc	printf@ap+1,f,c
  2875                           
  2876                           ;doprnt.c: 831: if(fval < 0.0) {
  2877  00F828  AE60               	btfss	printf@fval+2,7,c
  2878  00F82A  D011               	goto	l2660
  2879                           
  2880                           ;doprnt.c: 832: fval = -fval;
  2881  00F82C  C05E  F001         	movff	printf@fval,___ftneg@f1
  2882  00F830  C05F  F002         	movff	printf@fval+1,___ftneg@f1+1
  2883  00F834  C060  F003         	movff	printf@fval+2,___ftneg@f1+2
  2884  00F838  ECF9  F06F         	call	___ftneg	;wreg free
  2885  00F83C  C001  F05E         	movff	?___ftneg,printf@fval
  2886  00F840  C002  F05F         	movff	?___ftneg+1,printf@fval+1
  2887  00F844  C003  F060         	movff	?___ftneg+2,printf@fval+2
  2888                           
  2889                           ;doprnt.c: 833: flag |= 0x03;
  2890  00F848  0E03               	movlw	3
  2891  00F84A  1250               	iorwf	printf@flag,f,c
  2892  00F84C  D000               	goto	l2660
  2893  00F84E                     l2660:
  2894                           
  2895                           ;doprnt.c: 834: }
  2896                           ;doprnt.c: 835: exp = 0;
  2897  00F84E  0E00               	movlw	0
  2898  00F850  6E59               	movwf	printf@exp+1,c
  2899  00F852  0E00               	movlw	0
  2900  00F854  6E58               	movwf	printf@exp,c
  2901                           
  2902                           ;doprnt.c: 836: if( fval!=0) {
  2903  00F856  505E               	movf	printf@fval,w,c
  2904  00F858  105F               	iorwf	printf@fval+1,w,c
  2905  00F85A  1060               	iorwf	printf@fval+2,w,c
  2906  00F85C  B4D8               	btfsc	status,2,c
  2907  00F85E  D085               	goto	l2688
  2908                           
  2909                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  2910  00F860  0E82               	movlw	130
  2911  00F862  6E45               	movwf	??_printf& (0+255),c
  2912  00F864  0EFF               	movlw	255
  2913  00F866  6E46               	movwf	(??_printf+1)& (0+255),c
  2914  00F868  C05E  F047         	movff	printf@fval,??_printf+2
  2915  00F86C  C05F  F048         	movff	printf@fval+1,??_printf+3
  2916  00F870  C060  F049         	movff	printf@fval+2,??_printf+4
  2917  00F874  C061  F04A         	movff	printf@fval+3,??_printf+5
  2918  00F878  0E10               	movlw	16
  2919  00F87A  D005               	goto	u2640
  2920  00F87C                     u2645:
  2921  00F87C  90D8               	bcf	status,0,c
  2922  00F87E  324A               	rrcf	??_printf+5,f,c
  2923  00F880  3249               	rrcf	??_printf+4,f,c
  2924  00F882  3248               	rrcf	??_printf+3,f,c
  2925  00F884  3247               	rrcf	??_printf+2,f,c
  2926  00F886                     u2640:
  2927  00F886  2EE8               	decfsz	wreg,f,c
  2928  00F888  D7F9               	goto	u2645
  2929  00F88A  5047               	movf	??_printf+2,w,c
  2930  00F88C  2445               	addwf	??_printf,w,c
  2931  00F88E  6E58               	movwf	printf@exp,c
  2932  00F890  0E00               	movlw	0
  2933  00F892  2046               	addwfc	??_printf+1,w,c
  2934  00F894  6E59               	movwf	printf@exp+1,c
  2935                           
  2936                           ;doprnt.c: 838: exp--;
  2937  00F896  0658               	decf	printf@exp,f,c
  2938  00F898  A0D8               	btfss	status,0,c
  2939  00F89A  0659               	decf	printf@exp+1,f,c
  2940                           
  2941                           ;doprnt.c: 839: exp *= 3;
  2942  00F89C  C058  F00F         	movff	printf@exp,___wmul@multiplier
  2943  00F8A0  C059  F010         	movff	printf@exp+1,___wmul@multiplier+1
  2944  00F8A4  0E00               	movlw	0
  2945  00F8A6  6E12               	movwf	___wmul@multiplicand+1,c
  2946  00F8A8  0E03               	movlw	3
  2947  00F8AA  6E11               	movwf	___wmul@multiplicand,c
  2948  00F8AC  EC31  F070         	call	___wmul	;wreg free
  2949  00F8B0  C00F  F058         	movff	?___wmul,printf@exp
  2950  00F8B4  C010  F059         	movff	?___wmul+1,printf@exp+1
  2951                           
  2952                           ;doprnt.c: 840: exp /= 10;
  2953  00F8B8  C058  F007         	movff	printf@exp,___awdiv@dividend
  2954  00F8BC  C059  F008         	movff	printf@exp+1,___awdiv@dividend+1
  2955  00F8C0  0E00               	movlw	0
  2956  00F8C2  6E0A               	movwf	___awdiv@divisor+1,c
  2957  00F8C4  0E0A               	movlw	10
  2958  00F8C6  6E09               	movwf	___awdiv@divisor,c
  2959  00F8C8  EC5A  F072         	call	___awdiv	;wreg free
  2960  00F8CC  C007  F058         	movff	?___awdiv,printf@exp
  2961  00F8D0  C008  F059         	movff	?___awdiv+1,printf@exp+1
  2962                           
  2963                           ;doprnt.c: 841: if(exp < 0)
  2964  00F8D4  AE59               	btfss	printf@exp+1,7,c
  2965  00F8D6  D004               	goto	l2676
  2966                           
  2967                           ;doprnt.c: 842: exp--;
  2968  00F8D8  0658               	decf	printf@exp,f,c
  2969  00F8DA  A0D8               	btfss	status,0,c
  2970  00F8DC  0659               	decf	printf@exp+1,f,c
  2971  00F8DE  D000               	goto	l2676
  2972  00F8E0                     l2676:
  2973                           
  2974                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  2975  00F8E0  5058               	movf	printf@exp,w,c
  2976  00F8E2  0800               	sublw	0
  2977  00F8E4  ECE6  F079         	call	_scale
  2978  00F8E8  C024  F05A         	movff	?_scale,printf@tmpval
  2979  00F8EC  C025  F05B         	movff	?_scale+1,printf@tmpval+1
  2980  00F8F0  C026  F05C         	movff	?_scale+2,printf@tmpval+2
  2981                           
  2982                           ;doprnt.c: 847: tmpval.integ *= fval;
  2983  00F8F4  C05A  F015         	movff	printf@tmpval,___ftmul@f1
  2984  00F8F8  C05B  F016         	movff	printf@tmpval+1,___ftmul@f1+1
  2985  00F8FC  C05C  F017         	movff	printf@tmpval+2,___ftmul@f1+2
  2986  00F900  C05E  F018         	movff	printf@fval,___ftmul@f2
  2987  00F904  C05F  F019         	movff	printf@fval+1,___ftmul@f2+1
  2988  00F908  C060  F01A         	movff	printf@fval+2,___ftmul@f2+2
  2989  00F90C  ECA1  F074         	call	___ftmul	;wreg free
  2990  00F910  C015  F05A         	movff	?___ftmul,printf@tmpval
  2991  00F914  C016  F05B         	movff	?___ftmul+1,printf@tmpval+1
  2992  00F918  C017  F05C         	movff	?___ftmul+2,printf@tmpval+2
  2993                           
  2994                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  2995  00F91C  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  2996  00F920  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  2997  00F924  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  2998  00F928  0E00               	movlw	0
  2999  00F92A  6E04               	movwf	___ftge@ff2,c
  3000  00F92C  0E80               	movlw	128
  3001  00F92E  6E05               	movwf	___ftge@ff2+1,c
  3002  00F930  0E3F               	movlw	63
  3003  00F932  6E06               	movwf	___ftge@ff2+2,c
  3004  00F934  EC0F  F072         	call	___ftge	;wreg free
  3005  00F938  B0D8               	btfsc	status,0,c
  3006  00F93A  D004               	goto	l2684
  3007                           
  3008                           ;doprnt.c: 849: exp--;
  3009  00F93C  0658               	decf	printf@exp,f,c
  3010  00F93E  A0D8               	btfss	status,0,c
  3011  00F940  0659               	decf	printf@exp+1,f,c
  3012  00F942  D013               	goto	l2688
  3013  00F944                     l2684:
  3014                           
  3015                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  3016  00F944  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  3017  00F948  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  3018  00F94C  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  3019  00F950  0E00               	movlw	0
  3020  00F952  6E04               	movwf	___ftge@ff2,c
  3021  00F954  0E20               	movlw	32
  3022  00F956  6E05               	movwf	___ftge@ff2+1,c
  3023  00F958  0E41               	movlw	65
  3024  00F95A  6E06               	movwf	___ftge@ff2+2,c
  3025  00F95C  EC0F  F072         	call	___ftge	;wreg free
  3026  00F960  A0D8               	btfss	status,0,c
  3027  00F962  D003               	goto	l2688
  3028                           
  3029                           ;doprnt.c: 851: exp++;
  3030  00F964  4A58               	infsnz	printf@exp,f,c
  3031  00F966  2A59               	incf	printf@exp+1,f,c
  3032  00F968  D000               	goto	l2688
  3033  00F96A                     l2688:
  3034                           
  3035                           ;doprnt.c: 852: }
  3036                           ;doprnt.c: 1112: if(prec <= 12)
  3037  00F96A  BE53               	btfsc	printf@prec+1,7,c
  3038  00F96C  D006               	goto	l2690
  3039  00F96E  5053               	movf	printf@prec+1,w,c
  3040  00F970  E11C               	bnz	l2692
  3041  00F972  0E0D               	movlw	13
  3042  00F974  5C52               	subwf	printf@prec,w,c
  3043  00F976  B0D8               	btfsc	status,0,c
  3044  00F978  D018               	goto	l2692
  3045  00F97A                     l2690:
  3046                           
  3047                           ;doprnt.c: 1113: fval += fround(prec);
  3048  00F97A  C05E  F02E         	movff	printf@fval,___ftadd@f1
  3049  00F97E  C05F  F02F         	movff	printf@fval+1,___ftadd@f1+1
  3050  00F982  C060  F030         	movff	printf@fval+2,___ftadd@f1+2
  3051  00F986  5052               	movf	printf@prec,w,c
  3052  00F988  ECC4  F078         	call	_fround
  3053  00F98C  C024  F031         	movff	?_fround,___ftadd@f2
  3054  00F990  C025  F032         	movff	?_fround+1,___ftadd@f2+1
  3055  00F994  C026  F033         	movff	?_fround+2,___ftadd@f2+2
  3056  00F998  ECDF  F076         	call	___ftadd	;wreg free
  3057  00F99C  C02E  F05E         	movff	?___ftadd,printf@fval
  3058  00F9A0  C02F  F05F         	movff	?___ftadd+1,printf@fval+1
  3059  00F9A4  C030  F060         	movff	?___ftadd+2,printf@fval+2
  3060  00F9A8  D000               	goto	l2692
  3061  00F9AA                     l2692:
  3062                           
  3063                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  3064  00F9AA  BE59               	btfsc	printf@exp+1,7,c
  3065  00F9AC  D006               	goto	l2694
  3066  00F9AE  5059               	movf	printf@exp+1,w,c
  3067  00F9B0  E120               	bnz	l2700
  3068  00F9B2  0E0A               	movlw	10
  3069  00F9B4  5C58               	subwf	printf@exp,w,c
  3070  00F9B6  B0D8               	btfsc	status,0,c
  3071  00F9B8  D01C               	goto	l2700
  3072  00F9BA                     l2694:
  3073  00F9BA  505E               	movf	printf@fval,w,c
  3074  00F9BC  105F               	iorwf	printf@fval+1,w,c
  3075  00F9BE  1060               	iorwf	printf@fval+2,w,c
  3076  00F9C0  B4D8               	btfsc	status,2,c
  3077  00F9C2  D06D               	goto	l2714
  3078  00F9C4  C05E  F02B         	movff	printf@fval,___fttol@f1
  3079  00F9C8  C05F  F02C         	movff	printf@fval+1,___fttol@f1+1
  3080  00F9CC  C060  F02D         	movff	printf@fval+2,___fttol@f1+2
  3081  00F9D0  EC2E  F074         	call	___fttol	;wreg free
  3082  00F9D4  502B               	movf	?___fttol,w,c
  3083  00F9D6  102C               	iorwf	?___fttol+1,w,c
  3084  00F9D8  102D               	iorwf	?___fttol+2,w,c
  3085  00F9DA  102E               	iorwf	?___fttol+3,w,c
  3086  00F9DC  B4D8               	btfsc	status,2,c
  3087  00F9DE  BE59               	btfsc	printf@exp+1,7,c
  3088  00F9E0  D05E               	goto	l2714
  3089  00F9E2  5059               	movf	printf@exp+1,w,c
  3090  00F9E4  E106               	bnz	l2700
  3091  00F9E6  0E02               	movlw	2
  3092  00F9E8  5C58               	subwf	printf@exp,w,c
  3093  00F9EA  B0D8               	btfsc	status,0,c
  3094  00F9EC  D002               	goto	l2700
  3095  00F9EE  D057               	goto	l2714
  3096  00F9F0  D000               	goto	l2700
  3097  00F9F2                     l2700:
  3098                           
  3099                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  3100  00F9F2  C05A  F001         	movff	printf@tmpval,___ftge@ff1
  3101  00F9F6  C05B  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  3102  00F9FA  C05C  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  3103  00F9FE  0E70               	movlw	112
  3104  00FA00  6E04               	movwf	___ftge@ff2,c
  3105  00FA02  0E89               	movlw	137
  3106  00FA04  6E05               	movwf	___ftge@ff2+1,c
  3107  00FA06  0E40               	movlw	64
  3108  00FA08  6E06               	movwf	___ftge@ff2+2,c
  3109  00FA0A  EC0F  F072         	call	___ftge	;wreg free
  3110  00FA0E  B0D8               	btfsc	status,0,c
  3111  00FA10  D002               	goto	l2704
  3112                           
  3113                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  3114  00FA12  0EF7               	movlw	247
  3115  00FA14  D001               	goto	L1
  3116  00FA16                     l2704:
  3117                           
  3118                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  3119  00FA16  0EF8               	movlw	248
  3120  00FA18                     L1:
  3121  00FA18  2658               	addwf	printf@exp,f,c
  3122  00FA1A  0EFF               	movlw	255
  3123  00FA1C  2259               	addwfc	printf@exp+1,f,c
  3124  00FA1E  D000               	goto	l2706
  3125  00FA20                     l2706:
  3126                           
  3127                           ;doprnt.c: 1124: }
  3128                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  3129  00FA20  5058               	movf	printf@exp,w,c
  3130  00FA22  ECE6  F079         	call	_scale
  3131  00FA26  C024  F05A         	movff	?_scale,printf@tmpval
  3132  00FA2A  C025  F05B         	movff	?_scale+1,printf@tmpval+1
  3133  00FA2E  C026  F05C         	movff	?_scale+2,printf@tmpval+2
  3134                           
  3135                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  3136  00FA32  D017               	goto	l2710
  3137  00FA34  C05E  F001         	movff	printf@fval,__div_to_l_@f1
  3138  00FA38  C05F  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  3139  00FA3C  C060  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  3140  00FA40  C05A  F004         	movff	printf@tmpval,__div_to_l_@f2
  3141  00FA44  C05B  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  3142  00FA48  C05C  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  3143  00FA4C  EC1D  F075         	call	__div_to_l_	;wreg free
  3144  00FA50  C001  F054         	movff	?__div_to_l_,printf@val
  3145  00FA54  C002  F055         	movff	?__div_to_l_+1,printf@val+1
  3146  00FA58  C003  F056         	movff	?__div_to_l_+2,printf@val+2
  3147  00FA5C  C004  F057         	movff	?__div_to_l_+3,printf@val+3
  3148  00FA60  D017               	goto	l2712
  3149  00FA62                     l2710:
  3150  00FA62  C05E  F001         	movff	printf@fval,__tdiv_to_l_@f1
  3151  00FA66  C05F  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  3152  00FA6A  C060  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  3153  00FA6E  C05A  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  3154  00FA72  C05B  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  3155  00FA76  C05C  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  3156  00FA7A  ECA2  F075         	call	__tdiv_to_l_	;wreg free
  3157  00FA7E  C001  F054         	movff	?__tdiv_to_l_,printf@val
  3158  00FA82  C002  F055         	movff	?__tdiv_to_l_+1,printf@val+1
  3159  00FA86  C003  F056         	movff	?__tdiv_to_l_+2,printf@val+2
  3160  00FA8A  C004  F057         	movff	?__tdiv_to_l_+3,printf@val+3
  3161  00FA8E  D000               	goto	l2712
  3162  00FA90                     l2712:
  3163                           
  3164                           ;doprnt.c: 1129: fval = 0.0;
  3165  00FA90  0E00               	movlw	0
  3166  00FA92  6E5E               	movwf	printf@fval,c
  3167  00FA94  0E00               	movlw	0
  3168  00FA96  6E5F               	movwf	printf@fval+1,c
  3169  00FA98  0E00               	movlw	0
  3170  00FA9A  6E60               	movwf	printf@fval+2,c
  3171                           
  3172                           ;doprnt.c: 1130: } else {
  3173  00FA9C  D033               	goto	l2718
  3174  00FA9E                     l2714:
  3175                           
  3176                           ;doprnt.c: 1131: val = (unsigned long)fval;
  3177  00FA9E  C05E  F02B         	movff	printf@fval,___fttol@f1
  3178  00FAA2  C05F  F02C         	movff	printf@fval+1,___fttol@f1+1
  3179  00FAA6  C060  F02D         	movff	printf@fval+2,___fttol@f1+2
  3180  00FAAA  EC2E  F074         	call	___fttol	;wreg free
  3181  00FAAE  C02B  F054         	movff	?___fttol,printf@val
  3182  00FAB2  C02C  F055         	movff	?___fttol+1,printf@val+1
  3183  00FAB6  C02D  F056         	movff	?___fttol+2,printf@val+2
  3184  00FABA  C02E  F057         	movff	?___fttol+3,printf@val+3
  3185                           
  3186                           ;doprnt.c: 1132: fval -= (double)val;
  3187  00FABE  C05E  F03A         	movff	printf@fval,___ftsub@f1
  3188  00FAC2  C05F  F03B         	movff	printf@fval+1,___ftsub@f1+1
  3189  00FAC6  C060  F03C         	movff	printf@fval+2,___ftsub@f1+2
  3190  00FACA  C054  F009         	movff	printf@val,___lltoft@c
  3191  00FACE  C055  F00A         	movff	printf@val+1,___lltoft@c+1
  3192  00FAD2  C056  F00B         	movff	printf@val+2,___lltoft@c+2
  3193  00FAD6  C057  F00C         	movff	printf@val+3,___lltoft@c+3
  3194  00FADA  ECE8  F070         	call	___lltoft	;wreg free
  3195  00FADE  C009  F03D         	movff	?___lltoft,___ftsub@f2
  3196  00FAE2  C00A  F03E         	movff	?___lltoft+1,___ftsub@f2+1
  3197  00FAE6  C00B  F03F         	movff	?___lltoft+2,___ftsub@f2+2
  3198  00FAEA  ECC6  F070         	call	___ftsub	;wreg free
  3199  00FAEE  C03A  F05E         	movff	?___ftsub,printf@fval
  3200  00FAF2  C03B  F05F         	movff	?___ftsub+1,printf@fval+1
  3201  00FAF6  C03C  F060         	movff	?___ftsub+2,printf@fval+2
  3202                           
  3203                           ;doprnt.c: 1133: exp = 0;
  3204  00FAFA  0E00               	movlw	0
  3205  00FAFC  6E59               	movwf	printf@exp+1,c
  3206  00FAFE  0E00               	movlw	0
  3207  00FB00  6E58               	movwf	printf@exp,c
  3208  00FB02  D000               	goto	l2718
  3209  00FB04                     l2718:
  3210                           
  3211                           ;doprnt.c: 1134: }
  3212                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3213  00FB04  0E01               	movlw	1
  3214  00FB06  6E61               	movwf	printf@c,c
  3215  00FB08                     l2720:
  3216  00FB08  0E0A               	movlw	10
  3217  00FB0A  1861               	xorwf	printf@c,w,c
  3218  00FB0C  B4D8               	btfsc	status,2,c
  3219  00FB0E  D01C               	goto	l2732
  3220  00FB10  D001               	goto	l2724
  3221  00FB12  D01A               	goto	l2732
  3222  00FB14                     l2724:
  3223                           
  3224                           ;doprnt.c: 1137: if(val < dpowers[c])
  3225  00FB14  5061               	movf	printf@c,w,c
  3226  00FB16  0D04               	mullw	4
  3227  00FB18  0ED3               	movlw	low _dpowers
  3228  00FB1A  24F3               	addwf	prodl,w,c
  3229  00FB1C  6EF6               	movwf	tblptrl,c
  3230  00FB1E  0EFD               	movlw	high _dpowers
  3231  00FB20  20F4               	addwfc	prodh,w,c
  3232  00FB22  6EF7               	movwf	tblptrh,c
  3233  00FB24                     	if	0	;There are less than 3 active tblptr bytes
  3234  00FB24                     	endif
  3235  00FB24  0009               	tblrd		*+
  3236  00FB26  50F5               	movf	tablat,w,c
  3237  00FB28  5C54               	subwf	printf@val,w,c
  3238  00FB2A  0009               	tblrd		*+
  3239  00FB2C  50F5               	movf	tablat,w,c
  3240  00FB2E  5855               	subwfb	printf@val+1,w,c
  3241  00FB30  0009               	tblrd		*+
  3242  00FB32  50F5               	movf	tablat,w,c
  3243  00FB34  5856               	subwfb	printf@val+2,w,c
  3244  00FB36  0009               	tblrd		*+
  3245  00FB38  50F5               	movf	tablat,w,c
  3246  00FB3A  5857               	subwfb	printf@val+3,w,c
  3247  00FB3C  A0D8               	btfss	status,0,c
  3248  00FB3E  D004               	goto	l2732
  3249  00FB40  D001               	goto	l2728
  3250                           
  3251                           ;doprnt.c: 1138: break;
  3252  00FB42  D002               	goto	l2732
  3253  00FB44                     l2728:
  3254  00FB44  2A61               	incf	printf@c,f,c
  3255  00FB46  D7E0               	goto	l2720
  3256  00FB48                     l2732:
  3257                           
  3258                           ;doprnt.c: 1175: {
  3259                           ;doprnt.c: 1188: if(flag & 0x03)
  3260  00FB48  0E03               	movlw	3
  3261  00FB4A  1450               	andwf	printf@flag,w,c
  3262  00FB4C  6E45               	movwf	??_printf& (0+255),c
  3263  00FB4E  0E00               	movlw	0
  3264  00FB50  1451               	andwf	printf@flag+1,w,c
  3265  00FB52  6E46               	movwf	(??_printf+1)& (0+255),c
  3266  00FB54  5045               	movf	??_printf,w,c
  3267  00FB56  1046               	iorwf	??_printf+1,w,c
  3268  00FB58  B4D8               	btfsc	status,2,c
  3269  00FB5A  D049               	goto	l2742
  3270                           
  3271                           ;doprnt.c: 1190: (putch('-') );
  3272  00FB5C  0E2D               	movlw	45
  3273  00FB5E  ECA8  F06F         	call	_putch
  3274                           
  3275                           ;doprnt.c: 1195: }
  3276                           ;doprnt.c: 1196: while(c--) {
  3277  00FB62  D045               	goto	l2742
  3278  00FB64                     l2736:
  3279                           
  3280                           ;doprnt.c: 1200: {
  3281                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  3282  00FB64  C054  F001         	movff	printf@val,___lldiv@dividend
  3283  00FB68  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  3284  00FB6C  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  3285  00FB70  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  3286  00FB74  5061               	movf	printf@c,w,c
  3287  00FB76  0D04               	mullw	4
  3288  00FB78  0ED3               	movlw	low _dpowers
  3289  00FB7A  24F3               	addwf	prodl,w,c
  3290  00FB7C  6EF6               	movwf	tblptrl,c
  3291  00FB7E  0EFD               	movlw	high _dpowers
  3292  00FB80  20F4               	addwfc	prodh,w,c
  3293  00FB82  6EF7               	movwf	tblptrh,c
  3294  00FB84                     	if	0	;There are less than 3 active tblptr bytes
  3295  00FB84                     	endif
  3296  00FB84  0009               	tblrd		*+
  3297  00FB86  CFF5 F005          	movff	tablat,___lldiv@divisor
  3298  00FB8A  0009               	tblrd		*+
  3299  00FB8C  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  3300  00FB90  0009               	tblrd		*+
  3301  00FB92  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  3302  00FB96  000A               	tblrd		*-
  3303  00FB98  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  3304  00FB9C  ECC9  F071         	call	___lldiv	;wreg free
  3305  00FBA0  C001  F05A         	movff	?___lldiv,printf@tmpval
  3306  00FBA4  C002  F05B         	movff	?___lldiv+1,printf@tmpval+1
  3307  00FBA8  C003  F05C         	movff	?___lldiv+2,printf@tmpval+2
  3308  00FBAC  C004  F05D         	movff	?___lldiv+3,printf@tmpval+3
  3309                           
  3310                           ;doprnt.c: 1202: tmpval.vd %= 10;
  3311  00FBB0  C05A  F001         	movff	printf@tmpval,___llmod@dividend
  3312  00FBB4  C05B  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  3313  00FBB8  C05C  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  3314  00FBBC  C05D  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  3315  00FBC0  0E0A               	movlw	10
  3316  00FBC2  6E05               	movwf	___llmod@divisor,c
  3317  00FBC4  0E00               	movlw	0
  3318  00FBC6  6E06               	movwf	___llmod@divisor+1,c
  3319  00FBC8  0E00               	movlw	0
  3320  00FBCA  6E07               	movwf	___llmod@divisor+2,c
  3321  00FBCC  0E00               	movlw	0
  3322  00FBCE  6E08               	movwf	___llmod@divisor+3,c
  3323  00FBD0  EC18  F071         	call	___llmod	;wreg free
  3324  00FBD4  C001  F05A         	movff	?___llmod,printf@tmpval
  3325  00FBD8  C002  F05B         	movff	?___llmod+1,printf@tmpval+1
  3326  00FBDC  C003  F05C         	movff	?___llmod+2,printf@tmpval+2
  3327  00FBE0  C004  F05D         	movff	?___llmod+3,printf@tmpval+3
  3328                           
  3329                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  3330  00FBE4  505A               	movf	printf@tmpval,w,c
  3331  00FBE6  0F30               	addlw	48
  3332  00FBE8  ECA8  F06F         	call	_putch
  3333  00FBEC  D000               	goto	l2742
  3334  00FBEE                     l2742:
  3335  00FBEE  0661               	decf	printf@c,f,c
  3336  00FBF0  2861               	incf	printf@c,w,c
  3337  00FBF2  B4D8               	btfsc	status,2,c
  3338  00FBF4  D009               	goto	l2748
  3339  00FBF6  D7B6               	goto	l2736
  3340                           
  3341                           ;doprnt.c: 1204: }
  3342                           ;doprnt.c: 1206: }
  3343                           ;doprnt.c: 1207: while(exp > 0) {
  3344  00FBF8  D007               	goto	l2748
  3345  00FBFA                     l2744:
  3346                           
  3347                           ;doprnt.c: 1208: (putch('0') );
  3348  00FBFA  0E30               	movlw	48
  3349  00FBFC  ECA8  F06F         	call	_putch
  3350                           
  3351                           ;doprnt.c: 1209: exp--;
  3352  00FC00  0658               	decf	printf@exp,f,c
  3353  00FC02  A0D8               	btfss	status,0,c
  3354  00FC04  0659               	decf	printf@exp+1,f,c
  3355  00FC06  D000               	goto	l2748
  3356  00FC08                     l2748:
  3357  00FC08  BE59               	btfsc	printf@exp+1,7,c
  3358  00FC0A  D005               	goto	l2750
  3359  00FC0C  5059               	movf	printf@exp+1,w,c
  3360  00FC0E  E1F5               	bnz	l2744
  3361  00FC10  0458               	decf	printf@exp,w,c
  3362  00FC12  B0D8               	btfsc	status,0,c
  3363  00FC14  D7F2               	goto	l2744
  3364  00FC16                     l2750:
  3365                           
  3366                           ;doprnt.c: 1210: }
  3367                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3368  00FC16  BE53               	btfsc	printf@prec+1,7,c
  3369  00FC18  D009               	goto	l274
  3370  00FC1A  5053               	movf	printf@prec+1,w,c
  3371  00FC1C  E104               	bnz	u2800
  3372  00FC1E  0E09               	movlw	9
  3373  00FC20  5C52               	subwf	printf@prec,w,c
  3374  00FC22  A0D8               	btfss	status,0,c
  3375  00FC24  D003               	goto	l274
  3376  00FC26                     u2800:
  3377                           
  3378                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  3379  00FC26  0E08               	movlw	8
  3380  00FC28  6E61               	movwf	printf@c,c
  3381  00FC2A  D003               	goto	l2754
  3382  00FC2C                     l274:
  3383                           
  3384                           ;doprnt.c: 1213: else
  3385                           ;doprnt.c: 1214: c = prec;
  3386  00FC2C  C052  F061         	movff	printf@prec,printf@c
  3387  00FC30  D000               	goto	l2754
  3388  00FC32                     l2754:
  3389                           
  3390                           ;doprnt.c: 1215: prec -= c;
  3391  00FC32  5061               	movf	printf@c,w,c
  3392  00FC34  5E52               	subwf	printf@prec,f,c
  3393  00FC36  0E00               	movlw	0
  3394  00FC38  BE61               	btfsc	printf@c,7,c
  3395  00FC3A  0EFF               	movlw	255
  3396  00FC3C  5A53               	subwfb	printf@prec+1,f,c
  3397                           
  3398                           ;doprnt.c: 1219: if(c)
  3399  00FC3E  5061               	movf	printf@c,w,c
  3400  00FC40  B4D8               	btfsc	status,2,c
  3401  00FC42  D004               	goto	l2760
  3402                           
  3403                           ;doprnt.c: 1221: (putch('.') );
  3404  00FC44  0E2E               	movlw	46
  3405  00FC46  ECA8  F06F         	call	_putch
  3406  00FC4A  D000               	goto	l2760
  3407  00FC4C                     l2760:
  3408                           
  3409                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3410  00FC4C  5061               	movf	printf@c,w,c
  3411  00FC4E  ECE6  F079         	call	_scale
  3412  00FC52  C024  F04B         	movff	?_scale,_printf$1716
  3413  00FC56  C025  F04C         	movff	?_scale+1,_printf$1716+1
  3414  00FC5A  C026  F04D         	movff	?_scale+2,_printf$1716+2
  3415                           
  3416                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  3417  00FC5E  C05E  F018         	movff	printf@fval,___ftmul@f2
  3418  00FC62  C05F  F019         	movff	printf@fval+1,___ftmul@f2+1
  3419  00FC66  C060  F01A         	movff	printf@fval+2,___ftmul@f2+2
  3420  00FC6A  C04B  F015         	movff	_printf$1716,___ftmul@f1
  3421  00FC6E  C04C  F016         	movff	_printf$1716+1,___ftmul@f1+1
  3422  00FC72  C04D  F017         	movff	_printf$1716+2,___ftmul@f1+2
  3423  00FC76  ECA1  F074         	call	___ftmul	;wreg free
  3424  00FC7A  C015  F02B         	movff	?___ftmul,___fttol@f1
  3425  00FC7E  C016  F02C         	movff	?___ftmul+1,___fttol@f1+1
  3426  00FC82  C017  F02D         	movff	?___ftmul+2,___fttol@f1+2
  3427  00FC86  EC2E  F074         	call	___fttol	;wreg free
  3428  00FC8A  C02B  F054         	movff	?___fttol,printf@val
  3429  00FC8E  C02C  F055         	movff	?___fttol+1,printf@val+1
  3430  00FC92  C02D  F056         	movff	?___fttol+2,printf@val+2
  3431  00FC96  C02E  F057         	movff	?___fttol+3,printf@val+3
  3432                           
  3433                           ;doprnt.c: 1228: while(c--) {
  3434  00FC9A  D06B               	goto	l2770
  3435  00FC9C                     l2764:
  3436                           
  3437                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  3438  00FC9C  C054  F001         	movff	printf@val,___lldiv@dividend
  3439  00FCA0  C055  F002         	movff	printf@val+1,___lldiv@dividend+1
  3440  00FCA4  C056  F003         	movff	printf@val+2,___lldiv@dividend+2
  3441  00FCA8  C057  F004         	movff	printf@val+3,___lldiv@dividend+3
  3442  00FCAC  5061               	movf	printf@c,w,c
  3443  00FCAE  0D04               	mullw	4
  3444  00FCB0  0ED3               	movlw	low _dpowers
  3445  00FCB2  24F3               	addwf	prodl,w,c
  3446  00FCB4  6EF6               	movwf	tblptrl,c
  3447  00FCB6  0EFD               	movlw	high _dpowers
  3448  00FCB8  20F4               	addwfc	prodh,w,c
  3449  00FCBA  6EF7               	movwf	tblptrh,c
  3450  00FCBC                     	if	0	;There are less than 3 active tblptr bytes
  3451  00FCBC                     	endif
  3452  00FCBC  0009               	tblrd		*+
  3453  00FCBE  CFF5 F005          	movff	tablat,___lldiv@divisor
  3454  00FCC2  0009               	tblrd		*+
  3455  00FCC4  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  3456  00FCC8  0009               	tblrd		*+
  3457  00FCCA  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  3458  00FCCE  000A               	tblrd		*-
  3459  00FCD0  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  3460  00FCD4  ECC9  F071         	call	___lldiv	;wreg free
  3461  00FCD8  C001  F05A         	movff	?___lldiv,printf@tmpval
  3462  00FCDC  C002  F05B         	movff	?___lldiv+1,printf@tmpval+1
  3463  00FCE0  C003  F05C         	movff	?___lldiv+2,printf@tmpval+2
  3464  00FCE4  C004  F05D         	movff	?___lldiv+3,printf@tmpval+3
  3465                           
  3466                           ;doprnt.c: 1230: tmpval.vd %= 10;
  3467  00FCE8  C05A  F001         	movff	printf@tmpval,___llmod@dividend
  3468  00FCEC  C05B  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  3469  00FCF0  C05C  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  3470  00FCF4  C05D  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  3471  00FCF8  0E0A               	movlw	10
  3472  00FCFA  6E05               	movwf	___llmod@divisor,c
  3473  00FCFC  0E00               	movlw	0
  3474  00FCFE  6E06               	movwf	___llmod@divisor+1,c
  3475  00FD00  0E00               	movlw	0
  3476  00FD02  6E07               	movwf	___llmod@divisor+2,c
  3477  00FD04  0E00               	movlw	0
  3478  00FD06  6E08               	movwf	___llmod@divisor+3,c
  3479  00FD08  EC18  F071         	call	___llmod	;wreg free
  3480  00FD0C  C001  F05A         	movff	?___llmod,printf@tmpval
  3481  00FD10  C002  F05B         	movff	?___llmod+1,printf@tmpval+1
  3482  00FD14  C003  F05C         	movff	?___llmod+2,printf@tmpval+2
  3483  00FD18  C004  F05D         	movff	?___llmod+3,printf@tmpval+3
  3484                           
  3485                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  3486  00FD1C  505A               	movf	printf@tmpval,w,c
  3487  00FD1E  0F30               	addlw	48
  3488  00FD20  ECA8  F06F         	call	_putch
  3489                           
  3490                           ;doprnt.c: 1232: val %= dpowers[c];
  3491  00FD24  C054  F001         	movff	printf@val,___llmod@dividend
  3492  00FD28  C055  F002         	movff	printf@val+1,___llmod@dividend+1
  3493  00FD2C  C056  F003         	movff	printf@val+2,___llmod@dividend+2
  3494  00FD30  C057  F004         	movff	printf@val+3,___llmod@dividend+3
  3495  00FD34  5061               	movf	printf@c,w,c
  3496  00FD36  0D04               	mullw	4
  3497  00FD38  0ED3               	movlw	low _dpowers
  3498  00FD3A  24F3               	addwf	prodl,w,c
  3499  00FD3C  6EF6               	movwf	tblptrl,c
  3500  00FD3E  0EFD               	movlw	high _dpowers
  3501  00FD40  20F4               	addwfc	prodh,w,c
  3502  00FD42  6EF7               	movwf	tblptrh,c
  3503  00FD44                     	if	0	;There are less than 3 active tblptr bytes
  3504  00FD44                     	endif
  3505  00FD44  0009               	tblrd		*+
  3506  00FD46  CFF5 F005          	movff	tablat,___llmod@divisor
  3507  00FD4A  0009               	tblrd		*+
  3508  00FD4C  CFF5 F006          	movff	tablat,___llmod@divisor+1
  3509  00FD50  0009               	tblrd		*+
  3510  00FD52  CFF5 F007          	movff	tablat,___llmod@divisor+2
  3511  00FD56  000A               	tblrd		*-
  3512  00FD58  CFF5 F008          	movff	tablat,___llmod@divisor+3
  3513  00FD5C  EC18  F071         	call	___llmod	;wreg free
  3514  00FD60  C001  F054         	movff	?___llmod,printf@val
  3515  00FD64  C002  F055         	movff	?___llmod+1,printf@val+1
  3516  00FD68  C003  F056         	movff	?___llmod+2,printf@val+2
  3517  00FD6C  C004  F057         	movff	?___llmod+3,printf@val+3
  3518  00FD70  D000               	goto	l2770
  3519  00FD72                     l2770:
  3520  00FD72  0661               	decf	printf@c,f,c
  3521  00FD74  2861               	incf	printf@c,w,c
  3522  00FD76  B4D8               	btfsc	status,2,c
  3523  00FD78  D009               	goto	l2776
  3524  00FD7A  D790               	goto	l2764
  3525                           
  3526                           ;doprnt.c: 1233: }
  3527                           ;doprnt.c: 1235: while(prec) {
  3528  00FD7C  D007               	goto	l2776
  3529  00FD7E                     l2772:
  3530                           
  3531                           ;doprnt.c: 1236: (putch('0') );
  3532  00FD7E  0E30               	movlw	48
  3533  00FD80  ECA8  F06F         	call	_putch
  3534                           
  3535                           ;doprnt.c: 1237: prec--;
  3536  00FD84  0652               	decf	printf@prec,f,c
  3537  00FD86  A0D8               	btfss	status,0,c
  3538  00FD88  0653               	decf	printf@prec+1,f,c
  3539  00FD8A  D000               	goto	l2776
  3540  00FD8C                     l2776:
  3541  00FD8C  5052               	movf	printf@prec,w,c
  3542  00FD8E  1053               	iorwf	printf@prec+1,w,c
  3543  00FD90  B4D8               	btfsc	status,2,c
  3544  00FD92  D010               	goto	l2782
  3545  00FD94  D7F4               	goto	l2772
  3546                           
  3547                           ;doprnt.c: 1238: }
  3548                           ;doprnt.c: 1245: continue;
  3549  00FD96  D00E               	goto	l2782
  3550  00FD98                     l2778:
  3551                           
  3552                           ;doprnt.c: 1246: }
  3553                           ;doprnt.c: 1422: {
  3554                           ;doprnt.c: 1438: if(flag & 0x03)
  3555  00FD98  0E03               	movlw	3
  3556  00FD9A  1450               	andwf	printf@flag,w,c
  3557  00FD9C  6E45               	movwf	??_printf& (0+255),c
  3558  00FD9E  0E00               	movlw	0
  3559  00FDA0  1451               	andwf	printf@flag+1,w,c
  3560  00FDA2  6E46               	movwf	(??_printf+1)& (0+255),c
  3561  00FDA4  5045               	movf	??_printf,w,c
  3562  00FDA6  1046               	iorwf	??_printf+1,w,c
  3563  00FDA8  B4D8               	btfsc	status,2,c
  3564  00FDAA  D004               	goto	l2782
  3565                           
  3566                           ;doprnt.c: 1439: (putch('-') );
  3567  00FDAC  0E2D               	movlw	45
  3568  00FDAE  ECA8  F06F         	call	_putch
  3569  00FDB2  D000               	goto	l2782
  3570  00FDB4                     l2782:
  3571  00FDB4  C040  FFF6         	movff	printf@f,tblptrl
  3572  00FDB8  C041  FFF7         	movff	printf@f+1,tblptrh
  3573  00FDBC  4A40               	infsnz	printf@f,f,c
  3574  00FDBE  2A41               	incf	printf@f+1,f,c
  3575  00FDC0                     	if	0	;tblptru may be non-zero
  3576  00FDC0                     	endif
  3577  00FDC0                     	if	0	;tblptru may be non-zero
  3578  00FDC0                     	endif
  3579  00FDC0  0008               	tblrd		*
  3580  00FDC2  CFF5 F061          	movff	tablat,printf@c
  3581  00FDC6  5061               	movf	printf@c,w,c
  3582  00FDC8  B4D8               	btfsc	status,2,c
  3583  00FDCA  D002               	goto	l285
  3584  00FDCC  D4F4               	goto	l2634
  3585  00FDCE  D000               	goto	l285
  3586  00FDD0                     l285:
  3587  00FDD0  0012               	return		;funcret
  3588  00FDD2                     __end_of_printf:
  3589                           	opt stack 0
  3590                           tblptru	equ	0xFF8
  3591                           tblptrh	equ	0xFF7
  3592                           tblptrl	equ	0xFF6
  3593                           tablat	equ	0xFF5
  3594                           prodh	equ	0xFF4
  3595                           prodl	equ	0xFF3
  3596                           postinc0	equ	0xFEE
  3597                           wreg	equ	0xFE8
  3598                           postdec1	equ	0xFE5
  3599                           fsr1l	equ	0xFE1
  3600                           postinc2	equ	0xFDE
  3601                           postdec2	equ	0xFDD
  3602                           fsr2h	equ	0xFDA
  3603                           fsr2l	equ	0xFD9
  3604                           status	equ	0xFD8
  3605                           
  3606 ;; *************** function _scale *****************
  3607 ;; Defined at:
  3608 ;;		line 425 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;  scl             1    wreg     char 
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  scl             1   41[COMRAM] char 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  3   35[COMRAM] char 
  3615 ;; Registers used:
  3616 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3622 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3623 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3625 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3626 ;;Total ram usage:        7 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    2
  3629 ;; This function calls:
  3630 ;;		___awdiv
  3631 ;;		___awmod
  3632 ;;		___ftmul
  3633 ;;		___wmul
  3634 ;; This function is called by:
  3635 ;;		_printf
  3636 ;; This function uses a non-reentrant model
  3637 ;;
  3638                           
  3639                           	psect	text12
  3640  00F3CC                     __ptext12:
  3641                           	opt stack 0
  3642  00F3CC                     _scale:
  3643                           	opt stack 27
  3644                           
  3645                           ;incstack = 0
  3646                           ;scale@scl stored from wreg
  3647  00F3CC  6E2A               	movwf	scale@scl,c
  3648                           
  3649                           ;doprnt.c: 428: if(scl < 0) {
  3650  00F3CE  AE2A               	btfss	scale@scl,7,c
  3651  00F3D0  D0EF               	goto	l2324
  3652                           
  3653                           ;doprnt.c: 429: scl = -scl;
  3654  00F3D2  6C2A               	negf	scale@scl,c
  3655                           
  3656                           ;doprnt.c: 430: if(scl>=110)
  3657  00F3D4  502A               	movf	scale@scl,w,c
  3658  00F3D6  0A80               	xorlw	128
  3659  00F3D8  0F12               	addlw	-238
  3660  00F3DA  A0D8               	btfss	status,0,c
  3661  00F3DC  D08D               	goto	l2314
  3662                           
  3663                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3664  00F3DE  0E00               	movlw	0
  3665  00F3E0  6E12               	movwf	___wmul@multiplicand+1,c
  3666  00F3E2  0E03               	movlw	3
  3667  00F3E4  6E11               	movwf	___wmul@multiplicand,c
  3668  00F3E6  0E00               	movlw	0
  3669  00F3E8  6E0A               	movwf	___awdiv@divisor+1,c
  3670  00F3EA  0E0A               	movlw	10
  3671  00F3EC  6E09               	movwf	___awdiv@divisor,c
  3672  00F3EE  0E00               	movlw	0
  3673  00F3F0  6E04               	movwf	___awmod@divisor+1,c
  3674  00F3F2  0E64               	movlw	100
  3675  00F3F4  6E03               	movwf	___awmod@divisor,c
  3676  00F3F6  502A               	movf	scale@scl,w,c
  3677  00F3F8  6E01               	movwf	___awmod@dividend,c
  3678  00F3FA  6A02               	clrf	___awmod@dividend+1,c
  3679  00F3FC  BE01               	btfsc	___awmod@dividend,7,c
  3680  00F3FE  0602               	decf	___awmod@dividend+1,f,c
  3681  00F400  EC88  F071         	call	___awmod	;wreg free
  3682  00F404  C001  F007         	movff	?___awmod,___awdiv@dividend
  3683  00F408  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3684  00F40C  EC5A  F072         	call	___awdiv	;wreg free
  3685  00F410  0E09               	movlw	9
  3686  00F412  2407               	addwf	?___awdiv,w,c
  3687  00F414  6E0F               	movwf	___wmul@multiplier,c
  3688  00F416  0E00               	movlw	0
  3689  00F418  2008               	addwfc	?___awdiv+1,w,c
  3690  00F41A  6E10               	movwf	___wmul@multiplier+1,c
  3691  00F41C  EC31  F070         	call	___wmul	;wreg free
  3692  00F420  0EFB               	movlw	low __npowers_
  3693  00F422  240F               	addwf	?___wmul,w,c
  3694  00F424  6EF6               	movwf	tblptrl,c
  3695  00F426  0EFD               	movlw	high __npowers_
  3696  00F428  2010               	addwfc	?___wmul+1,w,c
  3697  00F42A  6EF7               	movwf	tblptrh,c
  3698  00F42C                     	if	0	;There are less than 3 active tblptr bytes
  3699  00F42C                     	endif
  3700  00F42C  0009               	tblrd		*+
  3701  00F42E  CFF5 F018          	movff	tablat,___ftmul@f2
  3702  00F432  0009               	tblrd		*+
  3703  00F434  CFF5 F019          	movff	tablat,___ftmul@f2+1
  3704  00F438  000A               	tblrd		*-
  3705  00F43A  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  3706  00F43E  0E00               	movlw	0
  3707  00F440  6E0A               	movwf	___awdiv@divisor+1,c
  3708  00F442  0E64               	movlw	100
  3709  00F444  6E09               	movwf	___awdiv@divisor,c
  3710  00F446  502A               	movf	scale@scl,w,c
  3711  00F448  6E07               	movwf	___awdiv@dividend,c
  3712  00F44A  6A08               	clrf	___awdiv@dividend+1,c
  3713  00F44C  BE07               	btfsc	___awdiv@dividend,7,c
  3714  00F44E  0608               	decf	___awdiv@dividend+1,f,c
  3715  00F450  EC5A  F072         	call	___awdiv	;wreg free
  3716  00F454  0E12               	movlw	18
  3717  00F456  2407               	addwf	?___awdiv,w,c
  3718  00F458  6E0F               	movwf	___wmul@multiplier,c
  3719  00F45A  0E00               	movlw	0
  3720  00F45C  2008               	addwfc	?___awdiv+1,w,c
  3721  00F45E  6E10               	movwf	___wmul@multiplier+1,c
  3722  00F460  0E00               	movlw	0
  3723  00F462  6E12               	movwf	___wmul@multiplicand+1,c
  3724  00F464  0E03               	movlw	3
  3725  00F466  6E11               	movwf	___wmul@multiplicand,c
  3726  00F468  EC31  F070         	call	___wmul	;wreg free
  3727  00F46C  0EFB               	movlw	low __npowers_
  3728  00F46E  240F               	addwf	?___wmul,w,c
  3729  00F470  6EF6               	movwf	tblptrl,c
  3730  00F472  0EFD               	movlw	high __npowers_
  3731  00F474  2010               	addwfc	?___wmul+1,w,c
  3732  00F476  6EF7               	movwf	tblptrh,c
  3733  00F478                     	if	0	;There are less than 3 active tblptr bytes
  3734  00F478                     	endif
  3735  00F478  0009               	tblrd		*+
  3736  00F47A  CFF5 F015          	movff	tablat,___ftmul@f1
  3737  00F47E  0009               	tblrd		*+
  3738  00F480  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3739  00F484  000A               	tblrd		*-
  3740  00F486  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3741  00F48A  ECA1  F074         	call	___ftmul	;wreg free
  3742  00F48E  C015  F027         	movff	?___ftmul,_scale$1715
  3743  00F492  C016  F028         	movff	?___ftmul+1,_scale$1715+1
  3744  00F496  C017  F029         	movff	?___ftmul+2,_scale$1715+2
  3745                           
  3746                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  3747  00F49A  C027  F015         	movff	_scale$1715,___ftmul@f1
  3748  00F49E  C028  F016         	movff	_scale$1715+1,___ftmul@f1+1
  3749  00F4A2  C029  F017         	movff	_scale$1715+2,___ftmul@f1+2
  3750  00F4A6  0E00               	movlw	0
  3751  00F4A8  6E12               	movwf	___wmul@multiplicand+1,c
  3752  00F4AA  0E03               	movlw	3
  3753  00F4AC  6E11               	movwf	___wmul@multiplicand,c
  3754  00F4AE  0E00               	movlw	0
  3755  00F4B0  6E04               	movwf	___awmod@divisor+1,c
  3756  00F4B2  0E0A               	movlw	10
  3757  00F4B4  6E03               	movwf	___awmod@divisor,c
  3758  00F4B6  502A               	movf	scale@scl,w,c
  3759  00F4B8  6E01               	movwf	___awmod@dividend,c
  3760  00F4BA  6A02               	clrf	___awmod@dividend+1,c
  3761  00F4BC  BE01               	btfsc	___awmod@dividend,7,c
  3762  00F4BE  0602               	decf	___awmod@dividend+1,f,c
  3763  00F4C0  EC88  F071         	call	___awmod	;wreg free
  3764  00F4C4  C001  F00F         	movff	?___awmod,___wmul@multiplier
  3765  00F4C8  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  3766  00F4CC  EC31  F070         	call	___wmul	;wreg free
  3767  00F4D0  0EFB               	movlw	low __npowers_
  3768  00F4D2  240F               	addwf	?___wmul,w,c
  3769  00F4D4  6EF6               	movwf	tblptrl,c
  3770  00F4D6  0EFD               	movlw	high __npowers_
  3771  00F4D8  2010               	addwfc	?___wmul+1,w,c
  3772  00F4DA  6EF7               	movwf	tblptrh,c
  3773  00F4DC                     	if	0	;There are less than 3 active tblptr bytes
  3774  00F4DC                     	endif
  3775  00F4DC  0009               	tblrd		*+
  3776  00F4DE  CFF5 F018          	movff	tablat,___ftmul@f2
  3777  00F4E2  0009               	tblrd		*+
  3778  00F4E4  CFF5 F019          	movff	tablat,___ftmul@f2+1
  3779  00F4E8  000A               	tblrd		*-
  3780  00F4EA  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  3781  00F4EE  ECA1  F074         	call	___ftmul	;wreg free
  3782  00F4F2  D141               	goto	L5
  3783  00F4F4  D15A               	goto	l229
  3784  00F4F6  D054               	goto	l2320
  3785  00F4F8                     l2314:
  3786                           
  3787                           ;doprnt.c: 432: else if(scl > 10)
  3788  00F4F8  502A               	movf	scale@scl,w,c
  3789  00F4FA  0A80               	xorlw	128
  3790  00F4FC  0F75               	addlw	-139
  3791  00F4FE  A0D8               	btfss	status,0,c
  3792  00F500  D04F               	goto	l2320
  3793                           
  3794                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  3795  00F502  0E00               	movlw	0
  3796  00F504  6E0A               	movwf	___awdiv@divisor+1,c
  3797  00F506  0E0A               	movlw	10
  3798  00F508  6E09               	movwf	___awdiv@divisor,c
  3799  00F50A  502A               	movf	scale@scl,w,c
  3800  00F50C  6E07               	movwf	___awdiv@dividend,c
  3801  00F50E  6A08               	clrf	___awdiv@dividend+1,c
  3802  00F510  BE07               	btfsc	___awdiv@dividend,7,c
  3803  00F512  0608               	decf	___awdiv@dividend+1,f,c
  3804  00F514  EC5A  F072         	call	___awdiv	;wreg free
  3805  00F518  0E09               	movlw	9
  3806  00F51A  2407               	addwf	?___awdiv,w,c
  3807  00F51C  6E0F               	movwf	___wmul@multiplier,c
  3808  00F51E  0E00               	movlw	0
  3809  00F520  2008               	addwfc	?___awdiv+1,w,c
  3810  00F522  6E10               	movwf	___wmul@multiplier+1,c
  3811  00F524  0E00               	movlw	0
  3812  00F526  6E12               	movwf	___wmul@multiplicand+1,c
  3813  00F528  0E03               	movlw	3
  3814  00F52A  6E11               	movwf	___wmul@multiplicand,c
  3815  00F52C  EC31  F070         	call	___wmul	;wreg free
  3816  00F530  0EFB               	movlw	low __npowers_
  3817  00F532  240F               	addwf	?___wmul,w,c
  3818  00F534  6EF6               	movwf	tblptrl,c
  3819  00F536  0EFD               	movlw	high __npowers_
  3820  00F538  2010               	addwfc	?___wmul+1,w,c
  3821  00F53A  6EF7               	movwf	tblptrh,c
  3822  00F53C                     	if	0	;There are less than 3 active tblptr bytes
  3823  00F53C                     	endif
  3824  00F53C  0009               	tblrd		*+
  3825  00F53E  CFF5 F015          	movff	tablat,___ftmul@f1
  3826  00F542  0009               	tblrd		*+
  3827  00F544  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3828  00F548  000A               	tblrd		*-
  3829  00F54A  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3830  00F54E  0E00               	movlw	0
  3831  00F550  6E12               	movwf	___wmul@multiplicand+1,c
  3832  00F552  0E03               	movlw	3
  3833  00F554  6E11               	movwf	___wmul@multiplicand,c
  3834  00F556  0E00               	movlw	0
  3835  00F558  6E04               	movwf	___awmod@divisor+1,c
  3836  00F55A  0E0A               	movlw	10
  3837  00F55C  6E03               	movwf	___awmod@divisor,c
  3838  00F55E  502A               	movf	scale@scl,w,c
  3839  00F560  6E01               	movwf	___awmod@dividend,c
  3840  00F562  6A02               	clrf	___awmod@dividend+1,c
  3841  00F564  BE01               	btfsc	___awmod@dividend,7,c
  3842  00F566  0602               	decf	___awmod@dividend+1,f,c
  3843  00F568  EC88  F071         	call	___awmod	;wreg free
  3844  00F56C  C001  F00F         	movff	?___awmod,___wmul@multiplier
  3845  00F570  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  3846  00F574  EC31  F070         	call	___wmul	;wreg free
  3847  00F578  0EFB               	movlw	low __npowers_
  3848  00F57A  240F               	addwf	?___wmul,w,c
  3849  00F57C  6EF6               	movwf	tblptrl,c
  3850  00F57E  0EFD               	movlw	high __npowers_
  3851  00F580  2010               	addwfc	?___wmul+1,w,c
  3852  00F582  6EF7               	movwf	tblptrh,c
  3853  00F584                     	if	0	;There are less than 3 active tblptr bytes
  3854  00F584                     	endif
  3855  00F584  0009               	tblrd		*+
  3856  00F586  CFF5 F018          	movff	tablat,___ftmul@f2
  3857  00F58A  0009               	tblrd		*+
  3858  00F58C  CFF5 F019          	movff	tablat,___ftmul@f2+1
  3859  00F590  000A               	tblrd		*-
  3860  00F592  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  3861  00F596  ECA1  F074         	call	___ftmul	;wreg free
  3862  00F59A  D0ED               	goto	L5
  3863  00F59C  D106               	goto	l229
  3864  00F59E  D000               	goto	l2320
  3865  00F5A0                     l2320:
  3866                           
  3867                           ;doprnt.c: 434: return _npowers_[scl];
  3868  00F5A0  502A               	movf	scale@scl,w,c
  3869  00F5A2  0D03               	mullw	3
  3870  00F5A4  0EFB               	movlw	low __npowers_
  3871  00F5A6  24F3               	addwf	prodl,w,c
  3872  00F5A8  6EF6               	movwf	tblptrl,c
  3873  00F5AA  0EFD               	movlw	high __npowers_
  3874  00F5AC  D0F2               	goto	L4
  3875  00F5AE  D0FD               	goto	l229
  3876  00F5B0                     l2324:
  3877                           
  3878                           ;doprnt.c: 435: }
  3879                           ;doprnt.c: 436: if(scl>=110)
  3880  00F5B0  502A               	movf	scale@scl,w,c
  3881  00F5B2  0A80               	xorlw	128
  3882  00F5B4  0F12               	addlw	-238
  3883  00F5B6  A0D8               	btfss	status,0,c
  3884  00F5B8  D08D               	goto	l2332
  3885                           
  3886                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3887  00F5BA  0E00               	movlw	0
  3888  00F5BC  6E12               	movwf	___wmul@multiplicand+1,c
  3889  00F5BE  0E03               	movlw	3
  3890  00F5C0  6E11               	movwf	___wmul@multiplicand,c
  3891  00F5C2  0E00               	movlw	0
  3892  00F5C4  6E0A               	movwf	___awdiv@divisor+1,c
  3893  00F5C6  0E0A               	movlw	10
  3894  00F5C8  6E09               	movwf	___awdiv@divisor,c
  3895  00F5CA  0E00               	movlw	0
  3896  00F5CC  6E04               	movwf	___awmod@divisor+1,c
  3897  00F5CE  0E64               	movlw	100
  3898  00F5D0  6E03               	movwf	___awmod@divisor,c
  3899  00F5D2  502A               	movf	scale@scl,w,c
  3900  00F5D4  6E01               	movwf	___awmod@dividend,c
  3901  00F5D6  6A02               	clrf	___awmod@dividend+1,c
  3902  00F5D8  BE01               	btfsc	___awmod@dividend,7,c
  3903  00F5DA  0602               	decf	___awmod@dividend+1,f,c
  3904  00F5DC  EC88  F071         	call	___awmod	;wreg free
  3905  00F5E0  C001  F007         	movff	?___awmod,___awdiv@dividend
  3906  00F5E4  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  3907  00F5E8  EC5A  F072         	call	___awdiv	;wreg free
  3908  00F5EC  0E09               	movlw	9
  3909  00F5EE  2407               	addwf	?___awdiv,w,c
  3910  00F5F0  6E0F               	movwf	___wmul@multiplier,c
  3911  00F5F2  0E00               	movlw	0
  3912  00F5F4  2008               	addwfc	?___awdiv+1,w,c
  3913  00F5F6  6E10               	movwf	___wmul@multiplier+1,c
  3914  00F5F8  EC31  F070         	call	___wmul	;wreg free
  3915  00F5FC  0E22               	movlw	low __powers_
  3916  00F5FE  240F               	addwf	?___wmul,w,c
  3917  00F600  6EF6               	movwf	tblptrl,c
  3918  00F602  0EFE               	movlw	high __powers_
  3919  00F604  2010               	addwfc	?___wmul+1,w,c
  3920  00F606  6EF7               	movwf	tblptrh,c
  3921  00F608                     	if	0	;There are less than 3 active tblptr bytes
  3922  00F608                     	endif
  3923  00F608  0009               	tblrd		*+
  3924  00F60A  CFF5 F018          	movff	tablat,___ftmul@f2
  3925  00F60E  0009               	tblrd		*+
  3926  00F610  CFF5 F019          	movff	tablat,___ftmul@f2+1
  3927  00F614  000A               	tblrd		*-
  3928  00F616  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  3929  00F61A  0E00               	movlw	0
  3930  00F61C  6E0A               	movwf	___awdiv@divisor+1,c
  3931  00F61E  0E64               	movlw	100
  3932  00F620  6E09               	movwf	___awdiv@divisor,c
  3933  00F622  502A               	movf	scale@scl,w,c
  3934  00F624  6E07               	movwf	___awdiv@dividend,c
  3935  00F626  6A08               	clrf	___awdiv@dividend+1,c
  3936  00F628  BE07               	btfsc	___awdiv@dividend,7,c
  3937  00F62A  0608               	decf	___awdiv@dividend+1,f,c
  3938  00F62C  EC5A  F072         	call	___awdiv	;wreg free
  3939  00F630  0E12               	movlw	18
  3940  00F632  2407               	addwf	?___awdiv,w,c
  3941  00F634  6E0F               	movwf	___wmul@multiplier,c
  3942  00F636  0E00               	movlw	0
  3943  00F638  2008               	addwfc	?___awdiv+1,w,c
  3944  00F63A  6E10               	movwf	___wmul@multiplier+1,c
  3945  00F63C  0E00               	movlw	0
  3946  00F63E  6E12               	movwf	___wmul@multiplicand+1,c
  3947  00F640  0E03               	movlw	3
  3948  00F642  6E11               	movwf	___wmul@multiplicand,c
  3949  00F644  EC31  F070         	call	___wmul	;wreg free
  3950  00F648  0E22               	movlw	low __powers_
  3951  00F64A  240F               	addwf	?___wmul,w,c
  3952  00F64C  6EF6               	movwf	tblptrl,c
  3953  00F64E  0EFE               	movlw	high __powers_
  3954  00F650  2010               	addwfc	?___wmul+1,w,c
  3955  00F652  6EF7               	movwf	tblptrh,c
  3956  00F654                     	if	0	;There are less than 3 active tblptr bytes
  3957  00F654                     	endif
  3958  00F654  0009               	tblrd		*+
  3959  00F656  CFF5 F015          	movff	tablat,___ftmul@f1
  3960  00F65A  0009               	tblrd		*+
  3961  00F65C  CFF5 F016          	movff	tablat,___ftmul@f1+1
  3962  00F660  000A               	tblrd		*-
  3963  00F662  CFF5 F017          	movff	tablat,___ftmul@f1+2
  3964  00F666  ECA1  F074         	call	___ftmul	;wreg free
  3965  00F66A  C015  F027         	movff	?___ftmul,_scale$1715
  3966  00F66E  C016  F028         	movff	?___ftmul+1,_scale$1715+1
  3967  00F672  C017  F029         	movff	?___ftmul+2,_scale$1715+2
  3968                           
  3969                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  3970  00F676  C027  F015         	movff	_scale$1715,___ftmul@f1
  3971  00F67A  C028  F016         	movff	_scale$1715+1,___ftmul@f1+1
  3972  00F67E  C029  F017         	movff	_scale$1715+2,___ftmul@f1+2
  3973  00F682  0E00               	movlw	0
  3974  00F684  6E12               	movwf	___wmul@multiplicand+1,c
  3975  00F686  0E03               	movlw	3
  3976  00F688  6E11               	movwf	___wmul@multiplicand,c
  3977  00F68A  0E00               	movlw	0
  3978  00F68C  6E04               	movwf	___awmod@divisor+1,c
  3979  00F68E  0E0A               	movlw	10
  3980  00F690  6E03               	movwf	___awmod@divisor,c
  3981  00F692  502A               	movf	scale@scl,w,c
  3982  00F694  6E01               	movwf	___awmod@dividend,c
  3983  00F696  6A02               	clrf	___awmod@dividend+1,c
  3984  00F698  BE01               	btfsc	___awmod@dividend,7,c
  3985  00F69A  0602               	decf	___awmod@dividend+1,f,c
  3986  00F69C  EC88  F071         	call	___awmod	;wreg free
  3987  00F6A0  C001  F00F         	movff	?___awmod,___wmul@multiplier
  3988  00F6A4  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  3989  00F6A8  EC31  F070         	call	___wmul	;wreg free
  3990  00F6AC  0E22               	movlw	low __powers_
  3991  00F6AE  240F               	addwf	?___wmul,w,c
  3992  00F6B0  6EF6               	movwf	tblptrl,c
  3993  00F6B2  0EFE               	movlw	high __powers_
  3994  00F6B4  2010               	addwfc	?___wmul+1,w,c
  3995  00F6B6  6EF7               	movwf	tblptrh,c
  3996  00F6B8                     	if	0	;There are less than 3 active tblptr bytes
  3997  00F6B8                     	endif
  3998  00F6B8  0009               	tblrd		*+
  3999  00F6BA  CFF5 F018          	movff	tablat,___ftmul@f2
  4000  00F6BE  0009               	tblrd		*+
  4001  00F6C0  CFF5 F019          	movff	tablat,___ftmul@f2+1
  4002  00F6C4  000A               	tblrd		*-
  4003  00F6C6  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  4004  00F6CA  ECA1  F074         	call	___ftmul	;wreg free
  4005  00F6CE  D053               	goto	L5
  4006  00F6D0  D06C               	goto	l229
  4007  00F6D2  D059               	goto	l2338
  4008  00F6D4                     l2332:
  4009                           
  4010                           ;doprnt.c: 438: else if(scl > 10)
  4011  00F6D4  502A               	movf	scale@scl,w,c
  4012  00F6D6  0A80               	xorlw	128
  4013  00F6D8  0F75               	addlw	-139
  4014  00F6DA  A0D8               	btfss	status,0,c
  4015  00F6DC  D054               	goto	l2338
  4016                           
  4017                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  4018  00F6DE  0E00               	movlw	0
  4019  00F6E0  6E0A               	movwf	___awdiv@divisor+1,c
  4020  00F6E2  0E0A               	movlw	10
  4021  00F6E4  6E09               	movwf	___awdiv@divisor,c
  4022  00F6E6  502A               	movf	scale@scl,w,c
  4023  00F6E8  6E07               	movwf	___awdiv@dividend,c
  4024  00F6EA  6A08               	clrf	___awdiv@dividend+1,c
  4025  00F6EC  BE07               	btfsc	___awdiv@dividend,7,c
  4026  00F6EE  0608               	decf	___awdiv@dividend+1,f,c
  4027  00F6F0  EC5A  F072         	call	___awdiv	;wreg free
  4028  00F6F4  0E09               	movlw	9
  4029  00F6F6  2407               	addwf	?___awdiv,w,c
  4030  00F6F8  6E0F               	movwf	___wmul@multiplier,c
  4031  00F6FA  0E00               	movlw	0
  4032  00F6FC  2008               	addwfc	?___awdiv+1,w,c
  4033  00F6FE  6E10               	movwf	___wmul@multiplier+1,c
  4034  00F700  0E00               	movlw	0
  4035  00F702  6E12               	movwf	___wmul@multiplicand+1,c
  4036  00F704  0E03               	movlw	3
  4037  00F706  6E11               	movwf	___wmul@multiplicand,c
  4038  00F708  EC31  F070         	call	___wmul	;wreg free
  4039  00F70C  0E22               	movlw	low __powers_
  4040  00F70E  240F               	addwf	?___wmul,w,c
  4041  00F710  6EF6               	movwf	tblptrl,c
  4042  00F712  0EFE               	movlw	high __powers_
  4043  00F714  2010               	addwfc	?___wmul+1,w,c
  4044  00F716  6EF7               	movwf	tblptrh,c
  4045  00F718                     	if	0	;There are less than 3 active tblptr bytes
  4046  00F718                     	endif
  4047  00F718  0009               	tblrd		*+
  4048  00F71A  CFF5 F015          	movff	tablat,___ftmul@f1
  4049  00F71E  0009               	tblrd		*+
  4050  00F720  CFF5 F016          	movff	tablat,___ftmul@f1+1
  4051  00F724  000A               	tblrd		*-
  4052  00F726  CFF5 F017          	movff	tablat,___ftmul@f1+2
  4053  00F72A  0E00               	movlw	0
  4054  00F72C  6E12               	movwf	___wmul@multiplicand+1,c
  4055  00F72E  0E03               	movlw	3
  4056  00F730  6E11               	movwf	___wmul@multiplicand,c
  4057  00F732  0E00               	movlw	0
  4058  00F734  6E04               	movwf	___awmod@divisor+1,c
  4059  00F736  0E0A               	movlw	10
  4060  00F738  6E03               	movwf	___awmod@divisor,c
  4061  00F73A  502A               	movf	scale@scl,w,c
  4062  00F73C  6E01               	movwf	___awmod@dividend,c
  4063  00F73E  6A02               	clrf	___awmod@dividend+1,c
  4064  00F740  BE01               	btfsc	___awmod@dividend,7,c
  4065  00F742  0602               	decf	___awmod@dividend+1,f,c
  4066  00F744  EC88  F071         	call	___awmod	;wreg free
  4067  00F748  C001  F00F         	movff	?___awmod,___wmul@multiplier
  4068  00F74C  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  4069  00F750  EC31  F070         	call	___wmul	;wreg free
  4070  00F754  0E22               	movlw	low __powers_
  4071  00F756  240F               	addwf	?___wmul,w,c
  4072  00F758  6EF6               	movwf	tblptrl,c
  4073  00F75A  0EFE               	movlw	high __powers_
  4074  00F75C  2010               	addwfc	?___wmul+1,w,c
  4075  00F75E  6EF7               	movwf	tblptrh,c
  4076  00F760                     	if	0	;There are less than 3 active tblptr bytes
  4077  00F760                     	endif
  4078  00F760  0009               	tblrd		*+
  4079  00F762  CFF5 F018          	movff	tablat,___ftmul@f2
  4080  00F766  0009               	tblrd		*+
  4081  00F768  CFF5 F019          	movff	tablat,___ftmul@f2+1
  4082  00F76C  000A               	tblrd		*-
  4083  00F76E  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  4084  00F772  ECA1  F074         	call	___ftmul	;wreg free
  4085  00F776                     L5:
  4086  00F776  C015  F024         	movff	?___ftmul,?_scale
  4087  00F77A  C016  F025         	movff	?___ftmul+1,?_scale+1
  4088  00F77E  C017  F026         	movff	?___ftmul+2,?_scale+2
  4089  00F782  D013               	goto	l229
  4090  00F784  D000               	goto	l2338
  4091  00F786                     l2338:
  4092                           
  4093                           ;doprnt.c: 440: return _powers_[scl];
  4094  00F786  502A               	movf	scale@scl,w,c
  4095  00F788  0D03               	mullw	3
  4096  00F78A  0E22               	movlw	low __powers_
  4097  00F78C  24F3               	addwf	prodl,w,c
  4098  00F78E  6EF6               	movwf	tblptrl,c
  4099  00F790  0EFE               	movlw	high __powers_
  4100  00F792                     L4:
  4101  00F792  20F4               	addwfc	prodh,w,c
  4102  00F794  6EF7               	movwf	tblptrh,c
  4103  00F796                     	if	0	;There are less than 3 active tblptr bytes
  4104  00F796                     	endif
  4105  00F796  0009               	tblrd		*+
  4106  00F798  CFF5 F024          	movff	tablat,?_scale
  4107  00F79C  0009               	tblrd		*+
  4108  00F79E  CFF5 F025          	movff	tablat,?_scale+1
  4109  00F7A2  000A               	tblrd		*-
  4110  00F7A4  CFF5 F026          	movff	tablat,?_scale+2
  4111  00F7A8  D000               	goto	l229
  4112  00F7AA                     l229:
  4113  00F7AA  0012               	return		;funcret
  4114  00F7AC                     __end_of_scale:
  4115                           	opt stack 0
  4116                           tblptru	equ	0xFF8
  4117                           tblptrh	equ	0xFF7
  4118                           tblptrl	equ	0xFF6
  4119                           tablat	equ	0xFF5
  4120                           prodh	equ	0xFF4
  4121                           prodl	equ	0xFF3
  4122                           postinc0	equ	0xFEE
  4123                           wreg	equ	0xFE8
  4124                           postdec1	equ	0xFE5
  4125                           fsr1l	equ	0xFE1
  4126                           postinc2	equ	0xFDE
  4127                           postdec2	equ	0xFDD
  4128                           fsr2h	equ	0xFDA
  4129                           fsr2l	equ	0xFD9
  4130                           status	equ	0xFD8
  4131                           
  4132 ;; *************** function _putch *****************
  4133 ;; Defined at:
  4134 ;;		line 66 in file "lab7p1.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  c               1    wreg     unsigned char 
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  c               1    0[COMRAM] unsigned char 
  4139 ;; Return value:  Size  Location     Type
  4140 ;;		None               void
  4141 ;; Registers used:
  4142 ;;		wreg
  4143 ;; Tracked objects:
  4144 ;;		On entry : 0/0
  4145 ;;		On exit  : 0/0
  4146 ;;		Unchanged: 0/0
  4147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;Total ram usage:        1 bytes
  4153 ;; Hardware stack levels used:    1
  4154 ;; This function calls:
  4155 ;;		Nothing
  4156 ;; This function is called by:
  4157 ;;		_printf
  4158 ;; This function uses a non-reentrant model
  4159 ;;
  4160                           
  4161                           	psect	text13
  4162  00DF50                     __ptext13:
  4163                           	opt stack 0
  4164  00DF50                     _putch:
  4165                           	opt stack 29
  4166                           
  4167                           ;incstack = 0
  4168                           ;putch@c stored from wreg
  4169  00DF50  6E01               	movwf	putch@c,c
  4170                           
  4171                           ;lab7p1.c: 68: while (!TRMT);
  4172  00DF52  D000               	goto	l90
  4173  00DF54                     l90:
  4174  00DF54  A2AC               	btfss	4012,1,c	;volatile
  4175  00DF56  D7FE               	goto	l90
  4176                           
  4177                           ;lab7p1.c: 69: TXREG = c;
  4178  00DF58  C001  FFAD         	movff	putch@c,4013	;volatile
  4179  00DF5C  0012               	return		;funcret
  4180  00DF5E                     __end_of_putch:
  4181                           	opt stack 0
  4182                           tblptru	equ	0xFF8
  4183                           tblptrh	equ	0xFF7
  4184                           tblptrl	equ	0xFF6
  4185                           tablat	equ	0xFF5
  4186                           prodh	equ	0xFF4
  4187                           prodl	equ	0xFF3
  4188                           postinc0	equ	0xFEE
  4189                           wreg	equ	0xFE8
  4190                           postdec1	equ	0xFE5
  4191                           fsr1l	equ	0xFE1
  4192                           postinc2	equ	0xFDE
  4193                           postdec2	equ	0xFDD
  4194                           fsr2h	equ	0xFDA
  4195                           fsr2l	equ	0xFD9
  4196                           status	equ	0xFD8
  4197                           
  4198 ;; *************** function _fround *****************
  4199 ;; Defined at:
  4200 ;;		line 409 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  4201 ;; Parameters:    Size  Location     Type
  4202 ;;  prec            1    wreg     unsigned char 
  4203 ;; Auto vars:     Size  Location     Type
  4204 ;;  prec            1   44[COMRAM] unsigned char 
  4205 ;; Return value:  Size  Location     Type
  4206 ;;                  3   35[COMRAM] unsigned char 
  4207 ;; Registers used:
  4208 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4209 ;; Tracked objects:
  4210 ;;		On entry : 0/0
  4211 ;;		On exit  : 0/0
  4212 ;;		Unchanged: 0/0
  4213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4214 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4215 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4217 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4218 ;;Total ram usage:       10 bytes
  4219 ;; Hardware stack levels used:    1
  4220 ;; Hardware stack levels required when called:    2
  4221 ;; This function calls:
  4222 ;;		___awdiv
  4223 ;;		___awmod
  4224 ;;		___ftmul
  4225 ;;		___wmul
  4226 ;; This function is called by:
  4227 ;;		_printf
  4228 ;; This function uses a non-reentrant model
  4229 ;;
  4230                           
  4231                           	psect	text14
  4232  00F188                     __ptext14:
  4233                           	opt stack 0
  4234  00F188                     _fround:
  4235                           	opt stack 27
  4236                           
  4237                           ;incstack = 0
  4238                           ;fround@prec stored from wreg
  4239  00F188  6E2D               	movwf	fround@prec,c
  4240                           
  4241                           ;doprnt.c: 413: if(prec>=110)
  4242  00F18A  0E6D               	movlw	109
  4243  00F18C  642D               	cpfsgt	fround@prec,c
  4244  00F18E  D09B               	goto	l2292
  4245                           
  4246                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4247  00F190  0E00               	movlw	0
  4248  00F192  6E12               	movwf	___wmul@multiplicand+1,c
  4249  00F194  0E03               	movlw	3
  4250  00F196  6E11               	movwf	___wmul@multiplicand,c
  4251  00F198  0E00               	movlw	0
  4252  00F19A  6E0A               	movwf	___awdiv@divisor+1,c
  4253  00F19C  0E0A               	movlw	10
  4254  00F19E  6E09               	movwf	___awdiv@divisor,c
  4255  00F1A0  0E00               	movlw	0
  4256  00F1A2  6E04               	movwf	___awmod@divisor+1,c
  4257  00F1A4  0E64               	movlw	100
  4258  00F1A6  6E03               	movwf	___awmod@divisor,c
  4259  00F1A8  C02D  F001         	movff	fround@prec,___awmod@dividend
  4260  00F1AC  6A02               	clrf	___awmod@dividend+1,c
  4261  00F1AE  EC88  F071         	call	___awmod	;wreg free
  4262  00F1B2  C001  F007         	movff	?___awmod,___awdiv@dividend
  4263  00F1B6  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  4264  00F1BA  EC5A  F072         	call	___awdiv	;wreg free
  4265  00F1BE  0E09               	movlw	9
  4266  00F1C0  2407               	addwf	?___awdiv,w,c
  4267  00F1C2  6E0F               	movwf	___wmul@multiplier,c
  4268  00F1C4  0E00               	movlw	0
  4269  00F1C6  2008               	addwfc	?___awdiv+1,w,c
  4270  00F1C8  6E10               	movwf	___wmul@multiplier+1,c
  4271  00F1CA  EC31  F070         	call	___wmul	;wreg free
  4272  00F1CE  0EFB               	movlw	low __npowers_
  4273  00F1D0  240F               	addwf	?___wmul,w,c
  4274  00F1D2  6EF6               	movwf	tblptrl,c
  4275  00F1D4  0EFD               	movlw	high __npowers_
  4276  00F1D6  2010               	addwfc	?___wmul+1,w,c
  4277  00F1D8  6EF7               	movwf	tblptrh,c
  4278  00F1DA                     	if	0	;There are less than 3 active tblptr bytes
  4279  00F1DA                     	endif
  4280  00F1DA  0009               	tblrd		*+
  4281  00F1DC  CFF5 F018          	movff	tablat,___ftmul@f2
  4282  00F1E0  0009               	tblrd		*+
  4283  00F1E2  CFF5 F019          	movff	tablat,___ftmul@f2+1
  4284  00F1E6  000A               	tblrd		*-
  4285  00F1E8  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  4286  00F1EC  0E00               	movlw	0
  4287  00F1EE  6E0A               	movwf	___awdiv@divisor+1,c
  4288  00F1F0  0E64               	movlw	100
  4289  00F1F2  6E09               	movwf	___awdiv@divisor,c
  4290  00F1F4  C02D  F007         	movff	fround@prec,___awdiv@dividend
  4291  00F1F8  6A08               	clrf	___awdiv@dividend+1,c
  4292  00F1FA  EC5A  F072         	call	___awdiv	;wreg free
  4293  00F1FE  0E12               	movlw	18
  4294  00F200  2407               	addwf	?___awdiv,w,c
  4295  00F202  6E0F               	movwf	___wmul@multiplier,c
  4296  00F204  0E00               	movlw	0
  4297  00F206  2008               	addwfc	?___awdiv+1,w,c
  4298  00F208  6E10               	movwf	___wmul@multiplier+1,c
  4299  00F20A  0E00               	movlw	0
  4300  00F20C  6E12               	movwf	___wmul@multiplicand+1,c
  4301  00F20E  0E03               	movlw	3
  4302  00F210  6E11               	movwf	___wmul@multiplicand,c
  4303  00F212  EC31  F070         	call	___wmul	;wreg free
  4304  00F216  0EFB               	movlw	low __npowers_
  4305  00F218  240F               	addwf	?___wmul,w,c
  4306  00F21A  6EF6               	movwf	tblptrl,c
  4307  00F21C  0EFD               	movlw	high __npowers_
  4308  00F21E  2010               	addwfc	?___wmul+1,w,c
  4309  00F220  6EF7               	movwf	tblptrh,c
  4310  00F222                     	if	0	;There are less than 3 active tblptr bytes
  4311  00F222                     	endif
  4312  00F222  0009               	tblrd		*+
  4313  00F224  CFF5 F015          	movff	tablat,___ftmul@f1
  4314  00F228  0009               	tblrd		*+
  4315  00F22A  CFF5 F016          	movff	tablat,___ftmul@f1+1
  4316  00F22E  000A               	tblrd		*-
  4317  00F230  CFF5 F017          	movff	tablat,___ftmul@f1+2
  4318  00F234  ECA1  F074         	call	___ftmul	;wreg free
  4319  00F238  C015  F02A         	movff	?___ftmul,_fround$1713
  4320  00F23C  C016  F02B         	movff	?___ftmul+1,_fround$1713+1
  4321  00F240  C017  F02C         	movff	?___ftmul+2,_fround$1713+2
  4322                           
  4323                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4324  00F244  0E00               	movlw	0
  4325  00F246  6E12               	movwf	___wmul@multiplicand+1,c
  4326  00F248  0E03               	movlw	3
  4327  00F24A  6E11               	movwf	___wmul@multiplicand,c
  4328  00F24C  0E00               	movlw	0
  4329  00F24E  6E04               	movwf	___awmod@divisor+1,c
  4330  00F250  0E0A               	movlw	10
  4331  00F252  6E03               	movwf	___awmod@divisor,c
  4332  00F254  C02D  F001         	movff	fround@prec,___awmod@dividend
  4333  00F258  6A02               	clrf	___awmod@dividend+1,c
  4334  00F25A  EC88  F071         	call	___awmod	;wreg free
  4335  00F25E  C001  F00F         	movff	?___awmod,___wmul@multiplier
  4336  00F262  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  4337  00F266  EC31  F070         	call	___wmul	;wreg free
  4338  00F26A  0EFB               	movlw	low __npowers_
  4339  00F26C  240F               	addwf	?___wmul,w,c
  4340  00F26E  6EF6               	movwf	tblptrl,c
  4341  00F270  0EFD               	movlw	high __npowers_
  4342  00F272  2010               	addwfc	?___wmul+1,w,c
  4343  00F274  6EF7               	movwf	tblptrh,c
  4344  00F276                     	if	0	;There are less than 3 active tblptr bytes
  4345  00F276                     	endif
  4346  00F276  0009               	tblrd		*+
  4347  00F278  CFF5 F018          	movff	tablat,___ftmul@f2
  4348  00F27C  0009               	tblrd		*+
  4349  00F27E  CFF5 F019          	movff	tablat,___ftmul@f2+1
  4350  00F282  000A               	tblrd		*-
  4351  00F284  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  4352  00F288  C02A  F015         	movff	_fround$1713,___ftmul@f1
  4353  00F28C  C02B  F016         	movff	_fround$1713+1,___ftmul@f1+1
  4354  00F290  C02C  F017         	movff	_fround$1713+2,___ftmul@f1+2
  4355  00F294  ECA1  F074         	call	___ftmul	;wreg free
  4356  00F298  C015  F027         	movff	?___ftmul,_fround$1714
  4357  00F29C  C016  F028         	movff	?___ftmul+1,_fround$1714+1
  4358  00F2A0  C017  F029         	movff	?___ftmul+2,_fround$1714+2
  4359                           
  4360                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  4361  00F2A4  C027  F015         	movff	_fround$1714,___ftmul@f1
  4362  00F2A8  C028  F016         	movff	_fround$1714+1,___ftmul@f1+1
  4363  00F2AC  C029  F017         	movff	_fround$1714+2,___ftmul@f1+2
  4364  00F2B0  0E00               	movlw	0
  4365  00F2B2  6E18               	movwf	___ftmul@f2,c
  4366  00F2B4  0E00               	movlw	0
  4367  00F2B6  6E19               	movwf	___ftmul@f2+1,c
  4368  00F2B8  0E3F               	movlw	63
  4369  00F2BA  6E1A               	movwf	___ftmul@f2+2,c
  4370  00F2BC  ECA1  F074         	call	___ftmul	;wreg free
  4371  00F2C0  D07D               	goto	L7
  4372  00F2C2  D083               	goto	l222
  4373  00F2C4  D062               	goto	l2300
  4374  00F2C6                     l2292:
  4375                           
  4376                           ;doprnt.c: 415: else if(prec > 10)
  4377  00F2C6  0E0A               	movlw	10
  4378  00F2C8  642D               	cpfsgt	fround@prec,c
  4379  00F2CA  D05F               	goto	l2300
  4380                           
  4381                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4382  00F2CC  0E00               	movlw	0
  4383  00F2CE  6E12               	movwf	___wmul@multiplicand+1,c
  4384  00F2D0  0E03               	movlw	3
  4385  00F2D2  6E11               	movwf	___wmul@multiplicand,c
  4386  00F2D4  0E00               	movlw	0
  4387  00F2D6  6E04               	movwf	___awmod@divisor+1,c
  4388  00F2D8  0E0A               	movlw	10
  4389  00F2DA  6E03               	movwf	___awmod@divisor,c
  4390  00F2DC  C02D  F001         	movff	fround@prec,___awmod@dividend
  4391  00F2E0  6A02               	clrf	___awmod@dividend+1,c
  4392  00F2E2  EC88  F071         	call	___awmod	;wreg free
  4393  00F2E6  C001  F00F         	movff	?___awmod,___wmul@multiplier
  4394  00F2EA  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  4395  00F2EE  EC31  F070         	call	___wmul	;wreg free
  4396  00F2F2  0EFB               	movlw	low __npowers_
  4397  00F2F4  240F               	addwf	?___wmul,w,c
  4398  00F2F6  6EF6               	movwf	tblptrl,c
  4399  00F2F8  0EFD               	movlw	high __npowers_
  4400  00F2FA  2010               	addwfc	?___wmul+1,w,c
  4401  00F2FC  6EF7               	movwf	tblptrh,c
  4402  00F2FE                     	if	0	;There are less than 3 active tblptr bytes
  4403  00F2FE                     	endif
  4404  00F2FE  0009               	tblrd		*+
  4405  00F300  CFF5 F018          	movff	tablat,___ftmul@f2
  4406  00F304  0009               	tblrd		*+
  4407  00F306  CFF5 F019          	movff	tablat,___ftmul@f2+1
  4408  00F30A  000A               	tblrd		*-
  4409  00F30C  CFF5 F01A          	movff	tablat,___ftmul@f2+2
  4410  00F310  0E00               	movlw	0
  4411  00F312  6E0A               	movwf	___awdiv@divisor+1,c
  4412  00F314  0E0A               	movlw	10
  4413  00F316  6E09               	movwf	___awdiv@divisor,c
  4414  00F318  C02D  F007         	movff	fround@prec,___awdiv@dividend
  4415  00F31C  6A08               	clrf	___awdiv@dividend+1,c
  4416  00F31E  EC5A  F072         	call	___awdiv	;wreg free
  4417  00F322  0E09               	movlw	9
  4418  00F324  2407               	addwf	?___awdiv,w,c
  4419  00F326  6E0F               	movwf	___wmul@multiplier,c
  4420  00F328  0E00               	movlw	0
  4421  00F32A  2008               	addwfc	?___awdiv+1,w,c
  4422  00F32C  6E10               	movwf	___wmul@multiplier+1,c
  4423  00F32E  0E00               	movlw	0
  4424  00F330  6E12               	movwf	___wmul@multiplicand+1,c
  4425  00F332  0E03               	movlw	3
  4426  00F334  6E11               	movwf	___wmul@multiplicand,c
  4427  00F336  EC31  F070         	call	___wmul	;wreg free
  4428  00F33A  0EFB               	movlw	low __npowers_
  4429  00F33C  240F               	addwf	?___wmul,w,c
  4430  00F33E  6EF6               	movwf	tblptrl,c
  4431  00F340  0EFD               	movlw	high __npowers_
  4432  00F342  2010               	addwfc	?___wmul+1,w,c
  4433  00F344  6EF7               	movwf	tblptrh,c
  4434  00F346                     	if	0	;There are less than 3 active tblptr bytes
  4435  00F346                     	endif
  4436  00F346  0009               	tblrd		*+
  4437  00F348  CFF5 F015          	movff	tablat,___ftmul@f1
  4438  00F34C  0009               	tblrd		*+
  4439  00F34E  CFF5 F016          	movff	tablat,___ftmul@f1+1
  4440  00F352  000A               	tblrd		*-
  4441  00F354  CFF5 F017          	movff	tablat,___ftmul@f1+2
  4442  00F358  ECA1  F074         	call	___ftmul	;wreg free
  4443  00F35C  C015  F02A         	movff	?___ftmul,_fround$1713
  4444  00F360  C016  F02B         	movff	?___ftmul+1,_fround$1713+1
  4445  00F364  C017  F02C         	movff	?___ftmul+2,_fround$1713+2
  4446                           
  4447                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  4448  00F368  C02A  F015         	movff	_fround$1713,___ftmul@f1
  4449  00F36C  C02B  F016         	movff	_fround$1713+1,___ftmul@f1+1
  4450  00F370  C02C  F017         	movff	_fround$1713+2,___ftmul@f1+2
  4451  00F374  0E00               	movlw	0
  4452  00F376  6E18               	movwf	___ftmul@f2,c
  4453  00F378  0E00               	movlw	0
  4454  00F37A  6E19               	movwf	___ftmul@f2+1,c
  4455  00F37C  0E3F               	movlw	63
  4456  00F37E  6E1A               	movwf	___ftmul@f2+2,c
  4457  00F380  ECA1  F074         	call	___ftmul	;wreg free
  4458  00F384  D01B               	goto	L7
  4459  00F386  D021               	goto	l222
  4460  00F388  D000               	goto	l2300
  4461  00F38A                     l2300:
  4462                           
  4463                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  4464  00F38A  502D               	movf	fround@prec,w,c
  4465  00F38C  0D03               	mullw	3
  4466  00F38E  0EFB               	movlw	low __npowers_
  4467  00F390  24F3               	addwf	prodl,w,c
  4468  00F392  6EF6               	movwf	tblptrl,c
  4469  00F394  0EFD               	movlw	high __npowers_
  4470  00F396  20F4               	addwfc	prodh,w,c
  4471  00F398  6EF7               	movwf	tblptrh,c
  4472  00F39A                     	if	0	;There are less than 3 active tblptr bytes
  4473  00F39A                     	endif
  4474  00F39A  0009               	tblrd		*+
  4475  00F39C  CFF5 F015          	movff	tablat,___ftmul@f1
  4476  00F3A0  0009               	tblrd		*+
  4477  00F3A2  CFF5 F016          	movff	tablat,___ftmul@f1+1
  4478  00F3A6  000A               	tblrd		*-
  4479  00F3A8  CFF5 F017          	movff	tablat,___ftmul@f1+2
  4480  00F3AC  0E00               	movlw	0
  4481  00F3AE  6E18               	movwf	___ftmul@f2,c
  4482  00F3B0  0E00               	movlw	0
  4483  00F3B2  6E19               	movwf	___ftmul@f2+1,c
  4484  00F3B4  0E3F               	movlw	63
  4485  00F3B6  6E1A               	movwf	___ftmul@f2+2,c
  4486  00F3B8  ECA1  F074         	call	___ftmul	;wreg free
  4487  00F3BC                     L7:
  4488  00F3BC  C015  F024         	movff	?___ftmul,?_fround
  4489  00F3C0  C016  F025         	movff	?___ftmul+1,?_fround+1
  4490  00F3C4  C017  F026         	movff	?___ftmul+2,?_fround+2
  4491  00F3C8  D000               	goto	l222
  4492  00F3CA                     l222:
  4493  00F3CA  0012               	return		;funcret
  4494  00F3CC                     __end_of_fround:
  4495                           	opt stack 0
  4496                           tblptru	equ	0xFF8
  4497                           tblptrh	equ	0xFF7
  4498                           tblptrl	equ	0xFF6
  4499                           tablat	equ	0xFF5
  4500                           prodh	equ	0xFF4
  4501                           prodl	equ	0xFF3
  4502                           postinc0	equ	0xFEE
  4503                           wreg	equ	0xFE8
  4504                           postdec1	equ	0xFE5
  4505                           fsr1l	equ	0xFE1
  4506                           postinc2	equ	0xFDE
  4507                           postdec2	equ	0xFDD
  4508                           fsr2h	equ	0xFDA
  4509                           fsr2l	equ	0xFD9
  4510                           status	equ	0xFD8
  4511                           
  4512 ;; *************** function ___wmul *****************
  4513 ;; Defined at:
  4514 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  multiplier      2   14[COMRAM] unsigned int 
  4517 ;;  multiplicand    2   16[COMRAM] unsigned int 
  4518 ;; Auto vars:     Size  Location     Type
  4519 ;;  product         2   18[COMRAM] unsigned int 
  4520 ;; Return value:  Size  Location     Type
  4521 ;;                  2   14[COMRAM] unsigned int 
  4522 ;; Registers used:
  4523 ;;		wreg, status,2, status,0, prodl, prodh
  4524 ;; Tracked objects:
  4525 ;;		On entry : 0/0
  4526 ;;		On exit  : 0/0
  4527 ;;		Unchanged: 0/0
  4528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4529 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4530 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4532 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4533 ;;Total ram usage:        6 bytes
  4534 ;; Hardware stack levels used:    1
  4535 ;; This function calls:
  4536 ;;		Nothing
  4537 ;; This function is called by:
  4538 ;;		_fround
  4539 ;;		_scale
  4540 ;;		_printf
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text15
  4545  00E062                     __ptext15:
  4546                           	opt stack 0
  4547  00E062                     ___wmul:
  4548                           	opt stack 28
  4549                           
  4550                           ;incstack = 0
  4551  00E062  500F               	movf	___wmul@multiplier,w,c
  4552  00E064  0211               	mulwf	___wmul@multiplicand,c
  4553  00E066  CFF3 F013          	movff	prodl,___wmul@product
  4554  00E06A  CFF4 F014          	movff	prodh,___wmul@product+1
  4555  00E06E  500F               	movf	___wmul@multiplier,w,c
  4556  00E070  0212               	mulwf	___wmul@multiplicand+1,c
  4557  00E072  50F3               	movf	prodl,w,c
  4558  00E074  2614               	addwf	___wmul@product+1,f,c
  4559  00E076  5010               	movf	___wmul@multiplier+1,w,c
  4560  00E078  0211               	mulwf	___wmul@multiplicand,c
  4561  00E07A  50F3               	movf	prodl,w,c
  4562  00E07C  2614               	addwf	___wmul@product+1,f,c
  4563  00E07E  C013  F00F         	movff	___wmul@product,?___wmul
  4564  00E082  C014  F010         	movff	___wmul@product+1,?___wmul+1
  4565  00E086  D000               	goto	l321
  4566  00E088                     l321:
  4567  00E088  0012               	return		;funcret
  4568  00E08A                     __end_of___wmul:
  4569                           	opt stack 0
  4570                           tblptru	equ	0xFF8
  4571                           tblptrh	equ	0xFF7
  4572                           tblptrl	equ	0xFF6
  4573                           tablat	equ	0xFF5
  4574                           prodh	equ	0xFF4
  4575                           prodl	equ	0xFF3
  4576                           postinc0	equ	0xFEE
  4577                           wreg	equ	0xFE8
  4578                           postdec1	equ	0xFE5
  4579                           fsr1l	equ	0xFE1
  4580                           postinc2	equ	0xFDE
  4581                           postdec2	equ	0xFDD
  4582                           fsr2h	equ	0xFDA
  4583                           fsr2l	equ	0xFD9
  4584                           status	equ	0xFD8
  4585                           
  4586 ;; *************** function ___ftmul *****************
  4587 ;; Defined at:
  4588 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  4589 ;; Parameters:    Size  Location     Type
  4590 ;;  f1              3   20[COMRAM] float 
  4591 ;;  f2              3   23[COMRAM] float 
  4592 ;; Auto vars:     Size  Location     Type
  4593 ;;  f3_as_produc    3   30[COMRAM] unsigned um
  4594 ;;  sign            1   34[COMRAM] unsigned char 
  4595 ;;  cntr            1   33[COMRAM] unsigned char 
  4596 ;;  exp             1   29[COMRAM] unsigned char 
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  3   20[COMRAM] float 
  4599 ;; Registers used:
  4600 ;;		wreg, status,2, status,0, cstack
  4601 ;; Tracked objects:
  4602 ;;		On entry : 0/0
  4603 ;;		On exit  : 0/0
  4604 ;;		Unchanged: 0/0
  4605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4606 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4607 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4608 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4609 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4610 ;;Total ram usage:       15 bytes
  4611 ;; Hardware stack levels used:    1
  4612 ;; Hardware stack levels required when called:    1
  4613 ;; This function calls:
  4614 ;;		___ftpack
  4615 ;; This function is called by:
  4616 ;;		_main
  4617 ;;		_fround
  4618 ;;		_scale
  4619 ;;		_printf
  4620 ;; This function uses a non-reentrant model
  4621 ;;
  4622                           
  4623                           	psect	text16
  4624  00E942                     __ptext16:
  4625                           	opt stack 0
  4626  00E942                     ___ftmul:
  4627                           	opt stack 27
  4628                           
  4629                           ;incstack = 0
  4630  00E942  C017  F01B         	movff	___ftmul@f1+2,??___ftmul
  4631  00E946  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  4632  00E948  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  4633  00E94A  3416               	rlcf	___ftmul@f1+1,w,c
  4634  00E94C  361B               	rlcf	??___ftmul& (0+255),f,c
  4635  00E94E  E301               	bnc	u1881
  4636  00E950  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  4637  00E952                     u1881:
  4638  00E952  501B               	movf	??___ftmul,w,c
  4639  00E954  6E1E               	movwf	___ftmul@exp,c
  4640  00E956  501E               	movf	___ftmul@exp,w,c
  4641  00E958  A4D8               	btfss	status,2,c
  4642  00E95A  D002               	goto	l2156
  4643  00E95C  D00E               	goto	l2158
  4644  00E95E  D06C               	goto	l750
  4645  00E960                     l2156:
  4646  00E960  C01A  F01B         	movff	___ftmul@f2+2,??___ftmul
  4647  00E964  6A1C               	clrf	(??___ftmul+1)& (0+255),c
  4648  00E966  6A1D               	clrf	(??___ftmul+2)& (0+255),c
  4649  00E968  3419               	rlcf	___ftmul@f2+1,w,c
  4650  00E96A  361B               	rlcf	??___ftmul& (0+255),f,c
  4651  00E96C  E301               	bnc	u1901
  4652  00E96E  801C               	bsf	(??___ftmul+1)& (0+255),0,c
  4653  00E970                     u1901:
  4654  00E970  501B               	movf	??___ftmul,w,c
  4655  00E972  6E23               	movwf	___ftmul@sign,c
  4656  00E974  5023               	movf	___ftmul@sign,w,c
  4657  00E976  A4D8               	btfss	status,2,c
  4658  00E978  D007               	goto	l2162
  4659  00E97A                     l2158:
  4660  00E97A  0E00               	movlw	0
  4661  00E97C  6E15               	movwf	?___ftmul,c
  4662  00E97E  0E00               	movlw	0
  4663  00E980  6E16               	movwf	?___ftmul+1,c
  4664  00E982  0E00               	movlw	0
  4665  00E984  6E17               	movwf	?___ftmul+2,c
  4666  00E986  D058               	goto	l750
  4667  00E988                     l2162:
  4668  00E988  5023               	movf	___ftmul@sign,w,c
  4669  00E98A  0F7B               	addlw	123
  4670  00E98C  261E               	addwf	___ftmul@exp,f,c
  4671  00E98E  C017  F023         	movff	___ftmul@f1+2,___ftmul@sign
  4672  00E992  501A               	movf	___ftmul@f2+2,w,c
  4673  00E994  1A23               	xorwf	___ftmul@sign,f,c
  4674  00E996  0E80               	movlw	128
  4675  00E998  1623               	andwf	___ftmul@sign,f,c
  4676  00E99A  8E16               	bsf	___ftmul@f1+1,7,c
  4677  00E99C  8E19               	bsf	___ftmul@f2+1,7,c
  4678  00E99E  0EFF               	movlw	255
  4679  00E9A0  1618               	andwf	___ftmul@f2,f,c
  4680  00E9A2  0EFF               	movlw	255
  4681  00E9A4  1619               	andwf	___ftmul@f2+1,f,c
  4682  00E9A6  0E00               	movlw	0
  4683  00E9A8  161A               	andwf	___ftmul@f2+2,f,c
  4684  00E9AA  0E00               	movlw	0
  4685  00E9AC  6E1F               	movwf	___ftmul@f3_as_product,c
  4686  00E9AE  0E00               	movlw	0
  4687  00E9B0  6E20               	movwf	___ftmul@f3_as_product+1,c
  4688  00E9B2  0E00               	movlw	0
  4689  00E9B4  6E21               	movwf	___ftmul@f3_as_product+2,c
  4690  00E9B6  0E07               	movlw	7
  4691  00E9B8  6E22               	movwf	___ftmul@cntr,c
  4692  00E9BA  D000               	goto	l2176
  4693  00E9BC                     l2176:
  4694  00E9BC  A015               	btfss	___ftmul@f1,0,c
  4695  00E9BE  D007               	goto	l2180
  4696  00E9C0  5018               	movf	___ftmul@f2,w,c
  4697  00E9C2  261F               	addwf	___ftmul@f3_as_product,f,c
  4698  00E9C4  5019               	movf	___ftmul@f2+1,w,c
  4699  00E9C6  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  4700  00E9C8  501A               	movf	___ftmul@f2+2,w,c
  4701  00E9CA  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  4702  00E9CC  D000               	goto	l2180
  4703  00E9CE                     l2180:
  4704  00E9CE  90D8               	bcf	status,0,c
  4705  00E9D0  3217               	rrcf	___ftmul@f1+2,f,c
  4706  00E9D2  3216               	rrcf	___ftmul@f1+1,f,c
  4707  00E9D4  3215               	rrcf	___ftmul@f1,f,c
  4708  00E9D6  90D8               	bcf	status,0,c
  4709  00E9D8  3618               	rlcf	___ftmul@f2,f,c
  4710  00E9DA  3619               	rlcf	___ftmul@f2+1,f,c
  4711  00E9DC  361A               	rlcf	___ftmul@f2+2,f,c
  4712  00E9DE  2E22               	decfsz	___ftmul@cntr,f,c
  4713  00E9E0  D7ED               	goto	l2176
  4714  00E9E2  D000               	goto	l2184
  4715  00E9E4                     l2184:
  4716  00E9E4  0E09               	movlw	9
  4717  00E9E6  6E22               	movwf	___ftmul@cntr,c
  4718  00E9E8  D000               	goto	l2186
  4719  00E9EA                     l2186:
  4720  00E9EA  A015               	btfss	___ftmul@f1,0,c
  4721  00E9EC  D007               	goto	l2190
  4722  00E9EE  5018               	movf	___ftmul@f2,w,c
  4723  00E9F0  261F               	addwf	___ftmul@f3_as_product,f,c
  4724  00E9F2  5019               	movf	___ftmul@f2+1,w,c
  4725  00E9F4  2220               	addwfc	___ftmul@f3_as_product+1,f,c
  4726  00E9F6  501A               	movf	___ftmul@f2+2,w,c
  4727  00E9F8  2221               	addwfc	___ftmul@f3_as_product+2,f,c
  4728  00E9FA  D000               	goto	l2190
  4729  00E9FC                     l2190:
  4730  00E9FC  90D8               	bcf	status,0,c
  4731  00E9FE  3217               	rrcf	___ftmul@f1+2,f,c
  4732  00EA00  3216               	rrcf	___ftmul@f1+1,f,c
  4733  00EA02  3215               	rrcf	___ftmul@f1,f,c
  4734  00EA04  90D8               	bcf	status,0,c
  4735  00EA06  3221               	rrcf	___ftmul@f3_as_product+2,f,c
  4736  00EA08  3220               	rrcf	___ftmul@f3_as_product+1,f,c
  4737  00EA0A  321F               	rrcf	___ftmul@f3_as_product,f,c
  4738  00EA0C  2E22               	decfsz	___ftmul@cntr,f,c
  4739  00EA0E  D7ED               	goto	l2186
  4740  00EA10  D000               	goto	l2194
  4741  00EA12                     l2194:
  4742  00EA12  C01F  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  4743  00EA16  C020  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  4744  00EA1A  C021  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  4745  00EA1E  C01E  F004         	movff	___ftmul@exp,___ftpack@exp
  4746  00EA22  C023  F005         	movff	___ftmul@sign,___ftpack@sign
  4747  00EA26  ECF1  F072         	call	___ftpack	;wreg free
  4748  00EA2A  C001  F015         	movff	?___ftpack,?___ftmul
  4749  00EA2E  C002  F016         	movff	?___ftpack+1,?___ftmul+1
  4750  00EA32  C003  F017         	movff	?___ftpack+2,?___ftmul+2
  4751  00EA36  D000               	goto	l750
  4752  00EA38                     l750:
  4753  00EA38  0012               	return		;funcret
  4754  00EA3A                     __end_of___ftmul:
  4755                           	opt stack 0
  4756                           tblptru	equ	0xFF8
  4757                           tblptrh	equ	0xFF7
  4758                           tblptrl	equ	0xFF6
  4759                           tablat	equ	0xFF5
  4760                           prodh	equ	0xFF4
  4761                           prodl	equ	0xFF3
  4762                           postinc0	equ	0xFEE
  4763                           wreg	equ	0xFE8
  4764                           postdec1	equ	0xFE5
  4765                           fsr1l	equ	0xFE1
  4766                           postinc2	equ	0xFDE
  4767                           postdec2	equ	0xFDD
  4768                           fsr2h	equ	0xFDA
  4769                           fsr2l	equ	0xFD9
  4770                           status	equ	0xFD8
  4771                           
  4772 ;; *************** function ___awmod *****************
  4773 ;; Defined at:
  4774 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  dividend        2    0[COMRAM] int 
  4777 ;;  divisor         2    2[COMRAM] int 
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;  sign            1    5[COMRAM] unsigned char 
  4780 ;;  counter         1    4[COMRAM] unsigned char 
  4781 ;; Return value:  Size  Location     Type
  4782 ;;                  2    0[COMRAM] int 
  4783 ;; Registers used:
  4784 ;;		wreg, status,2, status,0
  4785 ;; Tracked objects:
  4786 ;;		On entry : 0/0
  4787 ;;		On exit  : 0/0
  4788 ;;		Unchanged: 0/0
  4789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4790 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4793 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;Total ram usage:        6 bytes
  4795 ;; Hardware stack levels used:    1
  4796 ;; This function calls:
  4797 ;;		Nothing
  4798 ;; This function is called by:
  4799 ;;		_fround
  4800 ;;		_scale
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text17
  4805  00E310                     __ptext17:
  4806                           	opt stack 0
  4807  00E310                     ___awmod:
  4808                           	opt stack 28
  4809                           
  4810                           ;incstack = 0
  4811  00E310  0E00               	movlw	0
  4812  00E312  6E06               	movwf	___awmod@sign,c
  4813  00E314  AE02               	btfss	___awmod@dividend+1,7,c
  4814  00E316  D007               	goto	l2250
  4815  00E318  6C01               	negf	___awmod@dividend,c
  4816  00E31A  1E02               	comf	___awmod@dividend+1,f,c
  4817  00E31C  B0D8               	btfsc	status,0,c
  4818  00E31E  2A02               	incf	___awmod@dividend+1,f,c
  4819  00E320  0E01               	movlw	1
  4820  00E322  6E06               	movwf	___awmod@sign,c
  4821  00E324  D000               	goto	l2250
  4822  00E326                     l2250:
  4823  00E326  AE04               	btfss	___awmod@divisor+1,7,c
  4824  00E328  D005               	goto	l2254
  4825  00E32A  6C03               	negf	___awmod@divisor,c
  4826  00E32C  1E04               	comf	___awmod@divisor+1,f,c
  4827  00E32E  B0D8               	btfsc	status,0,c
  4828  00E330  2A04               	incf	___awmod@divisor+1,f,c
  4829  00E332  D000               	goto	l2254
  4830  00E334                     l2254:
  4831  00E334  5003               	movf	___awmod@divisor,w,c
  4832  00E336  1004               	iorwf	___awmod@divisor+1,w,c
  4833  00E338  B4D8               	btfsc	status,2,c
  4834  00E33A  D01D               	goto	l2270
  4835  00E33C  0E01               	movlw	1
  4836  00E33E  6E05               	movwf	___awmod@counter,c
  4837  00E340  D005               	goto	l2260
  4838  00E342                     l2258:
  4839  00E342  90D8               	bcf	status,0,c
  4840  00E344  3603               	rlcf	___awmod@divisor,f,c
  4841  00E346  3604               	rlcf	___awmod@divisor+1,f,c
  4842  00E348  2A05               	incf	___awmod@counter,f,c
  4843  00E34A  D000               	goto	l2260
  4844  00E34C                     l2260:
  4845  00E34C  BE04               	btfsc	___awmod@divisor+1,7,c
  4846  00E34E  D002               	goto	l2262
  4847  00E350  D7F8               	goto	l2258
  4848  00E352  D000               	goto	l2262
  4849  00E354                     l2262:
  4850  00E354  5003               	movf	___awmod@divisor,w,c
  4851  00E356  5C01               	subwf	___awmod@dividend,w,c
  4852  00E358  5004               	movf	___awmod@divisor+1,w,c
  4853  00E35A  5802               	subwfb	___awmod@dividend+1,w,c
  4854  00E35C  A0D8               	btfss	status,0,c
  4855  00E35E  D005               	goto	l2266
  4856  00E360  5003               	movf	___awmod@divisor,w,c
  4857  00E362  5E01               	subwf	___awmod@dividend,f,c
  4858  00E364  5004               	movf	___awmod@divisor+1,w,c
  4859  00E366  5A02               	subwfb	___awmod@dividend+1,f,c
  4860  00E368  D000               	goto	l2266
  4861  00E36A                     l2266:
  4862  00E36A  90D8               	bcf	status,0,c
  4863  00E36C  3204               	rrcf	___awmod@divisor+1,f,c
  4864  00E36E  3203               	rrcf	___awmod@divisor,f,c
  4865  00E370  2E05               	decfsz	___awmod@counter,f,c
  4866  00E372  D7F0               	goto	l2262
  4867  00E374  D000               	goto	l2270
  4868  00E376                     l2270:
  4869  00E376  5006               	movf	___awmod@sign,w,c
  4870  00E378  B4D8               	btfsc	status,2,c
  4871  00E37A  D005               	goto	l2274
  4872  00E37C  6C01               	negf	___awmod@dividend,c
  4873  00E37E  1E02               	comf	___awmod@dividend+1,f,c
  4874  00E380  B0D8               	btfsc	status,0,c
  4875  00E382  2A02               	incf	___awmod@dividend+1,f,c
  4876  00E384  D000               	goto	l2274
  4877  00E386                     l2274:
  4878  00E386  C001  F001         	movff	___awmod@dividend,?___awmod
  4879  00E38A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4880  00E38E  D000               	goto	l527
  4881  00E390                     l527:
  4882  00E390  0012               	return		;funcret
  4883  00E392                     __end_of___awmod:
  4884                           	opt stack 0
  4885                           tblptru	equ	0xFF8
  4886                           tblptrh	equ	0xFF7
  4887                           tblptrl	equ	0xFF6
  4888                           tablat	equ	0xFF5
  4889                           prodh	equ	0xFF4
  4890                           prodl	equ	0xFF3
  4891                           postinc0	equ	0xFEE
  4892                           wreg	equ	0xFE8
  4893                           postdec1	equ	0xFE5
  4894                           fsr1l	equ	0xFE1
  4895                           postinc2	equ	0xFDE
  4896                           postdec2	equ	0xFDD
  4897                           fsr2h	equ	0xFDA
  4898                           fsr2l	equ	0xFD9
  4899                           status	equ	0xFD8
  4900                           
  4901 ;; *************** function ___awdiv *****************
  4902 ;; Defined at:
  4903 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;  dividend        2    6[COMRAM] int 
  4906 ;;  divisor         2    8[COMRAM] int 
  4907 ;; Auto vars:     Size  Location     Type
  4908 ;;  quotient        2   12[COMRAM] int 
  4909 ;;  sign            1   11[COMRAM] unsigned char 
  4910 ;;  counter         1   10[COMRAM] unsigned char 
  4911 ;; Return value:  Size  Location     Type
  4912 ;;                  2    6[COMRAM] int 
  4913 ;; Registers used:
  4914 ;;		wreg, status,2, status,0
  4915 ;; Tracked objects:
  4916 ;;		On entry : 0/0
  4917 ;;		On exit  : 0/0
  4918 ;;		Unchanged: 0/0
  4919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4920 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4921 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4923 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4924 ;;Total ram usage:        8 bytes
  4925 ;; Hardware stack levels used:    1
  4926 ;; This function calls:
  4927 ;;		Nothing
  4928 ;; This function is called by:
  4929 ;;		_fround
  4930 ;;		_scale
  4931 ;;		_printf
  4932 ;; This function uses a non-reentrant model
  4933 ;;
  4934                           
  4935                           	psect	text18
  4936  00E4B4                     __ptext18:
  4937                           	opt stack 0
  4938  00E4B4                     ___awdiv:
  4939                           	opt stack 28
  4940                           
  4941                           ;incstack = 0
  4942  00E4B4  0E00               	movlw	0
  4943  00E4B6  6E0C               	movwf	___awdiv@sign,c
  4944  00E4B8  AE0A               	btfss	___awdiv@divisor+1,7,c
  4945  00E4BA  D007               	goto	l2206
  4946  00E4BC  6C09               	negf	___awdiv@divisor,c
  4947  00E4BE  1E0A               	comf	___awdiv@divisor+1,f,c
  4948  00E4C0  B0D8               	btfsc	status,0,c
  4949  00E4C2  2A0A               	incf	___awdiv@divisor+1,f,c
  4950  00E4C4  0E01               	movlw	1
  4951  00E4C6  6E0C               	movwf	___awdiv@sign,c
  4952  00E4C8  D000               	goto	l2206
  4953  00E4CA                     l2206:
  4954  00E4CA  AE08               	btfss	___awdiv@dividend+1,7,c
  4955  00E4CC  D007               	goto	l2212
  4956  00E4CE  6C07               	negf	___awdiv@dividend,c
  4957  00E4D0  1E08               	comf	___awdiv@dividend+1,f,c
  4958  00E4D2  B0D8               	btfsc	status,0,c
  4959  00E4D4  2A08               	incf	___awdiv@dividend+1,f,c
  4960  00E4D6  0E01               	movlw	1
  4961  00E4D8  1A0C               	xorwf	___awdiv@sign,f,c
  4962  00E4DA  D000               	goto	l2212
  4963  00E4DC                     l2212:
  4964  00E4DC  0E00               	movlw	0
  4965  00E4DE  6E0E               	movwf	___awdiv@quotient+1,c
  4966  00E4E0  0E00               	movlw	0
  4967  00E4E2  6E0D               	movwf	___awdiv@quotient,c
  4968  00E4E4  5009               	movf	___awdiv@divisor,w,c
  4969  00E4E6  100A               	iorwf	___awdiv@divisor+1,w,c
  4970  00E4E8  B4D8               	btfsc	status,2,c
  4971  00E4EA  D021               	goto	l2234
  4972  00E4EC  0E01               	movlw	1
  4973  00E4EE  6E0B               	movwf	___awdiv@counter,c
  4974  00E4F0  D005               	goto	l2220
  4975  00E4F2                     l2218:
  4976  00E4F2  90D8               	bcf	status,0,c
  4977  00E4F4  3609               	rlcf	___awdiv@divisor,f,c
  4978  00E4F6  360A               	rlcf	___awdiv@divisor+1,f,c
  4979  00E4F8  2A0B               	incf	___awdiv@counter,f,c
  4980  00E4FA  D000               	goto	l2220
  4981  00E4FC                     l2220:
  4982  00E4FC  BE0A               	btfsc	___awdiv@divisor+1,7,c
  4983  00E4FE  D002               	goto	l2222
  4984  00E500  D7F8               	goto	l2218
  4985  00E502  D000               	goto	l2222
  4986  00E504                     l2222:
  4987  00E504  90D8               	bcf	status,0,c
  4988  00E506  360D               	rlcf	___awdiv@quotient,f,c
  4989  00E508  360E               	rlcf	___awdiv@quotient+1,f,c
  4990  00E50A  5009               	movf	___awdiv@divisor,w,c
  4991  00E50C  5C07               	subwf	___awdiv@dividend,w,c
  4992  00E50E  500A               	movf	___awdiv@divisor+1,w,c
  4993  00E510  5808               	subwfb	___awdiv@dividend+1,w,c
  4994  00E512  A0D8               	btfss	status,0,c
  4995  00E514  D006               	goto	l2230
  4996  00E516  5009               	movf	___awdiv@divisor,w,c
  4997  00E518  5E07               	subwf	___awdiv@dividend,f,c
  4998  00E51A  500A               	movf	___awdiv@divisor+1,w,c
  4999  00E51C  5A08               	subwfb	___awdiv@dividend+1,f,c
  5000  00E51E  800D               	bsf	___awdiv@quotient,0,c
  5001  00E520  D000               	goto	l2230
  5002  00E522                     l2230:
  5003  00E522  90D8               	bcf	status,0,c
  5004  00E524  320A               	rrcf	___awdiv@divisor+1,f,c
  5005  00E526  3209               	rrcf	___awdiv@divisor,f,c
  5006  00E528  2E0B               	decfsz	___awdiv@counter,f,c
  5007  00E52A  D7EC               	goto	l2222
  5008  00E52C  D000               	goto	l2234
  5009  00E52E                     l2234:
  5010  00E52E  500C               	movf	___awdiv@sign,w,c
  5011  00E530  B4D8               	btfsc	status,2,c
  5012  00E532  D005               	goto	l2238
  5013  00E534  6C0D               	negf	___awdiv@quotient,c
  5014  00E536  1E0E               	comf	___awdiv@quotient+1,f,c
  5015  00E538  B0D8               	btfsc	status,0,c
  5016  00E53A  2A0E               	incf	___awdiv@quotient+1,f,c
  5017  00E53C  D000               	goto	l2238
  5018  00E53E                     l2238:
  5019  00E53E  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  5020  00E542  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  5021  00E546  D000               	goto	l514
  5022  00E548                     l514:
  5023  00E548  0012               	return		;funcret
  5024  00E54A                     __end_of___awdiv:
  5025                           	opt stack 0
  5026                           tblptru	equ	0xFF8
  5027                           tblptrh	equ	0xFF7
  5028                           tblptrl	equ	0xFF6
  5029                           tablat	equ	0xFF5
  5030                           prodh	equ	0xFF4
  5031                           prodl	equ	0xFF3
  5032                           postinc0	equ	0xFEE
  5033                           wreg	equ	0xFE8
  5034                           postdec1	equ	0xFE5
  5035                           fsr1l	equ	0xFE1
  5036                           postinc2	equ	0xFDE
  5037                           postdec2	equ	0xFDD
  5038                           fsr2h	equ	0xFDA
  5039                           fsr2l	equ	0xFD9
  5040                           status	equ	0xFD8
  5041                           
  5042 ;; *************** function __tdiv_to_l_ *****************
  5043 ;; Defined at:
  5044 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  5045 ;; Parameters:    Size  Location     Type
  5046 ;;  f1              3    0[COMRAM] float 
  5047 ;;  f2              3    3[COMRAM] float 
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  quot            4    9[COMRAM] unsigned long 
  5050 ;;  exp1            1   14[COMRAM] unsigned char 
  5051 ;;  cntr            1   13[COMRAM] unsigned char 
  5052 ;; Return value:  Size  Location     Type
  5053 ;;                  4    0[COMRAM] unsigned long 
  5054 ;; Registers used:
  5055 ;;		wreg, status,2, status,0
  5056 ;; Tracked objects:
  5057 ;;		On entry : 0/0
  5058 ;;		On exit  : 0/0
  5059 ;;		Unchanged: 0/0
  5060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5061 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5062 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5063 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5064 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5065 ;;Total ram usage:       15 bytes
  5066 ;; Hardware stack levels used:    1
  5067 ;; This function calls:
  5068 ;;		Nothing
  5069 ;; This function is called by:
  5070 ;;		_printf
  5071 ;; This function uses a non-reentrant model
  5072 ;;
  5073                           
  5074                           	psect	text19
  5075  00EB44                     __ptext19:
  5076                           	opt stack 0
  5077  00EB44                     __tdiv_to_l_:
  5078                           	opt stack 29
  5079                           
  5080                           ;incstack = 0
  5081  00EB44  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  5082  00EB48  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5083  00EB4A  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5084  00EB4C  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  5085  00EB4E  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5086  00EB50  E301               	bnc	u2141
  5087  00EB52  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5088  00EB54                     u2141:
  5089  00EB54  5007               	movf	??__tdiv_to_l_,w,c
  5090  00EB56  6E0F               	movwf	__tdiv_to_l_@exp1,c
  5091  00EB58  500F               	movf	__tdiv_to_l_@exp1,w,c
  5092  00EB5A  A4D8               	btfss	status,2,c
  5093  00EB5C  D002               	goto	l2348
  5094  00EB5E  D05D               	goto	l2390
  5095  00EB60  D078               	goto	l726
  5096  00EB62                     l2348:
  5097  00EB62  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  5098  00EB66  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  5099  00EB68  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  5100  00EB6A  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  5101  00EB6C  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  5102  00EB6E  E301               	bnc	u2161
  5103  00EB70  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  5104  00EB72                     u2161:
  5105  00EB72  5007               	movf	??__tdiv_to_l_,w,c
  5106  00EB74  6E0E               	movwf	__tdiv_to_l_@cntr,c
  5107  00EB76  500E               	movf	__tdiv_to_l_@cntr,w,c
  5108  00EB78  A4D8               	btfss	status,2,c
  5109  00EB7A  D002               	goto	l2354
  5110  00EB7C  D04E               	goto	l2390
  5111  00EB7E  D069               	goto	l726
  5112  00EB80                     l2354:
  5113  00EB80  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  5114  00EB82  0EFF               	movlw	255
  5115  00EB84  1601               	andwf	__tdiv_to_l_@f1,f,c
  5116  00EB86  0EFF               	movlw	255
  5117  00EB88  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  5118  00EB8A  0E00               	movlw	0
  5119  00EB8C  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  5120  00EB8E  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  5121  00EB90  0EFF               	movlw	255
  5122  00EB92  1604               	andwf	__tdiv_to_l_@f2,f,c
  5123  00EB94  0EFF               	movlw	255
  5124  00EB96  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  5125  00EB98  0E00               	movlw	0
  5126  00EB9A  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  5127  00EB9C  0E00               	movlw	0
  5128  00EB9E  6E0A               	movwf	__tdiv_to_l_@quot,c
  5129  00EBA0  0E00               	movlw	0
  5130  00EBA2  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  5131  00EBA4  0E00               	movlw	0
  5132  00EBA6  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  5133  00EBA8  0E00               	movlw	0
  5134  00EBAA  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  5135  00EBAC  0E7F               	movlw	127
  5136  00EBAE  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  5137  00EBB0  500E               	movf	__tdiv_to_l_@cntr,w,c
  5138  00EBB2  0F98               	addlw	152
  5139  00EBB4  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  5140  00EBB6  0E18               	movlw	24
  5141  00EBB8  6E0E               	movwf	__tdiv_to_l_@cntr,c
  5142  00EBBA                     l728:
  5143  00EBBA  90D8               	bcf	status,0,c
  5144  00EBBC  360A               	rlcf	__tdiv_to_l_@quot,f,c
  5145  00EBBE  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  5146  00EBC0  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  5147  00EBC2  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  5148  00EBC4  5004               	movf	__tdiv_to_l_@f2,w,c
  5149  00EBC6  5C01               	subwf	__tdiv_to_l_@f1,w,c
  5150  00EBC8  5005               	movf	__tdiv_to_l_@f2+1,w,c
  5151  00EBCA  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  5152  00EBCC  5006               	movf	__tdiv_to_l_@f2+2,w,c
  5153  00EBCE  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  5154  00EBD0  A0D8               	btfss	status,0,c
  5155  00EBD2  D007               	goto	l729
  5156  00EBD4  5004               	movf	__tdiv_to_l_@f2,w,c
  5157  00EBD6  5E01               	subwf	__tdiv_to_l_@f1,f,c
  5158  00EBD8  5005               	movf	__tdiv_to_l_@f2+1,w,c
  5159  00EBDA  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  5160  00EBDC  5006               	movf	__tdiv_to_l_@f2+2,w,c
  5161  00EBDE  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  5162  00EBE0  800A               	bsf	__tdiv_to_l_@quot,0,c
  5163  00EBE2                     l729:
  5164  00EBE2  90D8               	bcf	status,0,c
  5165  00EBE4  3601               	rlcf	__tdiv_to_l_@f1,f,c
  5166  00EBE6  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  5167  00EBE8  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  5168  00EBEA  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  5169  00EBEC  D7E6               	goto	l728
  5170  00EBEE  D000               	goto	l2376
  5171  00EBF0                     l2376:
  5172  00EBF0  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  5173  00EBF2  D010               	goto	l2388
  5174  00EBF4  500F               	movf	__tdiv_to_l_@exp1,w,c
  5175  00EBF6  0A80               	xorlw	128
  5176  00EBF8  0F97               	addlw	151
  5177  00EBFA  B0D8               	btfsc	status,0,c
  5178  00EBFC  D003               	goto	l2384
  5179  00EBFE  D00D               	goto	l2390
  5180  00EC00  D028               	goto	l726
  5181  00EC02  D000               	goto	l2384
  5182  00EC04                     l2384:
  5183  00EC04  90D8               	bcf	status,0,c
  5184  00EC06  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  5185  00EC08  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  5186  00EC0A  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  5187  00EC0C  320A               	rrcf	__tdiv_to_l_@quot,f,c
  5188  00EC0E  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  5189  00EC10  D7F9               	goto	l2384
  5190  00EC12  D017               	goto	l735
  5191  00EC14                     l2388:
  5192  00EC14  0E17               	movlw	23
  5193  00EC16  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  5194  00EC18  D011               	goto	l2396
  5195  00EC1A                     l2390:
  5196  00EC1A  0E00               	movlw	0
  5197  00EC1C  6E01               	movwf	?__tdiv_to_l_,c
  5198  00EC1E  0E00               	movlw	0
  5199  00EC20  6E02               	movwf	?__tdiv_to_l_+1,c
  5200  00EC22  0E00               	movlw	0
  5201  00EC24  6E03               	movwf	?__tdiv_to_l_+2,c
  5202  00EC26  0E00               	movlw	0
  5203  00EC28  6E04               	movwf	?__tdiv_to_l_+3,c
  5204  00EC2A  D013               	goto	l726
  5205  00EC2C  D007               	goto	l2396
  5206  00EC2E                     l2394:
  5207  00EC2E  90D8               	bcf	status,0,c
  5208  00EC30  360A               	rlcf	__tdiv_to_l_@quot,f,c
  5209  00EC32  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  5210  00EC34  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  5211  00EC36  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  5212  00EC38  060F               	decf	__tdiv_to_l_@exp1,f,c
  5213  00EC3A  D000               	goto	l2396
  5214  00EC3C                     l2396:
  5215  00EC3C  500F               	movf	__tdiv_to_l_@exp1,w,c
  5216  00EC3E  A4D8               	btfss	status,2,c
  5217  00EC40  D7F6               	goto	l2394
  5218  00EC42                     l735:
  5219  00EC42  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  5220  00EC46  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  5221  00EC4A  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  5222  00EC4E  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  5223  00EC52                     l726:
  5224  00EC52  0012               	return		;funcret
  5225  00EC54                     __end_of__tdiv_to_l_:
  5226                           	opt stack 0
  5227                           tblptru	equ	0xFF8
  5228                           tblptrh	equ	0xFF7
  5229                           tblptrl	equ	0xFF6
  5230                           tablat	equ	0xFF5
  5231                           prodh	equ	0xFF4
  5232                           prodl	equ	0xFF3
  5233                           postinc0	equ	0xFEE
  5234                           wreg	equ	0xFE8
  5235                           postdec1	equ	0xFE5
  5236                           fsr1l	equ	0xFE1
  5237                           postinc2	equ	0xFDE
  5238                           postdec2	equ	0xFDD
  5239                           fsr2h	equ	0xFDA
  5240                           fsr2l	equ	0xFD9
  5241                           status	equ	0xFD8
  5242                           
  5243 ;; *************** function __div_to_l_ *****************
  5244 ;; Defined at:
  5245 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;  f1              3    0[COMRAM] unsigned long 
  5248 ;;  f2              3    3[COMRAM] unsigned long 
  5249 ;; Auto vars:     Size  Location     Type
  5250 ;;  quot            4    6[COMRAM] unsigned long 
  5251 ;;  exp1            1   11[COMRAM] unsigned char 
  5252 ;;  cntr            1   10[COMRAM] unsigned char 
  5253 ;; Return value:  Size  Location     Type
  5254 ;;                  4    0[COMRAM] unsigned long 
  5255 ;; Registers used:
  5256 ;;		wreg, status,2, status,0
  5257 ;; Tracked objects:
  5258 ;;		On entry : 0/0
  5259 ;;		On exit  : 0/0
  5260 ;;		Unchanged: 0/0
  5261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5262 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5263 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5265 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5266 ;;Total ram usage:       12 bytes
  5267 ;; Hardware stack levels used:    1
  5268 ;; This function calls:
  5269 ;;		Nothing
  5270 ;; This function is called by:
  5271 ;;		_printf
  5272 ;; This function uses a non-reentrant model
  5273 ;;
  5274                           
  5275                           	psect	text20
  5276  00EA3A                     __ptext20:
  5277                           	opt stack 0
  5278  00EA3A                     __div_to_l_:
  5279                           	opt stack 29
  5280                           
  5281                           ;incstack = 0
  5282  00EA3A  3403               	rlcf	__div_to_l_@f1+2,w,c
  5283  00EA3C  3404               	rlcf	__div_to_l_@f1+3,w,c
  5284  00EA3E  6E0C               	movwf	__div_to_l_@exp1,c
  5285  00EA40  500C               	movf	__div_to_l_@exp1,w,c
  5286  00EA42  A4D8               	btfss	status,2,c
  5287  00EA44  D002               	goto	l2404
  5288  00EA46  D061               	goto	l2450
  5289  00EA48  D07C               	goto	l605
  5290  00EA4A                     l2404:
  5291  00EA4A  3406               	rlcf	__div_to_l_@f2+2,w,c
  5292  00EA4C  3407               	rlcf	__div_to_l_@f2+3,w,c
  5293  00EA4E  6E0B               	movwf	__div_to_l_@cntr,c
  5294  00EA50  500B               	movf	__div_to_l_@cntr,w,c
  5295  00EA52  A4D8               	btfss	status,2,c
  5296  00EA54  D002               	goto	l2410
  5297  00EA56  D059               	goto	l2450
  5298  00EA58  D074               	goto	l605
  5299  00EA5A                     l2410:
  5300  00EA5A  8E03               	bsf	__div_to_l_@f1+2,7,c
  5301  00EA5C  0EFF               	movlw	255
  5302  00EA5E  1601               	andwf	__div_to_l_@f1,f,c
  5303  00EA60  0EFF               	movlw	255
  5304  00EA62  1602               	andwf	__div_to_l_@f1+1,f,c
  5305  00EA64  0EFF               	movlw	255
  5306  00EA66  1603               	andwf	__div_to_l_@f1+2,f,c
  5307  00EA68  0E00               	movlw	0
  5308  00EA6A  1604               	andwf	__div_to_l_@f1+3,f,c
  5309  00EA6C  8E06               	bsf	__div_to_l_@f2+2,7,c
  5310  00EA6E  0EFF               	movlw	255
  5311  00EA70  1604               	andwf	__div_to_l_@f2,f,c
  5312  00EA72  0EFF               	movlw	255
  5313  00EA74  1605               	andwf	__div_to_l_@f2+1,f,c
  5314  00EA76  0EFF               	movlw	255
  5315  00EA78  1606               	andwf	__div_to_l_@f2+2,f,c
  5316  00EA7A  0E00               	movlw	0
  5317  00EA7C  1607               	andwf	__div_to_l_@f2+3,f,c
  5318  00EA7E  0E00               	movlw	0
  5319  00EA80  6E07               	movwf	__div_to_l_@quot,c
  5320  00EA82  0E00               	movlw	0
  5321  00EA84  6E08               	movwf	__div_to_l_@quot+1,c
  5322  00EA86  0E00               	movlw	0
  5323  00EA88  6E09               	movwf	__div_to_l_@quot+2,c
  5324  00EA8A  0E00               	movlw	0
  5325  00EA8C  6E0A               	movwf	__div_to_l_@quot+3,c
  5326  00EA8E  0E7F               	movlw	127
  5327  00EA90  5E0C               	subwf	__div_to_l_@exp1,f,c
  5328  00EA92  500B               	movf	__div_to_l_@cntr,w,c
  5329  00EA94  0FA0               	addlw	160
  5330  00EA96  5E0C               	subwf	__div_to_l_@exp1,f,c
  5331  00EA98  0E20               	movlw	32
  5332  00EA9A  6E0B               	movwf	__div_to_l_@cntr,c
  5333  00EA9C  D000               	goto	l2424
  5334  00EA9E                     l2424:
  5335  00EA9E  90D8               	bcf	status,0,c
  5336  00EAA0  3607               	rlcf	__div_to_l_@quot,f,c
  5337  00EAA2  3608               	rlcf	__div_to_l_@quot+1,f,c
  5338  00EAA4  3609               	rlcf	__div_to_l_@quot+2,f,c
  5339  00EAA6  360A               	rlcf	__div_to_l_@quot+3,f,c
  5340  00EAA8  5004               	movf	__div_to_l_@f2,w,c
  5341  00EAAA  5C01               	subwf	__div_to_l_@f1,w,c
  5342  00EAAC  5005               	movf	__div_to_l_@f2+1,w,c
  5343  00EAAE  5802               	subwfb	__div_to_l_@f1+1,w,c
  5344  00EAB0  5006               	movf	__div_to_l_@f2+2,w,c
  5345  00EAB2  5803               	subwfb	__div_to_l_@f1+2,w,c
  5346  00EAB4  5007               	movf	__div_to_l_@f2+3,w,c
  5347  00EAB6  5804               	subwfb	__div_to_l_@f1+3,w,c
  5348  00EAB8  A0D8               	btfss	status,0,c
  5349  00EABA  D00A               	goto	l2432
  5350  00EABC  5004               	movf	__div_to_l_@f2,w,c
  5351  00EABE  5E01               	subwf	__div_to_l_@f1,f,c
  5352  00EAC0  5005               	movf	__div_to_l_@f2+1,w,c
  5353  00EAC2  5A02               	subwfb	__div_to_l_@f1+1,f,c
  5354  00EAC4  5006               	movf	__div_to_l_@f2+2,w,c
  5355  00EAC6  5A03               	subwfb	__div_to_l_@f1+2,f,c
  5356  00EAC8  5007               	movf	__div_to_l_@f2+3,w,c
  5357  00EACA  5A04               	subwfb	__div_to_l_@f1+3,f,c
  5358  00EACC  8007               	bsf	__div_to_l_@quot,0,c
  5359  00EACE  D000               	goto	l2432
  5360  00EAD0                     l2432:
  5361  00EAD0  90D8               	bcf	status,0,c
  5362  00EAD2  3601               	rlcf	__div_to_l_@f1,f,c
  5363  00EAD4  3602               	rlcf	__div_to_l_@f1+1,f,c
  5364  00EAD6  3603               	rlcf	__div_to_l_@f1+2,f,c
  5365  00EAD8  3604               	rlcf	__div_to_l_@f1+3,f,c
  5366  00EADA  2E0B               	decfsz	__div_to_l_@cntr,f,c
  5367  00EADC  D7E0               	goto	l2424
  5368  00EADE  D000               	goto	l2436
  5369  00EAE0                     l2436:
  5370  00EAE0  AE0C               	btfss	__div_to_l_@exp1,7,c
  5371  00EAE2  D010               	goto	l2448
  5372  00EAE4  500C               	movf	__div_to_l_@exp1,w,c
  5373  00EAE6  0A80               	xorlw	128
  5374  00EAE8  0F9F               	addlw	159
  5375  00EAEA  B0D8               	btfsc	status,0,c
  5376  00EAEC  D003               	goto	l2444
  5377  00EAEE  D00D               	goto	l2450
  5378  00EAF0  D028               	goto	l605
  5379  00EAF2  D000               	goto	l2444
  5380  00EAF4                     l2444:
  5381  00EAF4  90D8               	bcf	status,0,c
  5382  00EAF6  320A               	rrcf	__div_to_l_@quot+3,f,c
  5383  00EAF8  3209               	rrcf	__div_to_l_@quot+2,f,c
  5384  00EAFA  3208               	rrcf	__div_to_l_@quot+1,f,c
  5385  00EAFC  3207               	rrcf	__div_to_l_@quot,f,c
  5386  00EAFE  3E0C               	incfsz	__div_to_l_@exp1,f,c
  5387  00EB00  D7F9               	goto	l2444
  5388  00EB02  D017               	goto	l614
  5389  00EB04                     l2448:
  5390  00EB04  0E1F               	movlw	31
  5391  00EB06  640C               	cpfsgt	__div_to_l_@exp1,c
  5392  00EB08  D011               	goto	l2456
  5393  00EB0A                     l2450:
  5394  00EB0A  0E00               	movlw	0
  5395  00EB0C  6E01               	movwf	?__div_to_l_,c
  5396  00EB0E  0E00               	movlw	0
  5397  00EB10  6E02               	movwf	?__div_to_l_+1,c
  5398  00EB12  0E00               	movlw	0
  5399  00EB14  6E03               	movwf	?__div_to_l_+2,c
  5400  00EB16  0E00               	movlw	0
  5401  00EB18  6E04               	movwf	?__div_to_l_+3,c
  5402  00EB1A  D013               	goto	l605
  5403  00EB1C  D007               	goto	l2456
  5404  00EB1E                     l2454:
  5405  00EB1E  90D8               	bcf	status,0,c
  5406  00EB20  3607               	rlcf	__div_to_l_@quot,f,c
  5407  00EB22  3608               	rlcf	__div_to_l_@quot+1,f,c
  5408  00EB24  3609               	rlcf	__div_to_l_@quot+2,f,c
  5409  00EB26  360A               	rlcf	__div_to_l_@quot+3,f,c
  5410  00EB28  060C               	decf	__div_to_l_@exp1,f,c
  5411  00EB2A  D000               	goto	l2456
  5412  00EB2C                     l2456:
  5413  00EB2C  500C               	movf	__div_to_l_@exp1,w,c
  5414  00EB2E  A4D8               	btfss	status,2,c
  5415  00EB30  D7F6               	goto	l2454
  5416  00EB32                     l614:
  5417  00EB32  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  5418  00EB36  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  5419  00EB3A  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  5420  00EB3E  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  5421  00EB42                     l605:
  5422  00EB42  0012               	return		;funcret
  5423  00EB44                     __end_of__div_to_l_:
  5424                           	opt stack 0
  5425                           tblptru	equ	0xFF8
  5426                           tblptrh	equ	0xFF7
  5427                           tblptrl	equ	0xFF6
  5428                           tablat	equ	0xFF5
  5429                           prodh	equ	0xFF4
  5430                           prodl	equ	0xFF3
  5431                           postinc0	equ	0xFEE
  5432                           wreg	equ	0xFE8
  5433                           postdec1	equ	0xFE5
  5434                           fsr1l	equ	0xFE1
  5435                           postinc2	equ	0xFDE
  5436                           postdec2	equ	0xFDD
  5437                           fsr2h	equ	0xFDA
  5438                           fsr2l	equ	0xFD9
  5439                           status	equ	0xFD8
  5440                           
  5441 ;; *************** function ___lltoft *****************
  5442 ;; Defined at:
  5443 ;;		line 35 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  c               4    8[COMRAM] unsigned long 
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;  exp             1   16[COMRAM] unsigned char 
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  3    8[COMRAM] float 
  5450 ;; Registers used:
  5451 ;;		wreg, status,2, status,0, cstack
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5457 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5458 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5459 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5460 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5461 ;;Total ram usage:        9 bytes
  5462 ;; Hardware stack levels used:    1
  5463 ;; Hardware stack levels required when called:    1
  5464 ;; This function calls:
  5465 ;;		___ftpack
  5466 ;; This function is called by:
  5467 ;;		_printf
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           
  5471                           	psect	text21
  5472  00E1D0                     __ptext21:
  5473                           	opt stack 0
  5474  00E1D0                     ___lltoft:
  5475                           	opt stack 28
  5476                           
  5477                           ;incstack = 0
  5478  00E1D0  0E8E               	movlw	142
  5479  00E1D2  6E11               	movwf	___lltoft@exp,c
  5480  00E1D4  D007               	goto	l2576
  5481  00E1D6                     l2574:
  5482  00E1D6  90D8               	bcf	status,0,c
  5483  00E1D8  320C               	rrcf	___lltoft@c+3,f,c
  5484  00E1DA  320B               	rrcf	___lltoft@c+2,f,c
  5485  00E1DC  320A               	rrcf	___lltoft@c+1,f,c
  5486  00E1DE  3209               	rrcf	___lltoft@c,f,c
  5487  00E1E0  2A11               	incf	___lltoft@exp,f,c
  5488  00E1E2  D000               	goto	l2576
  5489  00E1E4                     l2576:
  5490  00E1E4  0E00               	movlw	0
  5491  00E1E6  1409               	andwf	___lltoft@c,w,c
  5492  00E1E8  6E0D               	movwf	??___lltoft& (0+255),c
  5493  00E1EA  0E00               	movlw	0
  5494  00E1EC  140A               	andwf	___lltoft@c+1,w,c
  5495  00E1EE  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  5496  00E1F0  0E00               	movlw	0
  5497  00E1F2  140B               	andwf	___lltoft@c+2,w,c
  5498  00E1F4  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  5499  00E1F6  0EFF               	movlw	255
  5500  00E1F8  140C               	andwf	___lltoft@c+3,w,c
  5501  00E1FA  6E10               	movwf	(??___lltoft+3)& (0+255),c
  5502  00E1FC  500D               	movf	??___lltoft,w,c
  5503  00E1FE  100E               	iorwf	??___lltoft+1,w,c
  5504  00E200  100F               	iorwf	??___lltoft+2,w,c
  5505  00E202  1010               	iorwf	??___lltoft+3,w,c
  5506  00E204  A4D8               	btfss	status,2,c
  5507  00E206  D7E7               	goto	l2574
  5508  00E208  C009  F001         	movff	___lltoft@c,___ftpack@arg
  5509  00E20C  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  5510  00E210  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  5511  00E214  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  5512  00E218  0E00               	movlw	0
  5513  00E21A  6E05               	movwf	___ftpack@sign,c
  5514  00E21C  ECF1  F072         	call	___ftpack	;wreg free
  5515  00E220  C001  F009         	movff	?___ftpack,?___lltoft
  5516  00E224  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  5517  00E228  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  5518  00E22C  D000               	goto	l840
  5519  00E22E                     l840:
  5520  00E22E  0012               	return		;funcret
  5521  00E230                     __end_of___lltoft:
  5522                           	opt stack 0
  5523                           tblptru	equ	0xFF8
  5524                           tblptrh	equ	0xFF7
  5525                           tblptrl	equ	0xFF6
  5526                           tablat	equ	0xFF5
  5527                           prodh	equ	0xFF4
  5528                           prodl	equ	0xFF3
  5529                           postinc0	equ	0xFEE
  5530                           wreg	equ	0xFE8
  5531                           postdec1	equ	0xFE5
  5532                           fsr1l	equ	0xFE1
  5533                           postinc2	equ	0xFDE
  5534                           postdec2	equ	0xFDD
  5535                           fsr2h	equ	0xFDA
  5536                           fsr2l	equ	0xFD9
  5537                           status	equ	0xFD8
  5538                           
  5539 ;; *************** function ___llmod *****************
  5540 ;; Defined at:
  5541 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;  dividend        4    0[COMRAM] unsigned long 
  5544 ;;  divisor         4    4[COMRAM] unsigned long 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;  counter         1    8[COMRAM] unsigned char 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  4    0[COMRAM] unsigned long 
  5549 ;; Registers used:
  5550 ;;		wreg, status,2, status,0
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5556 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;Total ram usage:        9 bytes
  5561 ;; Hardware stack levels used:    1
  5562 ;; This function calls:
  5563 ;;		Nothing
  5564 ;; This function is called by:
  5565 ;;		_printf
  5566 ;; This function uses a non-reentrant model
  5567 ;;
  5568                           
  5569                           	psect	text22
  5570  00E230                     __ptext22:
  5571                           	opt stack 0
  5572  00E230                     ___llmod:
  5573                           	opt stack 29
  5574                           
  5575                           ;incstack = 0
  5576  00E230  5005               	movf	___llmod@divisor,w,c
  5577  00E232  1006               	iorwf	___llmod@divisor+1,w,c
  5578  00E234  1007               	iorwf	___llmod@divisor+2,w,c
  5579  00E236  1008               	iorwf	___llmod@divisor+3,w,c
  5580  00E238  B4D8               	btfsc	status,2,c
  5581  00E23A  D029               	goto	l820
  5582  00E23C  0E01               	movlw	1
  5583  00E23E  6E09               	movwf	___llmod@counter,c
  5584  00E240  D007               	goto	l2562
  5585  00E242                     l2560:
  5586  00E242  90D8               	bcf	status,0,c
  5587  00E244  3605               	rlcf	___llmod@divisor,f,c
  5588  00E246  3606               	rlcf	___llmod@divisor+1,f,c
  5589  00E248  3607               	rlcf	___llmod@divisor+2,f,c
  5590  00E24A  3608               	rlcf	___llmod@divisor+3,f,c
  5591  00E24C  2A09               	incf	___llmod@counter,f,c
  5592  00E24E  D000               	goto	l2562
  5593  00E250                     l2562:
  5594  00E250  BE08               	btfsc	___llmod@divisor+3,7,c
  5595  00E252  D002               	goto	l2564
  5596  00E254  D7F6               	goto	l2560
  5597  00E256  D000               	goto	l2564
  5598  00E258                     l2564:
  5599  00E258  5005               	movf	___llmod@divisor,w,c
  5600  00E25A  5C01               	subwf	___llmod@dividend,w,c
  5601  00E25C  5006               	movf	___llmod@divisor+1,w,c
  5602  00E25E  5802               	subwfb	___llmod@dividend+1,w,c
  5603  00E260  5007               	movf	___llmod@divisor+2,w,c
  5604  00E262  5803               	subwfb	___llmod@dividend+2,w,c
  5605  00E264  5008               	movf	___llmod@divisor+3,w,c
  5606  00E266  5804               	subwfb	___llmod@dividend+3,w,c
  5607  00E268  A0D8               	btfss	status,0,c
  5608  00E26A  D009               	goto	l2568
  5609  00E26C  5005               	movf	___llmod@divisor,w,c
  5610  00E26E  5E01               	subwf	___llmod@dividend,f,c
  5611  00E270  5006               	movf	___llmod@divisor+1,w,c
  5612  00E272  5A02               	subwfb	___llmod@dividend+1,f,c
  5613  00E274  5007               	movf	___llmod@divisor+2,w,c
  5614  00E276  5A03               	subwfb	___llmod@dividend+2,f,c
  5615  00E278  5008               	movf	___llmod@divisor+3,w,c
  5616  00E27A  5A04               	subwfb	___llmod@dividend+3,f,c
  5617  00E27C  D000               	goto	l2568
  5618  00E27E                     l2568:
  5619  00E27E  90D8               	bcf	status,0,c
  5620  00E280  3208               	rrcf	___llmod@divisor+3,f,c
  5621  00E282  3207               	rrcf	___llmod@divisor+2,f,c
  5622  00E284  3206               	rrcf	___llmod@divisor+1,f,c
  5623  00E286  3205               	rrcf	___llmod@divisor,f,c
  5624  00E288  2E09               	decfsz	___llmod@counter,f,c
  5625  00E28A  D7E6               	goto	l2564
  5626  00E28C  D000               	goto	l820
  5627  00E28E                     l820:
  5628  00E28E  C001  F001         	movff	___llmod@dividend,?___llmod
  5629  00E292  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  5630  00E296  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  5631  00E29A  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  5632  00E29E  0012               	return		;funcret
  5633  00E2A0                     __end_of___llmod:
  5634                           	opt stack 0
  5635                           tblptru	equ	0xFF8
  5636                           tblptrh	equ	0xFF7
  5637                           tblptrl	equ	0xFF6
  5638                           tablat	equ	0xFF5
  5639                           prodh	equ	0xFF4
  5640                           prodl	equ	0xFF3
  5641                           postinc0	equ	0xFEE
  5642                           wreg	equ	0xFE8
  5643                           postdec1	equ	0xFE5
  5644                           fsr1l	equ	0xFE1
  5645                           postinc2	equ	0xFDE
  5646                           postdec2	equ	0xFDD
  5647                           fsr2h	equ	0xFDA
  5648                           fsr2l	equ	0xFD9
  5649                           status	equ	0xFD8
  5650                           
  5651 ;; *************** function ___lldiv *****************
  5652 ;; Defined at:
  5653 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  5654 ;; Parameters:    Size  Location     Type
  5655 ;;  dividend        4    0[COMRAM] unsigned long 
  5656 ;;  divisor         4    4[COMRAM] unsigned long 
  5657 ;; Auto vars:     Size  Location     Type
  5658 ;;  quotient        4    8[COMRAM] unsigned long 
  5659 ;;  counter         1   12[COMRAM] unsigned char 
  5660 ;; Return value:  Size  Location     Type
  5661 ;;                  4    0[COMRAM] unsigned long 
  5662 ;; Registers used:
  5663 ;;		wreg, status,2, status,0
  5664 ;; Tracked objects:
  5665 ;;		On entry : 0/0
  5666 ;;		On exit  : 0/0
  5667 ;;		Unchanged: 0/0
  5668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5669 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5672 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5673 ;;Total ram usage:       13 bytes
  5674 ;; Hardware stack levels used:    1
  5675 ;; This function calls:
  5676 ;;		Nothing
  5677 ;; This function is called by:
  5678 ;;		_printf
  5679 ;; This function uses a non-reentrant model
  5680 ;;
  5681                           
  5682                           	psect	text23
  5683  00E392                     __ptext23:
  5684                           	opt stack 0
  5685  00E392                     ___lldiv:
  5686                           	opt stack 29
  5687                           
  5688                           ;incstack = 0
  5689  00E392  0E00               	movlw	0
  5690  00E394  6E09               	movwf	___lldiv@quotient,c
  5691  00E396  0E00               	movlw	0
  5692  00E398  6E0A               	movwf	___lldiv@quotient+1,c
  5693  00E39A  0E00               	movlw	0
  5694  00E39C  6E0B               	movwf	___lldiv@quotient+2,c
  5695  00E39E  0E00               	movlw	0
  5696  00E3A0  6E0C               	movwf	___lldiv@quotient+3,c
  5697  00E3A2  5005               	movf	___lldiv@divisor,w,c
  5698  00E3A4  1006               	iorwf	___lldiv@divisor+1,w,c
  5699  00E3A6  1007               	iorwf	___lldiv@divisor+2,w,c
  5700  00E3A8  1008               	iorwf	___lldiv@divisor+3,w,c
  5701  00E3AA  B4D8               	btfsc	status,2,c
  5702  00E3AC  D02F               	goto	l810
  5703  00E3AE  0E01               	movlw	1
  5704  00E3B0  6E0D               	movwf	___lldiv@counter,c
  5705  00E3B2  D007               	goto	l2542
  5706  00E3B4                     l2540:
  5707  00E3B4  90D8               	bcf	status,0,c
  5708  00E3B6  3605               	rlcf	___lldiv@divisor,f,c
  5709  00E3B8  3606               	rlcf	___lldiv@divisor+1,f,c
  5710  00E3BA  3607               	rlcf	___lldiv@divisor+2,f,c
  5711  00E3BC  3608               	rlcf	___lldiv@divisor+3,f,c
  5712  00E3BE  2A0D               	incf	___lldiv@counter,f,c
  5713  00E3C0  D000               	goto	l2542
  5714  00E3C2                     l2542:
  5715  00E3C2  BE08               	btfsc	___lldiv@divisor+3,7,c
  5716  00E3C4  D002               	goto	l2544
  5717  00E3C6  D7F6               	goto	l2540
  5718  00E3C8  D000               	goto	l2544
  5719  00E3CA                     l2544:
  5720  00E3CA  90D8               	bcf	status,0,c
  5721  00E3CC  3609               	rlcf	___lldiv@quotient,f,c
  5722  00E3CE  360A               	rlcf	___lldiv@quotient+1,f,c
  5723  00E3D0  360B               	rlcf	___lldiv@quotient+2,f,c
  5724  00E3D2  360C               	rlcf	___lldiv@quotient+3,f,c
  5725  00E3D4  5005               	movf	___lldiv@divisor,w,c
  5726  00E3D6  5C01               	subwf	___lldiv@dividend,w,c
  5727  00E3D8  5006               	movf	___lldiv@divisor+1,w,c
  5728  00E3DA  5802               	subwfb	___lldiv@dividend+1,w,c
  5729  00E3DC  5007               	movf	___lldiv@divisor+2,w,c
  5730  00E3DE  5803               	subwfb	___lldiv@dividend+2,w,c
  5731  00E3E0  5008               	movf	___lldiv@divisor+3,w,c
  5732  00E3E2  5804               	subwfb	___lldiv@dividend+3,w,c
  5733  00E3E4  A0D8               	btfss	status,0,c
  5734  00E3E6  D00A               	goto	l2552
  5735  00E3E8  5005               	movf	___lldiv@divisor,w,c
  5736  00E3EA  5E01               	subwf	___lldiv@dividend,f,c
  5737  00E3EC  5006               	movf	___lldiv@divisor+1,w,c
  5738  00E3EE  5A02               	subwfb	___lldiv@dividend+1,f,c
  5739  00E3F0  5007               	movf	___lldiv@divisor+2,w,c
  5740  00E3F2  5A03               	subwfb	___lldiv@dividend+2,f,c
  5741  00E3F4  5008               	movf	___lldiv@divisor+3,w,c
  5742  00E3F6  5A04               	subwfb	___lldiv@dividend+3,f,c
  5743  00E3F8  8009               	bsf	___lldiv@quotient,0,c
  5744  00E3FA  D000               	goto	l2552
  5745  00E3FC                     l2552:
  5746  00E3FC  90D8               	bcf	status,0,c
  5747  00E3FE  3208               	rrcf	___lldiv@divisor+3,f,c
  5748  00E400  3207               	rrcf	___lldiv@divisor+2,f,c
  5749  00E402  3206               	rrcf	___lldiv@divisor+1,f,c
  5750  00E404  3205               	rrcf	___lldiv@divisor,f,c
  5751  00E406  2E0D               	decfsz	___lldiv@counter,f,c
  5752  00E408  D7E0               	goto	l2544
  5753  00E40A  D000               	goto	l810
  5754  00E40C                     l810:
  5755  00E40C  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5756  00E410  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5757  00E414  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5758  00E418  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5759  00E41C  0012               	return		;funcret
  5760  00E41E                     __end_of___lldiv:
  5761                           	opt stack 0
  5762                           tblptru	equ	0xFF8
  5763                           tblptrh	equ	0xFF7
  5764                           tblptrl	equ	0xFF6
  5765                           tablat	equ	0xFF5
  5766                           prodh	equ	0xFF4
  5767                           prodl	equ	0xFF3
  5768                           postinc0	equ	0xFEE
  5769                           wreg	equ	0xFE8
  5770                           postdec1	equ	0xFE5
  5771                           fsr1l	equ	0xFE1
  5772                           postinc2	equ	0xFDE
  5773                           postdec2	equ	0xFDD
  5774                           fsr2h	equ	0xFDA
  5775                           fsr2l	equ	0xFD9
  5776                           status	equ	0xFD8
  5777                           
  5778 ;; *************** function ___fttol *****************
  5779 ;; Defined at:
  5780 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  5781 ;; Parameters:    Size  Location     Type
  5782 ;;  f1              3   42[COMRAM] float 
  5783 ;; Auto vars:     Size  Location     Type
  5784 ;;  lval            4   52[COMRAM] unsigned long 
  5785 ;;  exp1            1   56[COMRAM] unsigned char 
  5786 ;;  sign1           1   51[COMRAM] unsigned char 
  5787 ;; Return value:  Size  Location     Type
  5788 ;;                  4   42[COMRAM] long 
  5789 ;; Registers used:
  5790 ;;		wreg, status,2, status,0
  5791 ;; Tracked objects:
  5792 ;;		On entry : 0/0
  5793 ;;		On exit  : 0/0
  5794 ;;		Unchanged: 0/0
  5795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5796 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5797 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5798 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5799 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;Total ram usage:       15 bytes
  5801 ;; Hardware stack levels used:    1
  5802 ;; This function calls:
  5803 ;;		Nothing
  5804 ;; This function is called by:
  5805 ;;		_printf
  5806 ;; This function uses a non-reentrant model
  5807 ;;
  5808                           
  5809                           	psect	text24
  5810  00E85C                     __ptext24:
  5811                           	opt stack 0
  5812  00E85C                     ___fttol:
  5813                           	opt stack 29
  5814                           
  5815                           ;incstack = 0
  5816  00E85C  C02D  F02F         	movff	___fttol@f1+2,??___fttol
  5817  00E860  6A30               	clrf	(??___fttol+1)& (0+255),c
  5818  00E862  6A31               	clrf	(??___fttol+2)& (0+255),c
  5819  00E864  342C               	rlcf	___fttol@f1+1,w,c
  5820  00E866  362F               	rlcf	??___fttol& (0+255),f,c
  5821  00E868  E301               	bnc	u2351
  5822  00E86A  8030               	bsf	(??___fttol+1)& (0+255),0,c
  5823  00E86C                     u2351:
  5824  00E86C  502F               	movf	??___fttol,w,c
  5825  00E86E  6E39               	movwf	___fttol@exp1,c
  5826  00E870  5039               	movf	___fttol@exp1,w,c
  5827  00E872  A4D8               	btfss	status,2,c
  5828  00E874  D002               	goto	l2494
  5829  00E876  D039               	goto	l2518
  5830  00E878  D063               	goto	l771
  5831  00E87A                     l2494:
  5832  00E87A  0E17               	movlw	23
  5833  00E87C  6E2F               	movwf	??___fttol& (0+255),c
  5834  00E87E  C02B  F030         	movff	___fttol@f1,??___fttol+1
  5835  00E882  C02C  F031         	movff	___fttol@f1+1,??___fttol+2
  5836  00E886  C02D  F032         	movff	___fttol@f1+2,??___fttol+3
  5837  00E88A  282F               	incf	??___fttol,w,c
  5838  00E88C  6E33               	movwf	(??___fttol+4)& (0+255),c
  5839  00E88E  D004               	goto	u2370
  5840  00E890                     u2375:
  5841  00E890  90D8               	bcf	status,0,c
  5842  00E892  3232               	rrcf	??___fttol+3,f,c
  5843  00E894  3231               	rrcf	??___fttol+2,f,c
  5844  00E896  3230               	rrcf	??___fttol+1,f,c
  5845  00E898                     u2370:
  5846  00E898  2E33               	decfsz	(??___fttol+4)& (0+255),f,c
  5847  00E89A  D7FA               	goto	u2375
  5848  00E89C  5030               	movf	??___fttol+1,w,c
  5849  00E89E  6E34               	movwf	___fttol@sign1,c
  5850  00E8A0  8E2C               	bsf	___fttol@f1+1,7,c
  5851  00E8A2  0EFF               	movlw	255
  5852  00E8A4  162B               	andwf	___fttol@f1,f,c
  5853  00E8A6  0EFF               	movlw	255
  5854  00E8A8  162C               	andwf	___fttol@f1+1,f,c
  5855  00E8AA  0E00               	movlw	0
  5856  00E8AC  162D               	andwf	___fttol@f1+2,f,c
  5857  00E8AE  502B               	movf	___fttol@f1,w,c
  5858  00E8B0  6E35               	movwf	___fttol@lval,c
  5859  00E8B2  502C               	movf	___fttol@f1+1,w,c
  5860  00E8B4  6E36               	movwf	___fttol@lval+1,c
  5861  00E8B6  502D               	movf	___fttol@f1+2,w,c
  5862  00E8B8  6E37               	movwf	___fttol@lval+2,c
  5863  00E8BA  6A38               	clrf	___fttol@lval+3,c
  5864  00E8BC  0E8E               	movlw	142
  5865  00E8BE  5E39               	subwf	___fttol@exp1,f,c
  5866  00E8C0  AE39               	btfss	___fttol@exp1,7,c
  5867  00E8C2  D010               	goto	l2516
  5868  00E8C4  5039               	movf	___fttol@exp1,w,c
  5869  00E8C6  0A80               	xorlw	128
  5870  00E8C8  0F8F               	addlw	143
  5871  00E8CA  B0D8               	btfsc	status,0,c
  5872  00E8CC  D003               	goto	l2512
  5873  00E8CE  D00D               	goto	l2518
  5874  00E8D0  D037               	goto	l771
  5875  00E8D2  D000               	goto	l2512
  5876  00E8D4                     l2512:
  5877  00E8D4  90D8               	bcf	status,0,c
  5878  00E8D6  3238               	rrcf	___fttol@lval+3,f,c
  5879  00E8D8  3237               	rrcf	___fttol@lval+2,f,c
  5880  00E8DA  3236               	rrcf	___fttol@lval+1,f,c
  5881  00E8DC  3235               	rrcf	___fttol@lval,f,c
  5882  00E8DE  3E39               	incfsz	___fttol@exp1,f,c
  5883  00E8E0  D7F9               	goto	l2512
  5884  00E8E2  D019               	goto	l2526
  5885  00E8E4                     l2516:
  5886  00E8E4  0E17               	movlw	23
  5887  00E8E6  6439               	cpfsgt	___fttol@exp1,c
  5888  00E8E8  D011               	goto	l2524
  5889  00E8EA                     l2518:
  5890  00E8EA  0E00               	movlw	0
  5891  00E8EC  6E2B               	movwf	?___fttol,c
  5892  00E8EE  0E00               	movlw	0
  5893  00E8F0  6E2C               	movwf	?___fttol+1,c
  5894  00E8F2  0E00               	movlw	0
  5895  00E8F4  6E2D               	movwf	?___fttol+2,c
  5896  00E8F6  0E00               	movlw	0
  5897  00E8F8  6E2E               	movwf	?___fttol+3,c
  5898  00E8FA  D022               	goto	l771
  5899  00E8FC  D007               	goto	l2524
  5900  00E8FE                     l2522:
  5901  00E8FE  90D8               	bcf	status,0,c
  5902  00E900  3635               	rlcf	___fttol@lval,f,c
  5903  00E902  3636               	rlcf	___fttol@lval+1,f,c
  5904  00E904  3637               	rlcf	___fttol@lval+2,f,c
  5905  00E906  3638               	rlcf	___fttol@lval+3,f,c
  5906  00E908  0639               	decf	___fttol@exp1,f,c
  5907  00E90A  D000               	goto	l2524
  5908  00E90C                     l2524:
  5909  00E90C  5039               	movf	___fttol@exp1,w,c
  5910  00E90E  B4D8               	btfsc	status,2,c
  5911  00E910  D002               	goto	l2526
  5912  00E912  D7F5               	goto	l2522
  5913  00E914  D000               	goto	l2526
  5914  00E916                     l2526:
  5915  00E916  5034               	movf	___fttol@sign1,w,c
  5916  00E918  B4D8               	btfsc	status,2,c
  5917  00E91A  D009               	goto	l2530
  5918  00E91C  1E38               	comf	___fttol@lval+3,f,c
  5919  00E91E  1E37               	comf	___fttol@lval+2,f,c
  5920  00E920  1E36               	comf	___fttol@lval+1,f,c
  5921  00E922  6C35               	negf	___fttol@lval,c
  5922  00E924  0E00               	movlw	0
  5923  00E926  2236               	addwfc	___fttol@lval+1,f,c
  5924  00E928  2237               	addwfc	___fttol@lval+2,f,c
  5925  00E92A  2238               	addwfc	___fttol@lval+3,f,c
  5926  00E92C  D000               	goto	l2530
  5927  00E92E                     l2530:
  5928  00E92E  C035  F02B         	movff	___fttol@lval,?___fttol
  5929  00E932  C036  F02C         	movff	___fttol@lval+1,?___fttol+1
  5930  00E936  C037  F02D         	movff	___fttol@lval+2,?___fttol+2
  5931  00E93A  C038  F02E         	movff	___fttol@lval+3,?___fttol+3
  5932  00E93E  D000               	goto	l771
  5933  00E940                     l771:
  5934  00E940  0012               	return		;funcret
  5935  00E942                     __end_of___fttol:
  5936                           	opt stack 0
  5937                           tblptru	equ	0xFF8
  5938                           tblptrh	equ	0xFF7
  5939                           tblptrl	equ	0xFF6
  5940                           tablat	equ	0xFF5
  5941                           prodh	equ	0xFF4
  5942                           prodl	equ	0xFF3
  5943                           postinc0	equ	0xFEE
  5944                           wreg	equ	0xFE8
  5945                           postdec1	equ	0xFE5
  5946                           fsr1l	equ	0xFE1
  5947                           postinc2	equ	0xFDE
  5948                           postdec2	equ	0xFDD
  5949                           fsr2h	equ	0xFDA
  5950                           fsr2l	equ	0xFD9
  5951                           status	equ	0xFD8
  5952                           
  5953 ;; *************** function ___ftsub *****************
  5954 ;; Defined at:
  5955 ;;		line 20 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;  f1              3   57[COMRAM] float 
  5958 ;;  f2              3   60[COMRAM] float 
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;		None
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  3   57[COMRAM] float 
  5963 ;; Registers used:
  5964 ;;		wreg, status,2, status,0, cstack
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5970 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5974 ;;Total ram usage:        6 bytes
  5975 ;; Hardware stack levels used:    1
  5976 ;; Hardware stack levels required when called:    2
  5977 ;; This function calls:
  5978 ;;		___ftadd
  5979 ;; This function is called by:
  5980 ;;		_printf
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984                           	psect	text25
  5985  00E18C                     __ptext25:
  5986                           	opt stack 0
  5987  00E18C                     ___ftsub:
  5988                           	opt stack 27
  5989                           
  5990                           ;incstack = 0
  5991  00E18C  503D               	movf	___ftsub@f2,w,c
  5992  00E18E  103E               	iorwf	___ftsub@f2+1,w,c
  5993  00E190  103F               	iorwf	___ftsub@f2+2,w,c
  5994  00E192  B4D8               	btfsc	status,2,c
  5995  00E194  D007               	goto	l2462
  5996  00E196  0E00               	movlw	0
  5997  00E198  1A3D               	xorwf	___ftsub@f2,f,c
  5998  00E19A  0E00               	movlw	0
  5999  00E19C  1A3E               	xorwf	___ftsub@f2+1,f,c
  6000  00E19E  0E80               	movlw	128
  6001  00E1A0  1A3F               	xorwf	___ftsub@f2+2,f,c
  6002  00E1A2  D000               	goto	l2462
  6003  00E1A4                     l2462:
  6004  00E1A4  C03A  F02E         	movff	___ftsub@f1,___ftadd@f1
  6005  00E1A8  C03B  F02F         	movff	___ftsub@f1+1,___ftadd@f1+1
  6006  00E1AC  C03C  F030         	movff	___ftsub@f1+2,___ftadd@f1+2
  6007  00E1B0  C03D  F031         	movff	___ftsub@f2,___ftadd@f2
  6008  00E1B4  C03E  F032         	movff	___ftsub@f2+1,___ftadd@f2+1
  6009  00E1B8  C03F  F033         	movff	___ftsub@f2+2,___ftadd@f2+2
  6010  00E1BC  ECDF  F076         	call	___ftadd	;wreg free
  6011  00E1C0  C02E  F03A         	movff	?___ftadd,?___ftsub
  6012  00E1C4  C02F  F03B         	movff	?___ftadd+1,?___ftsub+1
  6013  00E1C8  C030  F03C         	movff	?___ftadd+2,?___ftsub+2
  6014  00E1CC  D000               	goto	l767
  6015  00E1CE                     l767:
  6016  00E1CE  0012               	return		;funcret
  6017  00E1D0                     __end_of___ftsub:
  6018                           	opt stack 0
  6019                           tblptru	equ	0xFF8
  6020                           tblptrh	equ	0xFF7
  6021                           tblptrl	equ	0xFF6
  6022                           tablat	equ	0xFF5
  6023                           prodh	equ	0xFF4
  6024                           prodl	equ	0xFF3
  6025                           postinc0	equ	0xFEE
  6026                           wreg	equ	0xFE8
  6027                           postdec1	equ	0xFE5
  6028                           fsr1l	equ	0xFE1
  6029                           postinc2	equ	0xFDE
  6030                           postdec2	equ	0xFDD
  6031                           fsr2h	equ	0xFDA
  6032                           fsr2l	equ	0xFD9
  6033                           status	equ	0xFD8
  6034                           
  6035 ;; *************** function ___ftadd *****************
  6036 ;; Defined at:
  6037 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  6038 ;; Parameters:    Size  Location     Type
  6039 ;;  f1              3   45[COMRAM] float 
  6040 ;;  f2              3   48[COMRAM] float 
  6041 ;; Auto vars:     Size  Location     Type
  6042 ;;  exp1            1   56[COMRAM] unsigned char 
  6043 ;;  exp2            1   55[COMRAM] unsigned char 
  6044 ;;  sign            1   54[COMRAM] unsigned char 
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  3   45[COMRAM] float 
  6047 ;; Registers used:
  6048 ;;		wreg, status,2, status,0, cstack
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 0/0
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6054 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6055 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6056 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6058 ;;Total ram usage:       12 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; Hardware stack levels required when called:    1
  6061 ;; This function calls:
  6062 ;;		___ftpack
  6063 ;; This function is called by:
  6064 ;;		_printf
  6065 ;;		___ftsub
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           	psect	text26
  6070  00EDBE                     __ptext26:
  6071                           	opt stack 0
  6072  00EDBE                     ___ftadd:
  6073                           	opt stack 27
  6074                           
  6075                           ;incstack = 0
  6076  00EDBE  C030  F034         	movff	___ftadd@f1+2,??___ftadd
  6077  00EDC2  6A35               	clrf	(??___ftadd+1)& (0+255),c
  6078  00EDC4  6A36               	clrf	(??___ftadd+2)& (0+255),c
  6079  00EDC6  342F               	rlcf	___ftadd@f1+1,w,c
  6080  00EDC8  3634               	rlcf	??___ftadd& (0+255),f,c
  6081  00EDCA  E301               	bnc	u1671
  6082  00EDCC  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  6083  00EDCE                     u1671:
  6084  00EDCE  5034               	movf	??___ftadd,w,c
  6085  00EDD0  6E39               	movwf	___ftadd@exp1,c
  6086  00EDD2  C033  F034         	movff	___ftadd@f2+2,??___ftadd
  6087  00EDD6  6A35               	clrf	(??___ftadd+1)& (0+255),c
  6088  00EDD8  6A36               	clrf	(??___ftadd+2)& (0+255),c
  6089  00EDDA  3432               	rlcf	___ftadd@f2+1,w,c
  6090  00EDDC  3634               	rlcf	??___ftadd& (0+255),f,c
  6091  00EDDE  E301               	bnc	u1681
  6092  00EDE0  8035               	bsf	(??___ftadd+1)& (0+255),0,c
  6093  00EDE2                     u1681:
  6094  00EDE2  5034               	movf	??___ftadd,w,c
  6095  00EDE4  6E38               	movwf	___ftadd@exp2,c
  6096  00EDE6  5039               	movf	___ftadd@exp1,w,c
  6097  00EDE8  B4D8               	btfsc	status,2,c
  6098  00EDEA  D00B               	goto	l686
  6099  00EDEC  5038               	movf	___ftadd@exp2,w,c
  6100  00EDEE  5C39               	subwf	___ftadd@exp1,w,c
  6101  00EDF0  B0D8               	btfsc	status,0,c
  6102  00EDF2  D00E               	goto	l2088
  6103  00EDF4  5039               	movf	___ftadd@exp1,w,c
  6104  00EDF6  0800               	sublw	0
  6105  00EDF8  2438               	addwf	___ftadd@exp2,w,c
  6106  00EDFA  6E34               	movwf	??___ftadd& (0+255),c
  6107  00EDFC  0E18               	movlw	24
  6108  00EDFE  6434               	cpfsgt	??___ftadd,c
  6109  00EE00  D007               	goto	l2088
  6110  00EE02                     l686:
  6111  00EE02  C031  F02E         	movff	___ftadd@f2,?___ftadd
  6112  00EE06  C032  F02F         	movff	___ftadd@f2+1,?___ftadd+1
  6113  00EE0A  C033  F030         	movff	___ftadd@f2+2,?___ftadd+2
  6114  00EE0E  D0B8               	goto	l687
  6115  00EE10                     l2088:
  6116  00EE10  5038               	movf	___ftadd@exp2,w,c
  6117  00EE12  B4D8               	btfsc	status,2,c
  6118  00EE14  D00B               	goto	l690
  6119  00EE16  5039               	movf	___ftadd@exp1,w,c
  6120  00EE18  5C38               	subwf	___ftadd@exp2,w,c
  6121  00EE1A  B0D8               	btfsc	status,0,c
  6122  00EE1C  D00E               	goto	l2094
  6123  00EE1E  5038               	movf	___ftadd@exp2,w,c
  6124  00EE20  0800               	sublw	0
  6125  00EE22  2439               	addwf	___ftadd@exp1,w,c
  6126  00EE24  6E34               	movwf	??___ftadd& (0+255),c
  6127  00EE26  0E18               	movlw	24
  6128  00EE28  6434               	cpfsgt	??___ftadd,c
  6129  00EE2A  D007               	goto	l2094
  6130  00EE2C                     l690:
  6131  00EE2C  C02E  F02E         	movff	___ftadd@f1,?___ftadd
  6132  00EE30  C02F  F02F         	movff	___ftadd@f1+1,?___ftadd+1
  6133  00EE34  C030  F030         	movff	___ftadd@f1+2,?___ftadd+2
  6134  00EE38  D0A3               	goto	l687
  6135  00EE3A                     l2094:
  6136  00EE3A  0E06               	movlw	6
  6137  00EE3C  6E37               	movwf	___ftadd@sign,c
  6138  00EE3E  AE30               	btfss	___ftadd@f1+2,7,c
  6139  00EE40  D002               	goto	l2100
  6140  00EE42  8E37               	bsf	___ftadd@sign,7,c
  6141  00EE44  D000               	goto	l2100
  6142  00EE46                     l2100:
  6143  00EE46  BE33               	btfsc	___ftadd@f2+2,7,c
  6144  00EE48  8C37               	bsf	___ftadd@sign,6,c
  6145  00EE4A  8E2F               	bsf	___ftadd@f1+1,7,c
  6146  00EE4C  0EFF               	movlw	255
  6147  00EE4E  162E               	andwf	___ftadd@f1,f,c
  6148  00EE50  0EFF               	movlw	255
  6149  00EE52  162F               	andwf	___ftadd@f1+1,f,c
  6150  00EE54  0E00               	movlw	0
  6151  00EE56  1630               	andwf	___ftadd@f1+2,f,c
  6152  00EE58  8E32               	bsf	___ftadd@f2+1,7,c
  6153  00EE5A  0EFF               	movlw	255
  6154  00EE5C  1631               	andwf	___ftadd@f2,f,c
  6155  00EE5E  0EFF               	movlw	255
  6156  00EE60  1632               	andwf	___ftadd@f2+1,f,c
  6157  00EE62  0E00               	movlw	0
  6158  00EE64  1633               	andwf	___ftadd@f2+2,f,c
  6159  00EE66  5038               	movf	___ftadd@exp2,w,c
  6160  00EE68  5C39               	subwf	___ftadd@exp1,w,c
  6161  00EE6A  B0D8               	btfsc	status,0,c
  6162  00EE6C  D01E               	goto	l2120
  6163  00EE6E                     l2110:
  6164  00EE6E  90D8               	bcf	status,0,c
  6165  00EE70  3631               	rlcf	___ftadd@f2,f,c
  6166  00EE72  3632               	rlcf	___ftadd@f2+1,f,c
  6167  00EE74  3633               	rlcf	___ftadd@f2+2,f,c
  6168  00EE76  0638               	decf	___ftadd@exp2,f,c
  6169  00EE78  5039               	movf	___ftadd@exp1,w,c
  6170  00EE7A  1838               	xorwf	___ftadd@exp2,w,c
  6171  00EE7C  B4D8               	btfsc	status,2,c
  6172  00EE7E  D00F               	goto	l2118
  6173  00EE80  0637               	decf	___ftadd@sign,f,c
  6174  00EE82  C037  F034         	movff	___ftadd@sign,??___ftadd
  6175  00EE86  0E07               	movlw	7
  6176  00EE88  1634               	andwf	??___ftadd,f,c
  6177  00EE8A  B4D8               	btfsc	status,2,c
  6178  00EE8C  D008               	goto	l2118
  6179  00EE8E  D7EF               	goto	l2110
  6180  00EE90  D006               	goto	l2118
  6181  00EE92                     l2116:
  6182  00EE92  90D8               	bcf	status,0,c
  6183  00EE94  3230               	rrcf	___ftadd@f1+2,f,c
  6184  00EE96  322F               	rrcf	___ftadd@f1+1,f,c
  6185  00EE98  322E               	rrcf	___ftadd@f1,f,c
  6186  00EE9A  2A39               	incf	___ftadd@exp1,f,c
  6187  00EE9C  D000               	goto	l2118
  6188  00EE9E                     l2118:
  6189  00EE9E  5038               	movf	___ftadd@exp2,w,c
  6190  00EEA0  1839               	xorwf	___ftadd@exp1,w,c
  6191  00EEA2  B4D8               	btfsc	status,2,c
  6192  00EEA4  D024               	goto	l701
  6193  00EEA6  D7F5               	goto	l2116
  6194  00EEA8  D022               	goto	l701
  6195  00EEAA                     l2120:
  6196  00EEAA  5039               	movf	___ftadd@exp1,w,c
  6197  00EEAC  5C38               	subwf	___ftadd@exp2,w,c
  6198  00EEAE  B0D8               	btfsc	status,0,c
  6199  00EEB0  D01E               	goto	l701
  6200  00EEB2                     l2122:
  6201  00EEB2  90D8               	bcf	status,0,c
  6202  00EEB4  362E               	rlcf	___ftadd@f1,f,c
  6203  00EEB6  362F               	rlcf	___ftadd@f1+1,f,c
  6204  00EEB8  3630               	rlcf	___ftadd@f1+2,f,c
  6205  00EEBA  0639               	decf	___ftadd@exp1,f,c
  6206  00EEBC  5039               	movf	___ftadd@exp1,w,c
  6207  00EEBE  1838               	xorwf	___ftadd@exp2,w,c
  6208  00EEC0  B4D8               	btfsc	status,2,c
  6209  00EEC2  D00F               	goto	l2130
  6210  00EEC4  0637               	decf	___ftadd@sign,f,c
  6211  00EEC6  C037  F034         	movff	___ftadd@sign,??___ftadd
  6212  00EECA  0E07               	movlw	7
  6213  00EECC  1634               	andwf	??___ftadd,f,c
  6214  00EECE  B4D8               	btfsc	status,2,c
  6215  00EED0  D008               	goto	l2130
  6216  00EED2  D7EF               	goto	l2122
  6217  00EED4  D006               	goto	l2130
  6218  00EED6                     l2128:
  6219  00EED6  90D8               	bcf	status,0,c
  6220  00EED8  3233               	rrcf	___ftadd@f2+2,f,c
  6221  00EEDA  3232               	rrcf	___ftadd@f2+1,f,c
  6222  00EEDC  3231               	rrcf	___ftadd@f2,f,c
  6223  00EEDE  2A38               	incf	___ftadd@exp2,f,c
  6224  00EEE0  D000               	goto	l2130
  6225  00EEE2                     l2130:
  6226  00EEE2  5038               	movf	___ftadd@exp2,w,c
  6227  00EEE4  1839               	xorwf	___ftadd@exp1,w,c
  6228  00EEE6  B4D8               	btfsc	status,2,c
  6229  00EEE8  D002               	goto	l701
  6230  00EEEA  D7F5               	goto	l2128
  6231  00EEEC  D000               	goto	l701
  6232  00EEEE                     l701:
  6233  00EEEE  AE37               	btfss	___ftadd@sign,7,c
  6234  00EEF0  D00C               	goto	l710
  6235  00EEF2  0EFF               	movlw	255
  6236  00EEF4  1A2E               	xorwf	___ftadd@f1,f,c
  6237  00EEF6  0EFF               	movlw	255
  6238  00EEF8  1A2F               	xorwf	___ftadd@f1+1,f,c
  6239  00EEFA  0EFF               	movlw	255
  6240  00EEFC  1A30               	xorwf	___ftadd@f1+2,f,c
  6241  00EEFE  0E01               	movlw	1
  6242  00EF00  262E               	addwf	___ftadd@f1,f,c
  6243  00EF02  0E00               	movlw	0
  6244  00EF04  222F               	addwfc	___ftadd@f1+1,f,c
  6245  00EF06  0E00               	movlw	0
  6246  00EF08  2230               	addwfc	___ftadd@f1+2,f,c
  6247  00EF0A                     l710:
  6248  00EF0A  AC37               	btfss	___ftadd@sign,6,c
  6249  00EF0C  D00D               	goto	l2136
  6250  00EF0E  0EFF               	movlw	255
  6251  00EF10  1A31               	xorwf	___ftadd@f2,f,c
  6252  00EF12  0EFF               	movlw	255
  6253  00EF14  1A32               	xorwf	___ftadd@f2+1,f,c
  6254  00EF16  0EFF               	movlw	255
  6255  00EF18  1A33               	xorwf	___ftadd@f2+2,f,c
  6256  00EF1A  0E01               	movlw	1
  6257  00EF1C  2631               	addwf	___ftadd@f2,f,c
  6258  00EF1E  0E00               	movlw	0
  6259  00EF20  2232               	addwfc	___ftadd@f2+1,f,c
  6260  00EF22  0E00               	movlw	0
  6261  00EF24  2233               	addwfc	___ftadd@f2+2,f,c
  6262  00EF26  D000               	goto	l2136
  6263  00EF28                     l2136:
  6264  00EF28  0E00               	movlw	0
  6265  00EF2A  6E37               	movwf	___ftadd@sign,c
  6266  00EF2C  502E               	movf	___ftadd@f1,w,c
  6267  00EF2E  2631               	addwf	___ftadd@f2,f,c
  6268  00EF30  502F               	movf	___ftadd@f1+1,w,c
  6269  00EF32  2232               	addwfc	___ftadd@f2+1,f,c
  6270  00EF34  5030               	movf	___ftadd@f1+2,w,c
  6271  00EF36  2233               	addwfc	___ftadd@f2+2,f,c
  6272  00EF38  AE33               	btfss	___ftadd@f2+2,7,c
  6273  00EF3A  D00F               	goto	l2146
  6274  00EF3C  0EFF               	movlw	255
  6275  00EF3E  1A31               	xorwf	___ftadd@f2,f,c
  6276  00EF40  0EFF               	movlw	255
  6277  00EF42  1A32               	xorwf	___ftadd@f2+1,f,c
  6278  00EF44  0EFF               	movlw	255
  6279  00EF46  1A33               	xorwf	___ftadd@f2+2,f,c
  6280  00EF48  0E01               	movlw	1
  6281  00EF4A  2631               	addwf	___ftadd@f2,f,c
  6282  00EF4C  0E00               	movlw	0
  6283  00EF4E  2232               	addwfc	___ftadd@f2+1,f,c
  6284  00EF50  0E00               	movlw	0
  6285  00EF52  2233               	addwfc	___ftadd@f2+2,f,c
  6286  00EF54  0E01               	movlw	1
  6287  00EF56  6E37               	movwf	___ftadd@sign,c
  6288  00EF58  D000               	goto	l2146
  6289  00EF5A                     l2146:
  6290  00EF5A  C031  F001         	movff	___ftadd@f2,___ftpack@arg
  6291  00EF5E  C032  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  6292  00EF62  C033  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  6293  00EF66  C039  F004         	movff	___ftadd@exp1,___ftpack@exp
  6294  00EF6A  C037  F005         	movff	___ftadd@sign,___ftpack@sign
  6295  00EF6E  ECF1  F072         	call	___ftpack	;wreg free
  6296  00EF72  C001  F02E         	movff	?___ftpack,?___ftadd
  6297  00EF76  C002  F02F         	movff	?___ftpack+1,?___ftadd+1
  6298  00EF7A  C003  F030         	movff	?___ftpack+2,?___ftadd+2
  6299  00EF7E  D000               	goto	l687
  6300  00EF80                     l687:
  6301  00EF80  0012               	return		;funcret
  6302  00EF82                     __end_of___ftadd:
  6303                           	opt stack 0
  6304                           tblptru	equ	0xFF8
  6305                           tblptrh	equ	0xFF7
  6306                           tblptrl	equ	0xFF6
  6307                           tablat	equ	0xFF5
  6308                           prodh	equ	0xFF4
  6309                           prodl	equ	0xFF3
  6310                           postinc0	equ	0xFEE
  6311                           wreg	equ	0xFE8
  6312                           postdec1	equ	0xFE5
  6313                           fsr1l	equ	0xFE1
  6314                           postinc2	equ	0xFDE
  6315                           postdec2	equ	0xFDD
  6316                           fsr2h	equ	0xFDA
  6317                           fsr2l	equ	0xFD9
  6318                           status	equ	0xFD8
  6319                           
  6320 ;; *************** function ___ftpack *****************
  6321 ;; Defined at:
  6322 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  6323 ;; Parameters:    Size  Location     Type
  6324 ;;  arg             3    0[COMRAM] unsigned um
  6325 ;;  exp             1    3[COMRAM] unsigned char 
  6326 ;;  sign            1    4[COMRAM] unsigned char 
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;		None
  6329 ;; Return value:  Size  Location     Type
  6330 ;;                  3    0[COMRAM] float 
  6331 ;; Registers used:
  6332 ;;		wreg, status,2, status,0
  6333 ;; Tracked objects:
  6334 ;;		On entry : 0/0
  6335 ;;		On exit  : 0/0
  6336 ;;		Unchanged: 0/0
  6337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6338 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6340 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6341 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;Total ram usage:        8 bytes
  6343 ;; Hardware stack levels used:    1
  6344 ;; This function calls:
  6345 ;;		Nothing
  6346 ;; This function is called by:
  6347 ;;		___ftadd
  6348 ;;		___ftdiv
  6349 ;;		___ftmul
  6350 ;;		___lltoft
  6351 ;;		___lwtoft
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           	psect	text27
  6356  00E5E2                     __ptext27:
  6357                           	opt stack 0
  6358  00E5E2                     ___ftpack:
  6359                           	opt stack 27
  6360                           
  6361                           ;incstack = 0
  6362  00E5E2  5004               	movf	___ftpack@exp,w,c
  6363  00E5E4  B4D8               	btfsc	status,2,c
  6364  00E5E6  D005               	goto	l2042
  6365  00E5E8  5001               	movf	___ftpack@arg,w,c
  6366  00E5EA  1002               	iorwf	___ftpack@arg+1,w,c
  6367  00E5EC  1003               	iorwf	___ftpack@arg+2,w,c
  6368  00E5EE  A4D8               	btfss	status,2,c
  6369  00E5F0  D00E               	goto	l2048
  6370  00E5F2                     l2042:
  6371  00E5F2  0E00               	movlw	0
  6372  00E5F4  6E01               	movwf	?___ftpack,c
  6373  00E5F6  0E00               	movlw	0
  6374  00E5F8  6E02               	movwf	?___ftpack+1,c
  6375  00E5FA  0E00               	movlw	0
  6376  00E5FC  6E03               	movwf	?___ftpack+2,c
  6377  00E5FE  D053               	goto	l646
  6378  00E600  D006               	goto	l2048
  6379  00E602                     l2046:
  6380  00E602  2A04               	incf	___ftpack@exp,f,c
  6381  00E604  90D8               	bcf	status,0,c
  6382  00E606  3203               	rrcf	___ftpack@arg+2,f,c
  6383  00E608  3202               	rrcf	___ftpack@arg+1,f,c
  6384  00E60A  3201               	rrcf	___ftpack@arg,f,c
  6385  00E60C  D000               	goto	l2048
  6386  00E60E                     l2048:
  6387  00E60E  0E00               	movlw	0
  6388  00E610  1401               	andwf	___ftpack@arg,w,c
  6389  00E612  6E06               	movwf	??___ftpack& (0+255),c
  6390  00E614  0E00               	movlw	0
  6391  00E616  1402               	andwf	___ftpack@arg+1,w,c
  6392  00E618  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6393  00E61A  0EFE               	movlw	254
  6394  00E61C  1403               	andwf	___ftpack@arg+2,w,c
  6395  00E61E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6396  00E620  5006               	movf	??___ftpack,w,c
  6397  00E622  1007               	iorwf	??___ftpack+1,w,c
  6398  00E624  1008               	iorwf	??___ftpack+2,w,c
  6399  00E626  B4D8               	btfsc	status,2,c
  6400  00E628  D00E               	goto	l2054
  6401  00E62A  D7EB               	goto	l2046
  6402  00E62C  D00C               	goto	l2054
  6403  00E62E                     l2050:
  6404  00E62E  2A04               	incf	___ftpack@exp,f,c
  6405  00E630  0E01               	movlw	1
  6406  00E632  2601               	addwf	___ftpack@arg,f,c
  6407  00E634  0E00               	movlw	0
  6408  00E636  2202               	addwfc	___ftpack@arg+1,f,c
  6409  00E638  0E00               	movlw	0
  6410  00E63A  2203               	addwfc	___ftpack@arg+2,f,c
  6411  00E63C  90D8               	bcf	status,0,c
  6412  00E63E  3203               	rrcf	___ftpack@arg+2,f,c
  6413  00E640  3202               	rrcf	___ftpack@arg+1,f,c
  6414  00E642  3201               	rrcf	___ftpack@arg,f,c
  6415  00E644  D000               	goto	l2054
  6416  00E646                     l2054:
  6417  00E646  0E00               	movlw	0
  6418  00E648  1401               	andwf	___ftpack@arg,w,c
  6419  00E64A  6E06               	movwf	??___ftpack& (0+255),c
  6420  00E64C  0E00               	movlw	0
  6421  00E64E  1402               	andwf	___ftpack@arg+1,w,c
  6422  00E650  6E07               	movwf	(??___ftpack+1)& (0+255),c
  6423  00E652  0EFF               	movlw	255
  6424  00E654  1403               	andwf	___ftpack@arg+2,w,c
  6425  00E656  6E08               	movwf	(??___ftpack+2)& (0+255),c
  6426  00E658  5006               	movf	??___ftpack,w,c
  6427  00E65A  1007               	iorwf	??___ftpack+1,w,c
  6428  00E65C  1008               	iorwf	??___ftpack+2,w,c
  6429  00E65E  B4D8               	btfsc	status,2,c
  6430  00E660  D008               	goto	l2058
  6431  00E662  D7E5               	goto	l2050
  6432  00E664  D006               	goto	l2058
  6433  00E666                     l2056:
  6434  00E666  0604               	decf	___ftpack@exp,f,c
  6435  00E668  90D8               	bcf	status,0,c
  6436  00E66A  3601               	rlcf	___ftpack@arg,f,c
  6437  00E66C  3602               	rlcf	___ftpack@arg+1,f,c
  6438  00E66E  3603               	rlcf	___ftpack@arg+2,f,c
  6439  00E670  D000               	goto	l2058
  6440  00E672                     l2058:
  6441  00E672  BE02               	btfsc	___ftpack@arg+1,7,c
  6442  00E674  D004               	goto	l657
  6443  00E676  0E02               	movlw	2
  6444  00E678  6004               	cpfslt	___ftpack@exp,c
  6445  00E67A  D7F5               	goto	l2056
  6446  00E67C  D000               	goto	l657
  6447  00E67E                     l657:
  6448  00E67E  B004               	btfsc	___ftpack@exp,0,c
  6449  00E680  D002               	goto	l2064
  6450  00E682  9E02               	bcf	___ftpack@arg+1,7,c
  6451  00E684  D000               	goto	l2064
  6452  00E686                     l2064:
  6453  00E686  90D8               	bcf	status,0,c
  6454  00E688  3204               	rrcf	___ftpack@exp,f,c
  6455  00E68A  5004               	movf	___ftpack@exp,w,c
  6456  00E68C  1203               	iorwf	___ftpack@arg+2,f,c
  6457  00E68E  5005               	movf	___ftpack@sign,w,c
  6458  00E690  B4D8               	btfsc	status,2,c
  6459  00E692  D002               	goto	l2070
  6460  00E694  8E03               	bsf	___ftpack@arg+2,7,c
  6461  00E696  D000               	goto	l2070
  6462  00E698                     l2070:
  6463  00E698  C001  F001         	movff	___ftpack@arg,?___ftpack
  6464  00E69C  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  6465  00E6A0  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  6466  00E6A4  D000               	goto	l646
  6467  00E6A6                     l646:
  6468  00E6A6  0012               	return		;funcret
  6469  00E6A8                     __end_of___ftpack:
  6470                           	opt stack 0
  6471                           tblptru	equ	0xFF8
  6472                           tblptrh	equ	0xFF7
  6473                           tblptrl	equ	0xFF6
  6474                           tablat	equ	0xFF5
  6475                           prodh	equ	0xFF4
  6476                           prodl	equ	0xFF3
  6477                           postinc0	equ	0xFEE
  6478                           wreg	equ	0xFE8
  6479                           postdec1	equ	0xFE5
  6480                           fsr1l	equ	0xFE1
  6481                           postinc2	equ	0xFDE
  6482                           postdec2	equ	0xFDD
  6483                           fsr2h	equ	0xFDA
  6484                           fsr2l	equ	0xFD9
  6485                           status	equ	0xFD8
  6486                           
  6487 ;; *************** function ___ftneg *****************
  6488 ;; Defined at:
  6489 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  f1              3    0[COMRAM] float 
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;		None
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  3    0[COMRAM] float 
  6496 ;; Registers used:
  6497 ;;		wreg, status,2, status,0
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6503 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;Total ram usage:        3 bytes
  6508 ;; Hardware stack levels used:    1
  6509 ;; This function calls:
  6510 ;;		Nothing
  6511 ;; This function is called by:
  6512 ;;		_printf
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           	psect	text28
  6517  00DFF2                     __ptext28:
  6518                           	opt stack 0
  6519  00DFF2                     ___ftneg:
  6520                           	opt stack 29
  6521                           
  6522                           ;incstack = 0
  6523  00DFF2  5001               	movf	___ftneg@f1,w,c
  6524  00DFF4  1002               	iorwf	___ftneg@f1+1,w,c
  6525  00DFF6  1003               	iorwf	___ftneg@f1+2,w,c
  6526  00DFF8  B4D8               	btfsc	status,2,c
  6527  00DFFA  D006               	goto	l760
  6528  00DFFC  0E00               	movlw	0
  6529  00DFFE  1A01               	xorwf	___ftneg@f1,f,c
  6530  00E000  0E00               	movlw	0
  6531  00E002  1A02               	xorwf	___ftneg@f1+1,f,c
  6532  00E004  0E80               	movlw	128
  6533  00E006  1A03               	xorwf	___ftneg@f1+2,f,c
  6534  00E008                     l760:
  6535  00E008  C001  F001         	movff	___ftneg@f1,?___ftneg
  6536  00E00C  C002  F002         	movff	___ftneg@f1+1,?___ftneg+1
  6537  00E010  C003  F003         	movff	___ftneg@f1+2,?___ftneg+2
  6538  00E014  0012               	return		;funcret
  6539  00E016                     __end_of___ftneg:
  6540                           	opt stack 0
  6541                           tblptru	equ	0xFF8
  6542                           tblptrh	equ	0xFF7
  6543                           tblptrl	equ	0xFF6
  6544                           tablat	equ	0xFF5
  6545                           prodh	equ	0xFF4
  6546                           prodl	equ	0xFF3
  6547                           postinc0	equ	0xFEE
  6548                           wreg	equ	0xFE8
  6549                           postdec1	equ	0xFE5
  6550                           fsr1l	equ	0xFE1
  6551                           postinc2	equ	0xFDE
  6552                           postdec2	equ	0xFDD
  6553                           fsr2h	equ	0xFDA
  6554                           fsr2l	equ	0xFD9
  6555                           status	equ	0xFD8
  6556                           
  6557 ;; *************** function ___ftge *****************
  6558 ;; Defined at:
  6559 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  6560 ;; Parameters:    Size  Location     Type
  6561 ;;  ff1             3    0[COMRAM] float 
  6562 ;;  ff2             3    3[COMRAM] float 
  6563 ;; Auto vars:     Size  Location     Type
  6564 ;;		None
  6565 ;; Return value:  Size  Location     Type
  6566 ;;		None               void
  6567 ;; Registers used:
  6568 ;;		wreg, status,2, status,0
  6569 ;; Tracked objects:
  6570 ;;		On entry : 0/0
  6571 ;;		On exit  : 0/0
  6572 ;;		Unchanged: 0/0
  6573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6574 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6576 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6577 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6578 ;;Total ram usage:        9 bytes
  6579 ;; Hardware stack levels used:    1
  6580 ;; This function calls:
  6581 ;;		Nothing
  6582 ;; This function is called by:
  6583 ;;		_main
  6584 ;;		_printf
  6585 ;;		_check_buzzer
  6586 ;; This function uses a non-reentrant model
  6587 ;;
  6588                           
  6589                           	psect	text29
  6590  00E41E                     __ptext29:
  6591                           	opt stack 0
  6592  00E41E                     ___ftge:
  6593                           	opt stack 29
  6594                           
  6595                           ;incstack = 0
  6596  00E41E  AE03               	btfss	___ftge@ff1+2,7,c
  6597  00E420  D017               	goto	l2470
  6598  00E422  C001  F007         	movff	___ftge@ff1,??___ftge
  6599  00E426  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  6600  00E42A  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  6601  00E42E  1E07               	comf	??___ftge,f,c
  6602  00E430  1E08               	comf	??___ftge+1,f,c
  6603  00E432  1E09               	comf	??___ftge+2,f,c
  6604  00E434  2A07               	incf	??___ftge,f,c
  6605  00E436  0E00               	movlw	0
  6606  00E438  2208               	addwfc	??___ftge+1,f,c
  6607  00E43A  2209               	addwfc	??___ftge+2,f,c
  6608  00E43C  0E00               	movlw	0
  6609  00E43E  2407               	addwf	??___ftge,w,c
  6610  00E440  6E01               	movwf	___ftge@ff1,c
  6611  00E442  0E00               	movlw	0
  6612  00E444  2008               	addwfc	??___ftge+1,w,c
  6613  00E446  6E02               	movwf	___ftge@ff1+1,c
  6614  00E448  0E80               	movlw	128
  6615  00E44A  2009               	addwfc	??___ftge+2,w,c
  6616  00E44C  6E03               	movwf	___ftge@ff1+2,c
  6617  00E44E  D000               	goto	l2470
  6618  00E450                     l2470:
  6619  00E450  AE06               	btfss	___ftge@ff2+2,7,c
  6620  00E452  D017               	goto	l2474
  6621  00E454  C004  F007         	movff	___ftge@ff2,??___ftge
  6622  00E458  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  6623  00E45C  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  6624  00E460  1E07               	comf	??___ftge,f,c
  6625  00E462  1E08               	comf	??___ftge+1,f,c
  6626  00E464  1E09               	comf	??___ftge+2,f,c
  6627  00E466  2A07               	incf	??___ftge,f,c
  6628  00E468  0E00               	movlw	0
  6629  00E46A  2208               	addwfc	??___ftge+1,f,c
  6630  00E46C  2209               	addwfc	??___ftge+2,f,c
  6631  00E46E  0E00               	movlw	0
  6632  00E470  2407               	addwf	??___ftge,w,c
  6633  00E472  6E04               	movwf	___ftge@ff2,c
  6634  00E474  0E00               	movlw	0
  6635  00E476  2008               	addwfc	??___ftge+1,w,c
  6636  00E478  6E05               	movwf	___ftge@ff2+1,c
  6637  00E47A  0E80               	movlw	128
  6638  00E47C  2009               	addwfc	??___ftge+2,w,c
  6639  00E47E  6E06               	movwf	___ftge@ff2+2,c
  6640  00E480  D000               	goto	l2474
  6641  00E482                     l2474:
  6642  00E482  0E00               	movlw	0
  6643  00E484  1A01               	xorwf	___ftge@ff1,f,c
  6644  00E486  0E00               	movlw	0
  6645  00E488  1A02               	xorwf	___ftge@ff1+1,f,c
  6646  00E48A  0E80               	movlw	128
  6647  00E48C  1A03               	xorwf	___ftge@ff1+2,f,c
  6648  00E48E  0E00               	movlw	0
  6649  00E490  1A04               	xorwf	___ftge@ff2,f,c
  6650  00E492  0E00               	movlw	0
  6651  00E494  1A05               	xorwf	___ftge@ff2+1,f,c
  6652  00E496  0E80               	movlw	128
  6653  00E498  1A06               	xorwf	___ftge@ff2+2,f,c
  6654  00E49A  5004               	movf	___ftge@ff2,w,c
  6655  00E49C  5C01               	subwf	___ftge@ff1,w,c
  6656  00E49E  5005               	movf	___ftge@ff2+1,w,c
  6657  00E4A0  5802               	subwfb	___ftge@ff1+1,w,c
  6658  00E4A2  5006               	movf	___ftge@ff2+2,w,c
  6659  00E4A4  5803               	subwfb	___ftge@ff1+2,w,c
  6660  00E4A6  B0D8               	btfsc	status,0,c
  6661  00E4A8  D002               	goto	l2480
  6662  00E4AA  90D8               	bcf	status,0,c
  6663  00E4AC  D002               	goto	l744
  6664  00E4AE                     l2480:
  6665  00E4AE  80D8               	bsf	status,0,c
  6666  00E4B0  D000               	goto	l744
  6667  00E4B2                     l744:
  6668  00E4B2  0012               	return		;funcret
  6669  00E4B4                     __end_of___ftge:
  6670                           	opt stack 0
  6671                           tblptru	equ	0xFF8
  6672                           tblptrh	equ	0xFF7
  6673                           tblptrl	equ	0xFF6
  6674                           tablat	equ	0xFF5
  6675                           prodh	equ	0xFF4
  6676                           prodl	equ	0xFF3
  6677                           postinc0	equ	0xFEE
  6678                           wreg	equ	0xFE8
  6679                           postdec1	equ	0xFE5
  6680                           fsr1l	equ	0xFE1
  6681                           postinc2	equ	0xFDE
  6682                           postdec2	equ	0xFDD
  6683                           fsr2h	equ	0xFDA
  6684                           fsr2l	equ	0xFD9
  6685                           status	equ	0xFD8
  6686                           
  6687 ;; *************** function _Wait_N_Seconds *****************
  6688 ;; Defined at:
  6689 ;;		line 198 in file "lab7p1.c"
  6690 ;; Parameters:    Size  Location     Type
  6691 ;;  seconds         1    wreg     unsigned char 
  6692 ;; Auto vars:     Size  Location     Type
  6693 ;;  seconds         1    0[COMRAM] unsigned char 
  6694 ;;  I               1    1[COMRAM] unsigned char 
  6695 ;; Return value:  Size  Location     Type
  6696 ;;		None               void
  6697 ;; Registers used:
  6698 ;;		wreg, status,2, status,0, cstack
  6699 ;; Tracked objects:
  6700 ;;		On entry : 0/0
  6701 ;;		On exit  : 0/0
  6702 ;;		Unchanged: 0/0
  6703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6705 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6707 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6708 ;;Total ram usage:        2 bytes
  6709 ;; Hardware stack levels used:    1
  6710 ;; Hardware stack levels required when called:    2
  6711 ;; This function calls:
  6712 ;;		_Wait_One_Second
  6713 ;; This function is called by:
  6714 ;;		_Day_Mode
  6715 ;;		_Night_Mode
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           	psect	text30
  6720  00DFD8                     __ptext30:
  6721                           	opt stack 0
  6722  00DFD8                     _Wait_N_Seconds:
  6723                           	opt stack 27
  6724                           
  6725                           ;incstack = 0
  6726                           ;Wait_N_Seconds@seconds stored from wreg
  6727  00DFD8  6E01               	movwf	Wait_N_Seconds@seconds,c
  6728                           
  6729                           ;lab7p1.c: 200: char I;
  6730                           ;lab7p1.c: 201: for (I = 0; I< seconds; I++)
  6731  00DFDA  0E00               	movlw	0
  6732  00DFDC  6E02               	movwf	Wait_N_Seconds@I,c
  6733  00DFDE  D004               	goto	l1734
  6734  00DFE0                     l1730:
  6735                           
  6736                           ;lab7p1.c: 202: {
  6737                           ;lab7p1.c: 203: Wait_One_Second();
  6738  00DFE0  ECA1  F06F         	call	_Wait_One_Second	;wreg free
  6739  00DFE4  2A02               	incf	Wait_N_Seconds@I,f,c
  6740  00DFE6  D000               	goto	l1734
  6741  00DFE8                     l1734:
  6742  00DFE8  5001               	movf	Wait_N_Seconds@seconds,w,c
  6743  00DFEA  5C02               	subwf	Wait_N_Seconds@I,w,c
  6744  00DFEC  A0D8               	btfss	status,0,c
  6745  00DFEE  D7F8               	goto	l1730
  6746  00DFF0  0012               	return		;funcret
  6747  00DFF2                     __end_of_Wait_N_Seconds:
  6748                           	opt stack 0
  6749                           tblptru	equ	0xFF8
  6750                           tblptrh	equ	0xFF7
  6751                           tblptrl	equ	0xFF6
  6752                           tablat	equ	0xFF5
  6753                           prodh	equ	0xFF4
  6754                           prodl	equ	0xFF3
  6755                           postinc0	equ	0xFEE
  6756                           wreg	equ	0xFE8
  6757                           postdec1	equ	0xFE5
  6758                           fsr1l	equ	0xFE1
  6759                           postinc2	equ	0xFDE
  6760                           postdec2	equ	0xFDD
  6761                           fsr2h	equ	0xFDA
  6762                           fsr2l	equ	0xFD9
  6763                           status	equ	0xFD8
  6764                           
  6765 ;; *************** function _Wait_One_Second *****************
  6766 ;; Defined at:
  6767 ;;		line 180 in file "lab7p1.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;		None
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;		None
  6772 ;; Return value:  Size  Location     Type
  6773 ;;		None               void
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6785 ;;Total ram usage:        0 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    1
  6788 ;; This function calls:
  6789 ;;		_Wait_Half_Second
  6790 ;; This function is called by:
  6791 ;;		_Wait_N_Seconds
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           	psect	text31
  6796  00DF42                     __ptext31:
  6797                           	opt stack 0
  6798  00DF42                     _Wait_One_Second:
  6799                           	opt stack 27
  6800                           
  6801                           ;lab7p1.c: 182: PORTDbits.RD7 = 1;
  6802                           
  6803                           ;incstack = 0
  6804  00DF42  8E83               	bsf	3971,7,c	;volatile
  6805                           
  6806                           ;lab7p1.c: 183: Wait_Half_Second();
  6807  00DF44  ECDF  F06F         	call	_Wait_Half_Second	;wreg free
  6808                           
  6809                           ;lab7p1.c: 184: PORTDbits.RD7 = 0;
  6810  00DF48  9E83               	bcf	3971,7,c	;volatile
  6811                           
  6812                           ;lab7p1.c: 185: Wait_Half_Second();
  6813  00DF4A  ECDF  F06F         	call	_Wait_Half_Second	;wreg free
  6814  00DF4E  0012               	return		;funcret
  6815  00DF50                     __end_of_Wait_One_Second:
  6816                           	opt stack 0
  6817                           tblptru	equ	0xFF8
  6818                           tblptrh	equ	0xFF7
  6819                           tblptrl	equ	0xFF6
  6820                           tablat	equ	0xFF5
  6821                           prodh	equ	0xFF4
  6822                           prodl	equ	0xFF3
  6823                           postinc0	equ	0xFEE
  6824                           wreg	equ	0xFE8
  6825                           postdec1	equ	0xFE5
  6826                           fsr1l	equ	0xFE1
  6827                           postinc2	equ	0xFDE
  6828                           postdec2	equ	0xFDD
  6829                           fsr2h	equ	0xFDA
  6830                           fsr2l	equ	0xFD9
  6831                           status	equ	0xFD8
  6832                           
  6833 ;; *************** function _Set_NSLT *****************
  6834 ;; Defined at:
  6835 ;;		line 218 in file "lab7p1.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;  color           1    wreg     unsigned char 
  6838 ;; Auto vars:     Size  Location     Type
  6839 ;;  color           1    0[COMRAM] unsigned char 
  6840 ;; Return value:  Size  Location     Type
  6841 ;;		None               void
  6842 ;; Registers used:
  6843 ;;		wreg, status,2, status,0
  6844 ;; Tracked objects:
  6845 ;;		On entry : 0/0
  6846 ;;		On exit  : 0/0
  6847 ;;		Unchanged: 0/0
  6848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6849 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6850 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6851 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6852 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6853 ;;Total ram usage:        1 bytes
  6854 ;; Hardware stack levels used:    1
  6855 ;; This function calls:
  6856 ;;		Nothing
  6857 ;; This function is called by:
  6858 ;;		_Day_Mode
  6859 ;;		_Night_Mode
  6860 ;; This function uses a non-reentrant model
  6861 ;;
  6862                           
  6863                           	psect	text32
  6864  00E156                     __ptext32:
  6865                           	opt stack 0
  6866  00E156                     _Set_NSLT:
  6867                           	opt stack 29
  6868                           
  6869                           ;incstack = 0
  6870                           ;Set_NSLT@color stored from wreg
  6871  00E156  6E01               	movwf	Set_NSLT@color,c
  6872                           
  6873                           ;lab7p1.c: 220: switch (color)
  6874  00E158  D00A               	goto	l1746
  6875  00E15A                     l155:
  6876  00E15A  9482               	bcf	3970,2,c	;volatile
  6877  00E15C  D001               	goto	L8
  6878  00E15E                     l157:
  6879  00E15E  8482               	bsf	3970,2,c	;volatile
  6880  00E160                     L8:
  6881  00E160  9682               	bcf	3970,3,c	;volatile
  6882  00E162  D013               	goto	l160
  6883  00E164                     l158:
  6884  00E164  9482               	bcf	3970,2,c	;volatile
  6885  00E166  D001               	goto	L9
  6886  00E168                     l159:
  6887  00E168  8482               	bsf	3970,2,c	;volatile
  6888  00E16A                     L9:
  6889  00E16A  8682               	bsf	3970,3,c	;volatile
  6890                           
  6891                           ;lab7p1.c: 226: }
  6892  00E16C  D00E               	goto	l160
  6893  00E16E                     l1746:
  6894  00E16E  5001               	movf	Set_NSLT@color,w,c
  6895                           
  6896                           ; Switch size 1, requested type "space"
  6897                           ; Number of cases is 4, Range of values is 0 to 3
  6898                           ; switch strategies available:
  6899                           ; Name         Instructions Cycles
  6900                           ; simple_byte           13     7 (average)
  6901                           ;	Chosen strategy is simple_byte
  6902  00E170  0A00               	xorlw	0	; case 0
  6903  00E172  B4D8               	btfsc	status,2,c
  6904  00E174  D7F2               	goto	l155
  6905  00E176  0A01               	xorlw	1	; case 1
  6906  00E178  B4D8               	btfsc	status,2,c
  6907  00E17A  D7F1               	goto	l157
  6908  00E17C  0A03               	xorlw	3	; case 2
  6909  00E17E  B4D8               	btfsc	status,2,c
  6910  00E180  D7F1               	goto	l158
  6911  00E182  0A01               	xorlw	1	; case 3
  6912  00E184  B4D8               	btfsc	status,2,c
  6913  00E186  D7F0               	goto	l159
  6914  00E188  D000               	goto	l160
  6915  00E18A                     l160:
  6916  00E18A  0012               	return		;funcret
  6917  00E18C                     __end_of_Set_NSLT:
  6918                           	opt stack 0
  6919                           tblptru	equ	0xFF8
  6920                           tblptrh	equ	0xFF7
  6921                           tblptrl	equ	0xFF6
  6922                           tablat	equ	0xFF5
  6923                           prodh	equ	0xFF4
  6924                           prodl	equ	0xFF3
  6925                           postinc0	equ	0xFEE
  6926                           wreg	equ	0xFE8
  6927                           postdec1	equ	0xFE5
  6928                           fsr1l	equ	0xFE1
  6929                           postinc2	equ	0xFDE
  6930                           postdec2	equ	0xFDD
  6931                           fsr2h	equ	0xFDA
  6932                           fsr2l	equ	0xFD9
  6933                           status	equ	0xFD8
  6934                           
  6935 ;; *************** function _Set_NS *****************
  6936 ;; Defined at:
  6937 ;;		line 207 in file "lab7p1.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  color           1    wreg     unsigned char 
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;  color           1    0[COMRAM] unsigned char 
  6942 ;; Return value:  Size  Location     Type
  6943 ;;		None               void
  6944 ;; Registers used:
  6945 ;;		wreg, status,2, status,0
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6952 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;Total ram usage:        1 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; This function calls:
  6958 ;;		Nothing
  6959 ;; This function is called by:
  6960 ;;		_Day_Mode
  6961 ;;		_Night_Mode
  6962 ;; This function uses a non-reentrant model
  6963 ;;
  6964                           
  6965                           	psect	text33
  6966  00E120                     __ptext33:
  6967                           	opt stack 0
  6968  00E120                     _Set_NS:
  6969                           	opt stack 29
  6970                           
  6971                           ;incstack = 0
  6972                           ;Set_NS@color stored from wreg
  6973  00E120  6E01               	movwf	Set_NS@color,c
  6974                           
  6975                           ;lab7p1.c: 209: switch (color)
  6976  00E122  D00A               	goto	l1740
  6977  00E124                     l146:
  6978  00E124  9A80               	bcf	3968,5,c	;volatile
  6979  00E126  D001               	goto	L10
  6980  00E128                     l148:
  6981  00E128  8A80               	bsf	3968,5,c	;volatile
  6982  00E12A                     L10:
  6983  00E12A  9082               	bcf	3970,0,c	;volatile
  6984  00E12C  D013               	goto	l151
  6985  00E12E                     l149:
  6986  00E12E  9A80               	bcf	3968,5,c	;volatile
  6987  00E130  D001               	goto	L11
  6988  00E132                     l150:
  6989  00E132  8A80               	bsf	3968,5,c	;volatile
  6990  00E134                     L11:
  6991  00E134  8082               	bsf	3970,0,c	;volatile
  6992                           
  6993                           ;lab7p1.c: 215: }
  6994  00E136  D00E               	goto	l151
  6995  00E138                     l1740:
  6996  00E138  5001               	movf	Set_NS@color,w,c
  6997                           
  6998                           ; Switch size 1, requested type "space"
  6999                           ; Number of cases is 4, Range of values is 0 to 3
  7000                           ; switch strategies available:
  7001                           ; Name         Instructions Cycles
  7002                           ; simple_byte           13     7 (average)
  7003                           ;	Chosen strategy is simple_byte
  7004  00E13A  0A00               	xorlw	0	; case 0
  7005  00E13C  B4D8               	btfsc	status,2,c
  7006  00E13E  D7F2               	goto	l146
  7007  00E140  0A01               	xorlw	1	; case 1
  7008  00E142  B4D8               	btfsc	status,2,c
  7009  00E144  D7F1               	goto	l148
  7010  00E146  0A03               	xorlw	3	; case 2
  7011  00E148  B4D8               	btfsc	status,2,c
  7012  00E14A  D7F1               	goto	l149
  7013  00E14C  0A01               	xorlw	1	; case 3
  7014  00E14E  B4D8               	btfsc	status,2,c
  7015  00E150  D7F0               	goto	l150
  7016  00E152  D000               	goto	l151
  7017  00E154                     l151:
  7018  00E154  0012               	return		;funcret
  7019  00E156                     __end_of_Set_NS:
  7020                           	opt stack 0
  7021                           tblptru	equ	0xFF8
  7022                           tblptrh	equ	0xFF7
  7023                           tblptrl	equ	0xFF6
  7024                           tablat	equ	0xFF5
  7025                           prodh	equ	0xFF4
  7026                           prodl	equ	0xFF3
  7027                           postinc0	equ	0xFEE
  7028                           wreg	equ	0xFE8
  7029                           postdec1	equ	0xFE5
  7030                           fsr1l	equ	0xFE1
  7031                           postinc2	equ	0xFDE
  7032                           postdec2	equ	0xFDD
  7033                           fsr2h	equ	0xFDA
  7034                           fsr2l	equ	0xFD9
  7035                           status	equ	0xFD8
  7036                           
  7037 ;; *************** function _Set_EWLT *****************
  7038 ;; Defined at:
  7039 ;;		line 240 in file "lab7p1.c"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;  color           1    wreg     unsigned char 
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;  color           1    0[COMRAM] unsigned char 
  7044 ;; Return value:  Size  Location     Type
  7045 ;;		None               void
  7046 ;; Registers used:
  7047 ;;		wreg, status,2, status,0
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7056 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7057 ;;Total ram usage:        1 bytes
  7058 ;; Hardware stack levels used:    1
  7059 ;; This function calls:
  7060 ;;		Nothing
  7061 ;; This function is called by:
  7062 ;;		_Day_Mode
  7063 ;;		_Night_Mode
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           	psect	text34
  7068  00E0EA                     __ptext34:
  7069                           	opt stack 0
  7070  00E0EA                     _Set_EWLT:
  7071                           	opt stack 29
  7072                           
  7073                           ;incstack = 0
  7074                           ;Set_EWLT@color stored from wreg
  7075  00E0EA  6E01               	movwf	Set_EWLT@color,c
  7076                           
  7077                           ;lab7p1.c: 242: switch (color)
  7078  00E0EC  D00A               	goto	l1758
  7079  00E0EE                     l173:
  7080  00E0EE  9284               	bcf	3972,1,c	;volatile
  7081  00E0F0  D001               	goto	L12
  7082  00E0F2                     l175:
  7083  00E0F2  8284               	bsf	3972,1,c	;volatile
  7084  00E0F4                     L12:
  7085  00E0F4  9484               	bcf	3972,2,c	;volatile
  7086  00E0F6  D013               	goto	l178
  7087  00E0F8                     l176:
  7088  00E0F8  9284               	bcf	3972,1,c	;volatile
  7089  00E0FA  D001               	goto	L13
  7090  00E0FC                     l177:
  7091  00E0FC  8284               	bsf	3972,1,c	;volatile
  7092  00E0FE                     L13:
  7093  00E0FE  8484               	bsf	3972,2,c	;volatile
  7094                           
  7095                           ;lab7p1.c: 248: }
  7096  00E100  D00E               	goto	l178
  7097  00E102                     l1758:
  7098  00E102  5001               	movf	Set_EWLT@color,w,c
  7099                           
  7100                           ; Switch size 1, requested type "space"
  7101                           ; Number of cases is 4, Range of values is 0 to 3
  7102                           ; switch strategies available:
  7103                           ; Name         Instructions Cycles
  7104                           ; simple_byte           13     7 (average)
  7105                           ;	Chosen strategy is simple_byte
  7106  00E104  0A00               	xorlw	0	; case 0
  7107  00E106  B4D8               	btfsc	status,2,c
  7108  00E108  D7F2               	goto	l173
  7109  00E10A  0A01               	xorlw	1	; case 1
  7110  00E10C  B4D8               	btfsc	status,2,c
  7111  00E10E  D7F1               	goto	l175
  7112  00E110  0A03               	xorlw	3	; case 2
  7113  00E112  B4D8               	btfsc	status,2,c
  7114  00E114  D7F1               	goto	l176
  7115  00E116  0A01               	xorlw	1	; case 3
  7116  00E118  B4D8               	btfsc	status,2,c
  7117  00E11A  D7F0               	goto	l177
  7118  00E11C  D000               	goto	l178
  7119  00E11E                     l178:
  7120  00E11E  0012               	return		;funcret
  7121  00E120                     __end_of_Set_EWLT:
  7122                           	opt stack 0
  7123                           tblptru	equ	0xFF8
  7124                           tblptrh	equ	0xFF7
  7125                           tblptrl	equ	0xFF6
  7126                           tablat	equ	0xFF5
  7127                           prodh	equ	0xFF4
  7128                           prodl	equ	0xFF3
  7129                           postinc0	equ	0xFEE
  7130                           wreg	equ	0xFE8
  7131                           postdec1	equ	0xFE5
  7132                           fsr1l	equ	0xFE1
  7133                           postinc2	equ	0xFDE
  7134                           postdec2	equ	0xFDD
  7135                           fsr2h	equ	0xFDA
  7136                           fsr2l	equ	0xFD9
  7137                           status	equ	0xFD8
  7138                           
  7139 ;; *************** function _Set_EW *****************
  7140 ;; Defined at:
  7141 ;;		line 229 in file "lab7p1.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  color           1    wreg     unsigned char 
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;  color           1    0[COMRAM] unsigned char 
  7146 ;; Return value:  Size  Location     Type
  7147 ;;		None               void
  7148 ;; Registers used:
  7149 ;;		wreg, status,2, status,0
  7150 ;; Tracked objects:
  7151 ;;		On entry : 0/0
  7152 ;;		On exit  : 0/0
  7153 ;;		Unchanged: 0/0
  7154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7156 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7158 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7159 ;;Total ram usage:        1 bytes
  7160 ;; Hardware stack levels used:    1
  7161 ;; This function calls:
  7162 ;;		Nothing
  7163 ;; This function is called by:
  7164 ;;		_Day_Mode
  7165 ;;		_Night_Mode
  7166 ;; This function uses a non-reentrant model
  7167 ;;
  7168                           
  7169                           	psect	text35
  7170  00E0B4                     __ptext35:
  7171                           	opt stack 0
  7172  00E0B4                     _Set_EW:
  7173                           	opt stack 29
  7174                           
  7175                           ;incstack = 0
  7176                           ;Set_EW@color stored from wreg
  7177  00E0B4  6E01               	movwf	Set_EW@color,c
  7178                           
  7179                           ;lab7p1.c: 231: switch (color)
  7180  00E0B6  D00A               	goto	l1752
  7181  00E0B8                     l164:
  7182  00E0B8  9882               	bcf	3970,4,c	;volatile
  7183  00E0BA  D001               	goto	L14
  7184  00E0BC                     l166:
  7185  00E0BC  8882               	bsf	3970,4,c	;volatile
  7186  00E0BE                     L14:
  7187  00E0BE  9A82               	bcf	3970,5,c	;volatile
  7188  00E0C0  D013               	goto	l169
  7189  00E0C2                     l167:
  7190  00E0C2  9882               	bcf	3970,4,c	;volatile
  7191  00E0C4  D001               	goto	L15
  7192  00E0C6                     l168:
  7193  00E0C6  8882               	bsf	3970,4,c	;volatile
  7194  00E0C8                     L15:
  7195  00E0C8  8A82               	bsf	3970,5,c	;volatile
  7196                           
  7197                           ;lab7p1.c: 237: }
  7198  00E0CA  D00E               	goto	l169
  7199  00E0CC                     l1752:
  7200  00E0CC  5001               	movf	Set_EW@color,w,c
  7201                           
  7202                           ; Switch size 1, requested type "space"
  7203                           ; Number of cases is 4, Range of values is 0 to 3
  7204                           ; switch strategies available:
  7205                           ; Name         Instructions Cycles
  7206                           ; simple_byte           13     7 (average)
  7207                           ;	Chosen strategy is simple_byte
  7208  00E0CE  0A00               	xorlw	0	; case 0
  7209  00E0D0  B4D8               	btfsc	status,2,c
  7210  00E0D2  D7F2               	goto	l164
  7211  00E0D4  0A01               	xorlw	1	; case 1
  7212  00E0D6  B4D8               	btfsc	status,2,c
  7213  00E0D8  D7F1               	goto	l166
  7214  00E0DA  0A03               	xorlw	3	; case 2
  7215  00E0DC  B4D8               	btfsc	status,2,c
  7216  00E0DE  D7F1               	goto	l167
  7217  00E0E0  0A01               	xorlw	1	; case 3
  7218  00E0E2  B4D8               	btfsc	status,2,c
  7219  00E0E4  D7F0               	goto	l168
  7220  00E0E6  D000               	goto	l169
  7221  00E0E8                     l169:
  7222  00E0E8  0012               	return		;funcret
  7223  00E0EA                     __end_of_Set_EW:
  7224                           	opt stack 0
  7225                           tblptru	equ	0xFF8
  7226                           tblptrh	equ	0xFF7
  7227                           tblptrl	equ	0xFF6
  7228                           tablat	equ	0xFF5
  7229                           prodh	equ	0xFF4
  7230                           prodl	equ	0xFF3
  7231                           postinc0	equ	0xFEE
  7232                           wreg	equ	0xFE8
  7233                           postdec1	equ	0xFE5
  7234                           fsr1l	equ	0xFE1
  7235                           postinc2	equ	0xFDE
  7236                           postdec2	equ	0xFDD
  7237                           fsr2h	equ	0xFDA
  7238                           fsr2l	equ	0xFD9
  7239                           status	equ	0xFD8
  7240                           
  7241 ;; *************** function _PED_Control *****************
  7242 ;; Defined at:
  7243 ;;		line 251 in file "lab7p1.c"
  7244 ;; Parameters:    Size  Location     Type
  7245 ;;  direction       1    wreg     unsigned char 
  7246 ;;  num_sec         1    0[COMRAM] unsigned char 
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;  direction       1    1[COMRAM] unsigned char 
  7249 ;;  j               2    4[COMRAM] int 
  7250 ;;  i               2    2[COMRAM] int 
  7251 ;; Return value:  Size  Location     Type
  7252 ;;		None               void
  7253 ;; Registers used:
  7254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7255 ;; Tracked objects:
  7256 ;;		On entry : 0/0
  7257 ;;		On exit  : 0/0
  7258 ;;		Unchanged: 0/0
  7259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7260 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7261 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7263 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7264 ;;Total ram usage:        6 bytes
  7265 ;; Hardware stack levels used:    1
  7266 ;; Hardware stack levels required when called:    2
  7267 ;; This function calls:
  7268 ;;		_Wait_One_Second_With_Beep
  7269 ;; This function is called by:
  7270 ;;		_Day_Mode
  7271 ;; This function uses a non-reentrant model
  7272 ;;
  7273                           
  7274                           	psect	text36
  7275  00E54A                     __ptext36:
  7276                           	opt stack 0
  7277  00E54A                     _PED_Control:
  7278                           	opt stack 27
  7279                           
  7280                           ;incstack = 0
  7281                           ;PED_Control@direction stored from wreg
  7282  00E54A  6E02               	movwf	PED_Control@direction,c
  7283                           
  7284                           ;lab7p1.c: 255: if (direction == 0)
  7285  00E54C  5002               	movf	PED_Control@direction,w,c
  7286  00E54E  A4D8               	btfss	status,2,c
  7287  00E550  D021               	goto	l2800
  7288                           
  7289                           ;lab7p1.c: 256: {
  7290                           ;lab7p1.c: 259: PORTB = 0xFF;
  7291  00E552  6881               	setf	3969,c	;volatile
  7292                           
  7293                           ;lab7p1.c: 260: for (int i=num_sec-1; i>0; i--)
  7294  00E554  0EFF               	movlw	255
  7295  00E556  2401               	addwf	PED_Control@num_sec,w,c
  7296  00E558  6E03               	movwf	PED_Control@i,c
  7297  00E55A  6A04               	clrf	PED_Control@i+1,c
  7298  00E55C  0EFF               	movlw	255
  7299  00E55E  2204               	addwfc	PED_Control@i+1,f,c
  7300  00E560  BE04               	btfsc	PED_Control@i+1,7,c
  7301  00E562  D016               	goto	l183
  7302  00E564  5004               	movf	PED_Control@i+1,w,c
  7303  00E566  E105               	bnz	l2792
  7304  00E568  0403               	decf	PED_Control@i,w,c
  7305  00E56A  A0D8               	btfss	status,0,c
  7306  00E56C  D011               	goto	l183
  7307  00E56E  D001               	goto	l2792
  7308  00E570  D00F               	goto	l183
  7309  00E572                     l2792:
  7310                           
  7311                           ;lab7p1.c: 261: {
  7312                           ;lab7p1.c: 263: PORTD = LED_7seg[i];
  7313  00E572  0E6B               	movlw	low _LED_7seg
  7314  00E574  2403               	addwf	PED_Control@i,w,c
  7315  00E576  6ED9               	movwf	fsr2l,c
  7316  00E578  0E00               	movlw	high _LED_7seg
  7317  00E57A  2004               	addwfc	PED_Control@i+1,w,c
  7318  00E57C  6EDA               	movwf	fsr2h,c
  7319  00E57E  50DF               	movf	indf2,w,c
  7320  00E580  6E83               	movwf	3971,c	;volatile
  7321                           
  7322                           ;lab7p1.c: 264: Wait_One_Second_With_Beep();
  7323  00E582  ECC9  F06F         	call	_Wait_One_Second_With_Beep	;wreg free
  7324  00E586  0603               	decf	PED_Control@i,f,c
  7325  00E588  A0D8               	btfss	status,0,c
  7326  00E58A  0604               	decf	PED_Control@i+1,f,c
  7327  00E58C  D7E9               	goto	L16
  7328  00E58E  D7F1               	goto	l2792
  7329  00E590                     l183:
  7330                           
  7331                           ;lab7p1.c: 265: }
  7332                           ;lab7p1.c: 266: PORTD = 0xFF;
  7333  00E590  6883               	setf	3971,c	;volatile
  7334  00E592  D000               	goto	l2800
  7335  00E594                     l2800:
  7336                           
  7337                           ;lab7p1.c: 267: }
  7338                           ;lab7p1.c: 268: if (direction == 1)
  7339  00E594  0402               	decf	PED_Control@direction,w,c
  7340  00E596  A4D8               	btfss	status,2,c
  7341  00E598  D021               	goto	l2816
  7342                           
  7343                           ;lab7p1.c: 269: {
  7344                           ;lab7p1.c: 272: PORTD = 0xFF;
  7345  00E59A  6883               	setf	3971,c	;volatile
  7346                           
  7347                           ;lab7p1.c: 273: for (int j=num_sec-1; j>0; j--)
  7348  00E59C  0EFF               	movlw	255
  7349  00E59E  2401               	addwf	PED_Control@num_sec,w,c
  7350  00E5A0  6E05               	movwf	PED_Control@j,c
  7351  00E5A2  6A06               	clrf	PED_Control@j+1,c
  7352  00E5A4  0EFF               	movlw	255
  7353  00E5A6  2206               	addwfc	PED_Control@j+1,f,c
  7354  00E5A8  BE06               	btfsc	PED_Control@j+1,7,c
  7355  00E5AA  D016               	goto	l186
  7356  00E5AC  5006               	movf	PED_Control@j+1,w,c
  7357  00E5AE  E105               	bnz	l2808
  7358  00E5B0  0405               	decf	PED_Control@j,w,c
  7359  00E5B2  A0D8               	btfss	status,0,c
  7360  00E5B4  D011               	goto	l186
  7361  00E5B6  D001               	goto	l2808
  7362  00E5B8  D00F               	goto	l186
  7363  00E5BA                     l2808:
  7364                           
  7365                           ;lab7p1.c: 274: {
  7366                           ;lab7p1.c: 276: PORTB = LED_7seg[j];
  7367  00E5BA  0E6B               	movlw	low _LED_7seg
  7368  00E5BC  2405               	addwf	PED_Control@j,w,c
  7369  00E5BE  6ED9               	movwf	fsr2l,c
  7370  00E5C0  0E00               	movlw	high _LED_7seg
  7371  00E5C2  2006               	addwfc	PED_Control@j+1,w,c
  7372  00E5C4  6EDA               	movwf	fsr2h,c
  7373  00E5C6  50DF               	movf	indf2,w,c
  7374  00E5C8  6E81               	movwf	3969,c	;volatile
  7375                           
  7376                           ;lab7p1.c: 277: Wait_One_Second_With_Beep();
  7377  00E5CA  ECC9  F06F         	call	_Wait_One_Second_With_Beep	;wreg free
  7378  00E5CE  0605               	decf	PED_Control@j,f,c
  7379  00E5D0  A0D8               	btfss	status,0,c
  7380  00E5D2  0606               	decf	PED_Control@j+1,f,c
  7381  00E5D4  D7E9               	goto	L17
  7382  00E5D6  D7F1               	goto	l2808
  7383  00E5D8                     l186:
  7384                           
  7385                           ;lab7p1.c: 278: }
  7386                           ;lab7p1.c: 279: PORTB = 0xFF;
  7387  00E5D8  6881               	setf	3969,c	;volatile
  7388  00E5DA  D000               	goto	l2816
  7389  00E5DC                     l2816:
  7390                           
  7391                           ;lab7p1.c: 280: }
  7392                           ;lab7p1.c: 282: Wait_One_Second_With_Beep();
  7393  00E5DC  ECC9  F06F         	call	_Wait_One_Second_With_Beep	;wreg free
  7394  00E5E0  0012               	return		;funcret
  7395  00E5E2                     __end_of_PED_Control:
  7396                           	opt stack 0
  7397                           tblptru	equ	0xFF8
  7398                           tblptrh	equ	0xFF7
  7399                           tblptrl	equ	0xFF6
  7400                           tablat	equ	0xFF5
  7401                           prodh	equ	0xFF4
  7402                           prodl	equ	0xFF3
  7403                           postinc0	equ	0xFEE
  7404                           wreg	equ	0xFE8
  7405                           postdec1	equ	0xFE5
  7406                           fsr1l	equ	0xFE1
  7407                           indf2	equ	0xFDF
  7408                           postinc2	equ	0xFDE
  7409                           postdec2	equ	0xFDD
  7410                           fsr2h	equ	0xFDA
  7411                           fsr2l	equ	0xFD9
  7412                           status	equ	0xFD8
  7413                           
  7414 ;; *************** function _Wait_One_Second_With_Beep *****************
  7415 ;; Defined at:
  7416 ;;		line 285 in file "lab7p1.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;		None
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;		None
  7421 ;; Return value:  Size  Location     Type
  7422 ;;		None               void
  7423 ;; Registers used:
  7424 ;;		wreg, status,2, cstack
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7434 ;;Total ram usage:        0 bytes
  7435 ;; Hardware stack levels used:    1
  7436 ;; Hardware stack levels required when called:    1
  7437 ;; This function calls:
  7438 ;;		_Wait_Half_Second
  7439 ;;		_activate_buzzer
  7440 ;;		_deactivate_buzzer
  7441 ;; This function is called by:
  7442 ;;		_PED_Control
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446                           	psect	text37
  7447  00DF92                     __ptext37:
  7448                           	opt stack 0
  7449  00DF92                     _Wait_One_Second_With_Beep:
  7450                           	opt stack 27
  7451                           
  7452                           ;lab7p1.c: 287: PORTDbits.RD7 = 1;
  7453                           
  7454                           ;incstack = 0
  7455  00DF92  8E83               	bsf	3971,7,c	;volatile
  7456                           
  7457                           ;lab7p1.c: 288: activate_buzzer();
  7458  00DF94  ECB6  F06F         	call	_activate_buzzer	;wreg free
  7459                           
  7460                           ;lab7p1.c: 289: Wait_Half_Second();
  7461  00DF98  ECDF  F06F         	call	_Wait_Half_Second	;wreg free
  7462                           
  7463                           ;lab7p1.c: 290: PORTDbits.RD7 = 0;
  7464  00DF9C  9E83               	bcf	3971,7,c	;volatile
  7465                           
  7466                           ;lab7p1.c: 291: deactivate_buzzer();
  7467  00DF9E  EC92  F06F         	call	_deactivate_buzzer	;wreg free
  7468                           
  7469                           ;lab7p1.c: 292: Wait_Half_Second();
  7470  00DFA2  ECDF  F06F         	call	_Wait_Half_Second	;wreg free
  7471  00DFA6  0012               	return		;funcret
  7472  00DFA8                     __end_of_Wait_One_Second_With_Beep:
  7473                           	opt stack 0
  7474                           tblptru	equ	0xFF8
  7475                           tblptrh	equ	0xFF7
  7476                           tblptrl	equ	0xFF6
  7477                           tablat	equ	0xFF5
  7478                           prodh	equ	0xFF4
  7479                           prodl	equ	0xFF3
  7480                           postinc0	equ	0xFEE
  7481                           wreg	equ	0xFE8
  7482                           postdec1	equ	0xFE5
  7483                           fsr1l	equ	0xFE1
  7484                           indf2	equ	0xFDF
  7485                           postinc2	equ	0xFDE
  7486                           postdec2	equ	0xFDD
  7487                           fsr2h	equ	0xFDA
  7488                           fsr2l	equ	0xFD9
  7489                           status	equ	0xFD8
  7490                           
  7491 ;; *************** function _deactivate_buzzer *****************
  7492 ;; Defined at:
  7493 ;;		line 174 in file "lab7p1.c"
  7494 ;; Parameters:    Size  Location     Type
  7495 ;;		None
  7496 ;; Auto vars:     Size  Location     Type
  7497 ;;		None
  7498 ;; Return value:  Size  Location     Type
  7499 ;;		None               void
  7500 ;; Registers used:
  7501 ;;		wreg, status,2
  7502 ;; Tracked objects:
  7503 ;;		On entry : 0/0
  7504 ;;		On exit  : 0/0
  7505 ;;		Unchanged: 0/0
  7506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7510 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7511 ;;Total ram usage:        0 bytes
  7512 ;; Hardware stack levels used:    1
  7513 ;; This function calls:
  7514 ;;		Nothing
  7515 ;; This function is called by:
  7516 ;;		_Wait_One_Second_With_Beep
  7517 ;;		_check_buzzer
  7518 ;; This function uses a non-reentrant model
  7519 ;;
  7520                           
  7521                           	psect	text38
  7522  00DF24                     __ptext38:
  7523                           	opt stack 0
  7524  00DF24                     _deactivate_buzzer:
  7525                           	opt stack 27
  7526                           
  7527                           ;lab7p1.c: 176: CCP2CON = 0x0;
  7528                           
  7529                           ;incstack = 0
  7530  00DF24  0E00               	movlw	0
  7531  00DF26  6EBA               	movwf	4026,c	;volatile
  7532                           
  7533                           ;lab7p1.c: 177: PORTCbits.RC1 = 0;
  7534  00DF28  9282               	bcf	3970,1,c	;volatile
  7535  00DF2A  0012               	return		;funcret
  7536  00DF2C                     __end_of_deactivate_buzzer:
  7537                           	opt stack 0
  7538                           tblptru	equ	0xFF8
  7539                           tblptrh	equ	0xFF7
  7540                           tblptrl	equ	0xFF6
  7541                           tablat	equ	0xFF5
  7542                           prodh	equ	0xFF4
  7543                           prodl	equ	0xFF3
  7544                           postinc0	equ	0xFEE
  7545                           wreg	equ	0xFE8
  7546                           postdec1	equ	0xFE5
  7547                           fsr1l	equ	0xFE1
  7548                           indf2	equ	0xFDF
  7549                           postinc2	equ	0xFDE
  7550                           postdec2	equ	0xFDD
  7551                           fsr2h	equ	0xFDA
  7552                           fsr2l	equ	0xFD9
  7553                           status	equ	0xFD8
  7554                           
  7555 ;; *************** function _activate_buzzer *****************
  7556 ;; Defined at:
  7557 ;;		line 166 in file "lab7p1.c"
  7558 ;; Parameters:    Size  Location     Type
  7559 ;;		None
  7560 ;; Auto vars:     Size  Location     Type
  7561 ;;		None
  7562 ;; Return value:  Size  Location     Type
  7563 ;;		None               void
  7564 ;; Registers used:
  7565 ;;		wreg, status,2
  7566 ;; Tracked objects:
  7567 ;;		On entry : 0/0
  7568 ;;		On exit  : 0/0
  7569 ;;		Unchanged: 0/0
  7570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7575 ;;Total ram usage:        0 bytes
  7576 ;; Hardware stack levels used:    1
  7577 ;; This function calls:
  7578 ;;		Nothing
  7579 ;; This function is called by:
  7580 ;;		_Wait_One_Second_With_Beep
  7581 ;;		_check_buzzer
  7582 ;; This function uses a non-reentrant model
  7583 ;;
  7584                           
  7585                           	psect	text39
  7586  00DF6C                     __ptext39:
  7587                           	opt stack 0
  7588  00DF6C                     _activate_buzzer:
  7589                           	opt stack 27
  7590                           
  7591                           ;lab7p1.c: 168: PR2 = 0b1111101;
  7592                           
  7593                           ;incstack = 0
  7594  00DF6C  0E7D               	movlw	125
  7595  00DF6E  6ECB               	movwf	4043,c	;volatile
  7596                           
  7597                           ;lab7p1.c: 169: T2CON = 0b00000101;
  7598  00DF70  0E05               	movlw	5
  7599  00DF72  6ECA               	movwf	4042,c	;volatile
  7600                           
  7601                           ;lab7p1.c: 170: CCPR2L = 0b01001010;
  7602  00DF74  0E4A               	movlw	74
  7603  00DF76  6EBB               	movwf	4027,c	;volatile
  7604                           
  7605                           ;lab7p1.c: 171: CCP2CON = 0b00111100;
  7606  00DF78  0E3C               	movlw	60
  7607  00DF7A  6EBA               	movwf	4026,c	;volatile
  7608  00DF7C  0012               	return		;funcret
  7609  00DF7E                     __end_of_activate_buzzer:
  7610                           	opt stack 0
  7611                           tblptru	equ	0xFF8
  7612                           tblptrh	equ	0xFF7
  7613                           tblptrl	equ	0xFF6
  7614                           tablat	equ	0xFF5
  7615                           prodh	equ	0xFF4
  7616                           prodl	equ	0xFF3
  7617                           postinc0	equ	0xFEE
  7618                           wreg	equ	0xFE8
  7619                           postdec1	equ	0xFE5
  7620                           fsr1l	equ	0xFE1
  7621                           indf2	equ	0xFDF
  7622                           postinc2	equ	0xFDE
  7623                           postdec2	equ	0xFDD
  7624                           fsr2h	equ	0xFDA
  7625                           fsr2l	equ	0xFD9
  7626                           status	equ	0xFD8
  7627                           
  7628 ;; *************** function _Wait_Half_Second *****************
  7629 ;; Defined at:
  7630 ;;		line 187 in file "lab7p1.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;		None
  7633 ;; Auto vars:     Size  Location     Type
  7634 ;;		None
  7635 ;; Return value:  Size  Location     Type
  7636 ;;		None               void
  7637 ;; Registers used:
  7638 ;;		wreg, status,2
  7639 ;; Tracked objects:
  7640 ;;		On entry : 0/0
  7641 ;;		On exit  : 0/0
  7642 ;;		Unchanged: 0/0
  7643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7644 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7645 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7647 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7648 ;;Total ram usage:        0 bytes
  7649 ;; Hardware stack levels used:    1
  7650 ;; This function calls:
  7651 ;;		Nothing
  7652 ;; This function is called by:
  7653 ;;		_Wait_One_Second
  7654 ;;		_Wait_One_Second_With_Beep
  7655 ;; This function uses a non-reentrant model
  7656 ;;
  7657                           
  7658                           	psect	text40
  7659  00DFBE                     __ptext40:
  7660                           	opt stack 0
  7661  00DFBE                     _Wait_Half_Second:
  7662                           	opt stack 27
  7663                           
  7664                           ;lab7p1.c: 189: T0CON = 0x03;
  7665                           
  7666                           ;incstack = 0
  7667  00DFBE  0E03               	movlw	3
  7668  00DFC0  6ED5               	movwf	4053,c	;volatile
  7669                           
  7670                           ;lab7p1.c: 190: TMR0L = 0xDC;
  7671  00DFC2  0EDC               	movlw	220
  7672  00DFC4  6ED6               	movwf	4054,c	;volatile
  7673                           
  7674                           ;lab7p1.c: 191: TMR0H = 0x0B;
  7675  00DFC6  0E0B               	movlw	11
  7676  00DFC8  6ED7               	movwf	4055,c	;volatile
  7677                           
  7678                           ;lab7p1.c: 192: INTCONbits.TMR0IF = 0;
  7679  00DFCA  94F2               	bcf	intcon,2,c	;volatile
  7680                           
  7681                           ;lab7p1.c: 193: T0CONbits.TMR0ON = 1;
  7682  00DFCC  8ED5               	bsf	4053,7,c	;volatile
  7683                           
  7684                           ;lab7p1.c: 194: while (INTCONbits.TMR0IF == 0);
  7685  00DFCE  D000               	goto	l133
  7686  00DFD0                     l133:
  7687  00DFD0  A4F2               	btfss	intcon,2,c	;volatile
  7688  00DFD2  D7FE               	goto	l133
  7689                           
  7690                           ;lab7p1.c: 195: T0CONbits.TMR0ON = 0;
  7691  00DFD4  9ED5               	bcf	4053,7,c	;volatile
  7692  00DFD6  0012               	return		;funcret
  7693  00DFD8                     __end_of_Wait_Half_Second:
  7694                           	opt stack 0
  7695                           tblptru	equ	0xFF8
  7696                           tblptrh	equ	0xFF7
  7697                           tblptrl	equ	0xFF6
  7698                           tablat	equ	0xFF5
  7699                           prodh	equ	0xFF4
  7700                           prodl	equ	0xFF3
  7701                           intcon	equ	0xFF2
  7702                           postinc0	equ	0xFEE
  7703                           wreg	equ	0xFE8
  7704                           postdec1	equ	0xFE5
  7705                           fsr1l	equ	0xFE1
  7706                           indf2	equ	0xFDF
  7707                           postinc2	equ	0xFDE
  7708                           postdec2	equ	0xFDD
  7709                           fsr2h	equ	0xFDA
  7710                           fsr2l	equ	0xFD9
  7711                           status	equ	0xFD8
  7712                           tblptru	equ	0xFF8
  7713                           tblptrh	equ	0xFF7
  7714                           tblptrl	equ	0xFF6
  7715                           tablat	equ	0xFF5
  7716                           prodh	equ	0xFF4
  7717                           prodl	equ	0xFF3
  7718                           intcon	equ	0xFF2
  7719                           postinc0	equ	0xFEE
  7720                           wreg	equ	0xFE8
  7721                           postdec1	equ	0xFE5
  7722                           fsr1l	equ	0xFE1
  7723                           indf2	equ	0xFDF
  7724                           postinc2	equ	0xFDE
  7725                           postdec2	equ	0xFDD
  7726                           fsr2h	equ	0xFDA
  7727                           fsr2l	equ	0xFD9
  7728                           status	equ	0xFD8
  7729                           
  7730                           	psect	rparam
  7731  0000                     tblptru	equ	0xFF8
  7732                           tblptrh	equ	0xFF7
  7733                           tblptrl	equ	0xFF6
  7734                           tablat	equ	0xFF5
  7735                           prodh	equ	0xFF4
  7736                           prodl	equ	0xFF3
  7737                           intcon	equ	0xFF2
  7738                           postinc0	equ	0xFEE
  7739                           wreg	equ	0xFE8
  7740                           postdec1	equ	0xFE5
  7741                           fsr1l	equ	0xFE1
  7742                           indf2	equ	0xFDF
  7743                           postinc2	equ	0xFDE
  7744                           postdec2	equ	0xFDD
  7745                           fsr2h	equ	0xFDA
  7746                           fsr2l	equ	0xFD9
  7747                           status	equ	0xFD8


Data Sizes:
    Strings     438
    Constant    118
    Data        10
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    106     116
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 32
		 -> STR_35(CODE[12]), STR_34(CODE[12]), STR_33(CODE[26]), STR_32(CODE[12]), 
		 -> STR_31(CODE[12]), STR_30(CODE[11]), STR_29(CODE[11]), STR_28(CODE[11]), 
		 -> STR_27(CODE[25]), STR_26(CODE[11]), STR_25(CODE[11]), STR_24(CODE[11]), 
		 -> STR_23(CODE[11]), STR_22(CODE[22]), STR_21(CODE[12]), STR_20(CODE[12]), 
		 -> STR_19(CODE[26]), STR_18(CODE[25]), STR_17(CODE[12]), STR_16(CODE[12]), 
		 -> STR_15(CODE[12]), STR_14(CODE[27]), STR_13(CODE[12]), STR_12(CODE[12]), 
		 -> STR_11(CODE[12]), STR_10(CODE[11]), STR_9(CODE[25]), STR_8(CODE[11]), 
		 -> STR_7(CODE[11]), STR_6(CODE[11]), STR_5(CODE[11]), STR_4(CODE[26]), 
		 -> STR_3(CODE[11]), STR_2(CODE[20]), STR_1(CODE[32]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_Day_Mode
    _main->_Night_Mode
    _init_UART->_OpenUSART
    ___lwtoft->___ftpack
    ___ftdiv->___ftmul
    _Night_Mode->_printf
    _Day_Mode->_printf
    _printf->___ftsub
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___wmul
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->_fround

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0  124190
                                             98 COMRAM     8     8      0
                           _Day_Mode
                           _Init_ADC
                          _Init_TRIS
                         _Night_Mode
                            ___ftdiv
                             ___ftge
                            ___ftmul
                           ___lwtoft
                       _get_full_ADC
                          _init_UART
                             _printf
                      _select_ADC_CH
 ---------------------------------------------------------------------------------
 (1) _select_ADC_CH                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    1821
                                              8 COMRAM     3     0      3
                           ___ftpack
                       _get_full_ADC (ARG)
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2212
                                             35 COMRAM    15     9      6
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) _Night_Mode                                           1     1      0   38369
                                             97 COMRAM     1     1      0
                             _Set_EW
                           _Set_EWLT
                             _Set_NS
                           _Set_NSLT
                     _Wait_N_Seconds
                             _printf
 ---------------------------------------------------------------------------------
 (1) _Init_TRIS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Day_Mode                                             1     1      0   38699
                                             97 COMRAM     1     1      0
                        _PED_Control
                             _Set_EW
                           _Set_EWLT
                             _Set_NS
                           _Set_NSLT
                     _Wait_N_Seconds
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   38279
                                             63 COMRAM    34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    8696
                                             35 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8498
                                             35 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3742
                                             20 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                           ___ftpack
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1250
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1360
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1868
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     477
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     374
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     411
                                             42 COMRAM    15    11      4
                            ___ftmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3131
                                             57 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    2878
                                             45 COMRAM    12     6      6
                           ___ftpack
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1746
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3      98
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     666
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) _Wait_N_Seconds                                       2     2      0      30
                                              0 COMRAM     2     2      0
                    _Wait_One_Second
 ---------------------------------------------------------------------------------
 (3) _Wait_One_Second                                      0     0      0       0
                   _Wait_Half_Second
 ---------------------------------------------------------------------------------
 (2) _Set_NSLT                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Set_NS                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Set_EWLT                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _Set_EW                                               1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _PED_Control                                          6     5      1     330
                                              0 COMRAM     6     5      1
          _Wait_One_Second_With_Beep
 ---------------------------------------------------------------------------------
 (3) _Wait_One_Second_With_Beep                            0     0      0       0
                   _Wait_Half_Second
                    _activate_buzzer
                  _deactivate_buzzer
 ---------------------------------------------------------------------------------
 (4) _deactivate_buzzer                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _activate_buzzer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _Wait_Half_Second                                     0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Day_Mode
     _PED_Control
       _Wait_One_Second_With_Beep
         _Wait_Half_Second
         _activate_buzzer
         _deactivate_buzzer
     _Set_EW
     _Set_EWLT
     _Set_NS
     _Set_NSLT
     _Wait_N_Seconds
       _Wait_One_Second
         _Wait_Half_Second
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _putch
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   _Init_ADC
   _Init_TRIS
   _Night_Mode
     _Set_EW
     _Set_EWLT
     _Set_NS
     _Set_NSLT
     _Wait_N_Seconds
       _Wait_One_Second
         _Wait_Half_Second
     _printf
       ___awdiv
         ___awmod (ARG)
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___ftge
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg
       ___ftsub
         ___ftadd
           ___ftpack
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___ftmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
             ___wmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lltoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _scale (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lldiv
       ___llmod
       ___lltoft
         ___ftpack
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
       __div_to_l_
       __tdiv_to_l_
       _fround
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _putch
       _scale
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
   ___ftdiv
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftpack (ARG)
   ___ftge
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftpack (ARG)
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___lwtoft
     ___ftpack
     _get_full_ADC (ARG)
   _get_full_ADC
   _init_UART
     _OpenUSART
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftpack
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
     ___ftsub
       ___ftadd
         ___ftpack
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___ftmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           ___wmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _select_ADC_CH

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     6A      74       1       91.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      74      34        0.0%
DATA                 0      0      74       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Oct 10 20:28:27 2024

         _Wait_One_Second_With_Beep DF92                                  l90 DF54  
                                l97 E76E                        ___awdiv@sign 000C  
               ___wmul@multiplicand 0011                        ___ftadd@exp1 0039  
                      ___ftadd@exp2 0038                        ___ftadd@sign 0037  
                               l110 E040                                 l113 E060  
                               l202 EDBC                                 l133 DFD0  
                               l150 E132                                 l222 F3CA  
                               l151 E154                                 l160 E18A  
                               l321 E088                                 l313 E2E6  
                               l146 E124                                 l314 E2E8  
                               l155 E15A                                 l315 E2F2  
                               l164 E0B8                                 l148 E128  
                               l316 E2F4                                 l173 E0EE  
                               l149 E12E                                 l157 E15E  
                               l229 F7AA                                 l309 E2CC  
                               l166 E0BC                                 l158 E164  
                               l318 E30E                                 l183 E590  
                               l167 E0C2                                 l175 E0F2  
                               l159 E168                                 l168 E0C6  
                               l176 E0F8                                 l169 E0E8  
                               l177 E0FC                                 l186 E5D8  
                               l178 E11E                                 l514 E548  
                               l274 FC2C                                 l701 EEEE  
                               l605 EB42                                 l285 FDD0  
                               l197 F186                                 l710 EF0A  
                               l614 EB32                                 l527 E390  
                               l721 E826                                 l810 E40C  
                               l820 E28E                                 l900 E03A  
                               l646 E6A6                                 l726 EC52  
                               l750 EA38                                 l718 E85A  
                               l735 EC42                                 l744 E4B2  
                               l760 E008                                 l840 E22E  
                               l728 EBBA                                 l657 E67E  
                               l729 EBE2                                 l690 EE2C  
                               l771 E940                                 l686 EE02  
                               l687 EF80                                 l767 E1CE  
                 ?_Wait_Half_Second 0001                                 _PR2 000FCB  
                      ___awmod@sign 0006                                 wreg 000FE8  
                ??_Wait_Half_Second 0001                        __CFG_LVP$OFF 000000  
                 ??_activate_buzzer 0001                        ___ftdiv@cntr 002D  
                      ___ftdiv@sign 0032                        __CFG_WDT$OFF 000000  
                              l2100 EE46                                l2110 EE6E  
                              l2120 EEAA                                l2050 E62E  
                              l2042 E5F2                                l2130 EEE2  
                              l2122 EEB2                                l2116 EE92  
                              l2220 E4FC                                l2212 E4DC  
                              l2300 F38A                                l2070 E698  
                              l2054 E646                                l2046 E602  
                              l2118 EE9E                                l2230 E522  
                              l2222 E504                                l2206 E4CA  
                              l2064 E686                                l2056 E666  
                              l2048 E60E                                l2136 EF28  
                              l2128 EED6                                l2320 F5A0  
                              l3008 E800                                l2058 E672  
                              l2146 EF5A                                l2410 EA5A  
                              l2218 E4F2                                l2234 E52E  
                              l2250 E326                                l2162 E988  
                              l2314 F4F8                                l3018 E834  
                              l2404 EA4A                                l2260 E34C  
                              l2180 E9CE                                l2156 E960  
                              l2332 F6D4                                l2324 F5B0  
                              l3028 E6B6                                l2094 EE3A  
                              l2238 E53E                                l2262 E354  
                              l2270 E376                                l2254 E334  
                              l2190 E9FC                                l2158 E97A  
                              l2088 EE10                                l2512 E8D4  
                              l2432 EAD0                                l2424 EA9E  
                              l2184 E9E4                                l2176 E9BC  
                              l2600 E2D0                                l1730 DFE0  
                              l2530 E92E                                l2522 E8FE  
                              l2450 EB0A                                l2354 EB80  
                              l2274 E386                                l2266 E36A  
                              l2258 E342                                l2194 EA12  
                              l2186 E9EA                                l2338 F786  
                              l1740 E138                                l2524 E90C  
                              l2516 E8E4                                l2540 E3B4  
                              l2444 EAF4                                l2436 EAE0  
                              l2348 EB62                                l2292 F2C6  
                              l2700 F9F2                                l1734 DFE8  
                              l2470 E450                                l2462 E1A4  
                              l2518 E8EA                                l2526 E916  
                              l2542 E3C2                                l2454 EB1E  
                              l2390 EC1A                                l2710 FA62  
                              l2800 E594                                l1752 E0CC  
                              l2480 E4AE                                l2552 E3FC  
                              l2544 E3CA                                l2560 E242  
                              l2456 EB2C                                l2448 EB04  
                              l2384 EC04                                l2376 EBF0  
                              l2720 FB08                                l2712 FA90  
                              l2704 FA16                                l2640 F7D2  
                              l2608 E2DE                                l1746 E16E  
                              l2474 E482                                l2562 E250  
                              l2394 EC2E                                l2706 FA20  
                              l2714 FA9E                                l2634 F7B6  
                              l2564 E258                                l2396 EC3C  
                              l2388 EC14                                l2732 FB48  
                              l2724 FB14                                l2660 F84E  
                              l2644 F7DA                                l1758 E102  
                              l2494 E87A                                l2574 E1D6  
                              l2750 FC16                                l2742 FBEE  
                              l2718 FB04                                l2646 F7FC  
                              l2638 F7C6                                l2808 E5BA  
                              l2816 E5DC                                l2568 E27E  
                              l2576 E1E4                                l2760 FC4C  
                              l2744 FBFA                                l2736 FB64  
                              l2728 FB44                                l2592 E2BC  
                              l2770 FD72                                l2754 FC32  
                              l2690 F97A                                l2772 FD7E  
                              l2764 FC9C                                l2748 FC08  
                              l2692 F9AA                                l2684 F944  
                              l2676 F8E0                                l2596 E2C4  
                              l2588 E2B2                                l2694 F9BA  
                              l2782 FDB4                                l2792 E572  
                              l2776 FD8C                                l2688 F96A  
                              l2848 EFE4                                l2952 ED20  
                              l2778 FD98                                l2890 F0DE  
                              l2878 F086                                l2982 E798  
                              l2984 E7B2                                l2988 E7C0  
                              STR_1 FE49                                STR_2 FF33  
                              STR_3 FFA7                                STR_4 FE84  
                              STR_5 FFBD                                STR_6 FFC8  
                              STR_7 FFD3                                STR_8 FFDE  
                              STR_9 FF04                                u3010 F142  
                              u2141 EB54                                u3030 ECDC  
                              u3110 E740                                u3120 E742  
                              u2161 EB72                                u3018 F144  
                              u3050 ED78                                u3061 E78A  
                              u3038 ECDE                                u2351 E86C  
                              u3081 E7A8                                u2370 E898  
                              u3058 ED7A                                u1901 E970  
                              u1671 EDCE                                u2375 E890  
                              u2800 FC26                                u2640 F886  
                              u1681 EDE2                        printf@tmpval 005A  
                              u2645 F87C                                u1881 E952  
                              u2940 EFCC                                u2960 F042  
                              u2980 F0BA                                u2948 EFCE  
                              u2990 F120                                u2968 F044  
                              u2988 F0BC                                u2998 F122  
                              _TRMT 007D61                                _main E6A8  
                      ___ftpack@arg 0001                        ___ftpack@exp 0004  
                    ??_get_full_ADC 0003                                fsr2h 000FDA  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                                prodh 000FF4  
                              prodl 000FF3                                start 0000  
                      ___ftmul@cntr 0022                        ___param_bank 000010  
                      ___ftmul@sign 0023                        ___fttol@exp1 0039  
                      ___fttol@lval 0035                               ?_main 0001  
                   __end_of___awdiv E54A                     __end_of___ftadd EF82  
                             STR_10 FFF4                               STR_11 FF47  
                             STR_20 FF9B                               STR_12 FF5F  
                             STR_13 FF6B                               STR_21 FF53  
                             STR_30 FFF4                               STR_22 FF1D  
                             STR_14 FE69                               STR_31 FF47  
                             STR_23 FFA7                               STR_15 FF77  
                             STR_32 FF5F                               STR_24 FFB2  
                             STR_16 FF83                               STR_25 FFBD  
                             STR_17 FF8F                               STR_33 FE9E  
                             STR_34 FF77                               STR_26 FFC8  
                             STR_18 FED2                               STR_35 FF83  
                             STR_27 FEEB                               STR_19 FEB8  
                             STR_28 FFDE                     __end_of___awmod E392  
                             STR_29 FFE9                     __end_of___ftdiv E85C  
                   __end_of___ftneg E016                     __end_of___lldiv E41E  
                   __end_of___ftmul EA3A                               _T0CON 000FD5  
                   ___awdiv@divisor 0009                     __end_of___llmod E2A0  
                   __end_of___ftsub E1D0                     __end_of___fttol E942  
                             _T2CON 000FCA                     ___awdiv@counter 000B  
                             _RCSTA 000FAB                               _TMR0H 000FD7  
                             _TMR0L 000FD6                               _SPBRG 000FAF  
                             _PORTB 000F81                               _PORTD 000F83  
                             _TRISA 000F92                               _TRISB 000F93  
                             _TRISC 000F94                               _TRISD 000F95  
                             _TRISE 000F96                               _TXREG 000FAD  
                             _TXSTA 000FAC                        ?_PED_Control 0001  
                      ___lltoft@exp 0011                     __end_of_dpowers FDFB  
                 ??_Wait_One_Second 0001                               _scale F3CC  
                     ___ftpack@sign 0005                               _putch DF50  
                    __CFG_BOREN$OFF 000000                               tablat 000FF5  
                             status 000FD8               __end_of_select_ADC_CH DF42  
                  __end_of_Day_Mode F188                      _Wait_N_Seconds DFD8  
                   __initialization E08A                        __end_of_main E77A  
                  __end_of_Init_ADC DF6C                          _Night_Mode EC54  
                  __end_of_Set_EWLT E120                    __end_of_Set_NSLT E18C  
                            ??_main 0063                       ___fttol@sign1 0034  
                     __activetblptr 000002               Wait_N_Seconds@seconds 0001  
              __size_of__tdiv_to_l_ 0110                              _ADCON0 000FC2  
                            _ADCON1 000FC1                              _ADCON2 000FC0  
                  ___llmod@dividend 0001                              ?_scale 0024  
                            _ADRESH 000FC4                              _ADRESL 000FC3  
                            _CCPR2L 000FBB                PED_Control@direction 0002  
                  ___awdiv@dividend 0007                              ?_putch 0001  
                  __end_of___ftpack E6A8                    __end_of___lltoft E230  
                  __end_of___lwtoft E03C                              _OSCCON 000FD3  
                __size_of_Init_TRIS 0016                              _SPBRGH 000FB0  
            __end_of_Wait_N_Seconds DFF2                              _Set_EW E0B4  
                            _Set_NS E120                    __end_of__powers_ FE49  
                __size_of_OpenUSART 0070                              ___ftge E41E  
                            ___wmul E062                           ??___awdiv 000B  
                         ??___ftadd 0034                           ??___awmod 0005  
                         ??___ftdiv 002A                           ??___ftneg 0004  
                         ??___lldiv 0009                           ??___ftmul 001B  
                         ??___llmod 0009                           ??___ftsub 0040  
                         ??___fttol 002F                              _fround F188  
                  ___awdiv@quotient 000D                     ___awmod@divisor 0003  
                   ___awmod@counter 0005                              _printf F7AC  
             ___ftmul@f3_as_product 001F                __end_of_get_full_ADC E062  
                      __pdataCOMRAM 006B  __size_of_Wait_One_Second_With_Beep 0016  
                       Set_EW@color 0001                        __mediumconst FDD2  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                              putch@c 0001  
                       Set_NS@color 0001                          __accesstop 0080  
           __end_of__initialization E0AA                          ___ftadd@f1 002E  
                        ___ftadd@f2 0031                          ___ftge@ff1 0001  
                        ___ftge@ff2 0004                     ?_Wait_N_Seconds 0001  
                     ___rparam_used 000001                          ___ftdiv@f1 0024  
                        ___ftdiv@f2 0027                          ___ftdiv@f3 002E  
                        ___ftneg@f1 0001                          ___ftmul@f1 0015  
                        ___ftmul@f2 0018                          ___ftsub@f1 003A  
                        ___ftsub@f2 003D                          ___fttol@f1 002B  
                    __pcstackCOMRAM 0001                          ___lltoft@c 0009  
                     __end_of_scale F7AC                       __end_of_putch DF5E  
                       ?_Night_Mode 0001                     _activate_buzzer DF6C  
                 __end_of_Init_TRIS DFBE                          ___lwtoft@c 0009  
                        __div_to_l_ EA3A                           ?_Day_Mode 0001  
                 __end_of_OpenUSART E310                     __div_to_l_@exp1 000C  
                   __div_to_l_@cntr 000B                             ??_scale 0027  
              __size_of_PED_Control 0098                     __div_to_l_@quot 0007  
                           ??_putch 0001                           ?_Init_ADC 0001  
                __size_of_init_UART 0014           __size_of_Wait_Half_Second 001A  
                         ?_Set_EWLT 0001                       __div_to_l_@f1 0001  
                     __div_to_l_@f2 0004                           ?_Set_NSLT 0001  
                           ?_Set_EW 0001                             ?_Set_NS 0001  
                           ?___ftge 0001                             ?___wmul 000F  
                           _CCP2CON 000FBA                             ?_fround 0024  
                         ?___ftpack 0001                     _Wait_One_Second DF42  
                           ?_printf 0040                           ?___lltoft 0009  
                         ?___lwtoft 0009                          ??_Day_Mode 0062  
                        ??_Init_ADC 0001                 __size_of_Night_Mode 016A  
                        ??_Set_EWLT 0001                          ??_Set_NSLT 0001  
                 __end_of__npowers_ FE22                             __Hparam 0000  
                        _scale$1715 0027                             __Lparam 0000  
                   __size_of_Set_EW 0036                     __size_of_Set_NS 0036  
           __end_of_activate_buzzer DF7E                     __size_of___ftge 0096  
                           ___awdiv E4B4                             ___ftadd EDBE  
                           ___awmod E310                             ___ftdiv E77A  
                           ___ftneg DFF2                             ___lldiv E392  
                   __size_of___wmul 0028                             ___ftmul E942  
                           ___llmod E230                             ___ftsub E18C  
                           ___fttol E85C               __size_of_get_full_ADC 0026  
                           __pcinit E08A                          ??___ftpack 0006  
                   __size_of_fround 0244                             __ramtop 1000  
                        ??___lltoft 000D                             __ptext0 E6A8  
                           __ptext1 DF36                             __ptext2 DF7E  
                           __ptext3 E2A0                             __ptext4 E03C  
                           __ptext5 E016                             __ptext6 E77A  
                           __ptext7 EC54                             __ptext8 DFA8  
                           __ptext9 DF5E                     __size_of_printf 0626  
                 __end_of_init_UART DF92                          ??___lwtoft 000C  
                         _T0CONbits 000FD5                         ?__div_to_l_ 0001  
                           _dpowers FDD3                    ___awmod@dividend 0001  
              end_of_initialization E0AA                       __Lmediumconst FDD2  
                      _get_full_ADC E03C                     ___lldiv@divisor 0005  
                      PED_Control@i 0003                        PED_Control@j 0005  
                   ___lldiv@counter 000D             __end_of_Wait_One_Second DF50  
                         _RCSTAbits 000FAB                             printf@c 0061  
                           printf@f 0040                             postdec1 000FE5  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc2 000FDE                      __tdiv_to_l_@f1 0001  
                    __tdiv_to_l_@f2 0004                       ??__tdiv_to_l_ 0007  
                         _PORTAbits 000F80                           _PORTCbits 000F82  
                         _PORTDbits 000F83                           _PORTEbits 000F84  
            __size_of_select_ADC_CH 000C                           _TRISCbits 000F94  
                  ??_Wait_N_Seconds 0001                    _Wait_Half_Second DFBE  
                       ___ftdiv@exp 0031                           _TXSTAbits 000FAC  
                get_full_ADC@result 0005                 __size_of__div_to_l_ 010A  
                       ___ftmul@exp 001E                    ?_activate_buzzer 0001  
                    __end_of_Set_EW E0EA                      __end_of_Set_NS E156  
                    __end_of___ftge E4B4                      __end_of___wmul E08A  
                     __pidataCOMRAM DF2C                        ??_Night_Mode 0062  
                    __end_of_fround F3CC                      __end_of_printf FDD2  
                PED_Control@num_sec 0001                 start_initialization E08A  
                         _Init_TRIS DFA8                 __end_of__tdiv_to_l_ EC54  
                 __size_of_Day_Mode 0206                           _OpenUSART E2A0  
                   ___llmod@divisor 0005                    __CFG_OSC$INTIO67 000000  
                 __size_of_Init_ADC 000E                     ___llmod@counter 0009  
                     _select_ADC_CH DF36                  __end_of_Night_Mode EDBE  
                   Wait_N_Seconds@I 0002                            ??_Set_EW 0001  
                          ??_Set_NS 0001                   __size_of_Set_EWLT 0036  
                 __size_of_Set_NSLT 0036                    ?_Wait_One_Second 0001  
                          ??___ftge 0007                            ??___wmul 0013  
                          ??_fround 0027                            ??_printf 0045  
                        fround@prec 002D                   __size_of___ftpack 00C6  
                 __size_of___lltoft 0060                       ??_PED_Control 0002  
                 __size_of___lwtoft 0026                          ?_Init_TRIS 0001  
        ?_Wait_One_Second_With_Beep 0001                          ?_OpenUSART 0001  
                    ?_select_ADC_CH 0001                       __pmediumconst FDD2  
                          ?___awdiv 0007                            ?___ftadd 002E  
                          ?___awmod 0001                            ?___ftdiv 0024  
                          ?___ftneg 0001                            ?___lldiv 0001  
                          ?___ftmul 0015                            ?___llmod 0001  
                          ?___ftsub 003A                           __npowers_ FDFB  
                          ?___fttol 002B                         __tdiv_to_l_ EB44  
                      ??__div_to_l_ 0007                           _init_UART DF7E  
                    __size_of_scale 03E0                   _deactivate_buzzer DF24  
                    __size_of_putch 000E   __end_of_Wait_One_Second_With_Beep DFA8  
               __end_of_PED_Control E5E2                            _LED_7seg 006B  
                ?_deactivate_buzzer 0001                      ___wmul@product 0013  
                          _PIE1bits 000F9D                            _PIR1bits 000F9E  
                __end_of__div_to_l_ EB44                 ??_deactivate_buzzer 0001  
                        _ADCON0bits 000FC2            __end_of_Wait_Half_Second DFD8  
                 ___wmul@multiplier 000F                          printf@flag 0050  
                        printf@fval 005E                           main@nStep 0063  
                        printf@prec 0052                            _Day_Mode EF82  
                       ??_Init_TRIS 0001                          ?_init_UART 0001  
         __end_of_deactivate_buzzer DF2C                           copy_data0 E09E  
                   ??_select_ADC_CH 0001                            _Init_ADC DF5E  
                       ??_OpenUSART 0003                     OpenUSART@config 0003  
                          _Set_EWLT E0EA                            _Set_NSLT E156  
                          __Hrparam 0000                            __Lrparam 0000  
                  __size_of___awdiv 0096                    __size_of___ftadd 01C4  
                  __size_of___awmod 0082                    __size_of___ftdiv 00E2  
                  __size_of___ftneg 0024                    __size_of___lldiv 008C  
                  __size_of___ftmul 00F8                    __size_of___llmod 0070  
                  __size_of___ftsub 0044                    __size_of___fttol 00E6  
                          ___ftpack E5E2                         _fround$1713 002A  
                       _fround$1714 0027                            ___lltoft E1D0  
                          ___lwtoft E016                         _PED_Control E54A  
                          __ptext10 EF82                            __ptext11 F7AC  
                          __ptext20 EA3A                            __ptext12 F3CC  
                          __ptext21 E1D0                            __ptext13 DF50  
                          __ptext30 DFD8                            __ptext22 E230  
                          __ptext14 F188                            __ptext31 DF42  
                          __ptext23 E392                            __ptext15 E062  
                          __ptext40 DFBE                            __ptext32 E156  
                          __ptext24 E85C                            __ptext16 E942  
                          __ptext33 E120                            __ptext25 E18C  
                          __ptext17 E310                            __ptext34 E0EA  
                          __ptext26 EDBE                            __ptext18 E4B4  
                          __ptext35 E0B4                            __ptext27 E5E2  
                          __ptext19 EB44                            __ptext36 E54A  
                          __ptext28 DFF2                            __ptext37 DF92  
                          __ptext29 E41E                            __ptext38 DF24  
                          __ptext39 DF6C                            __powers_ FE22  
                     __size_of_main 00D2                            main@MODE 0066  
                         printf@exp 0058                           printf@val 0054  
                          main@volt 0068            __size_of_activate_buzzer 0012  
                        _INTCONbits 000FF2                      OpenUSART@spbrg 0001  
                       ??_init_UART 0004          __size_of_deactivate_buzzer 0008  
                     Set_EWLT@color 0001                            scale@scl 002A  
       ??_Wait_One_Second_With_Beep 0001                    __tdiv_to_l_@exp1 000F  
                  __tdiv_to_l_@cntr 000E                    __tdiv_to_l_@quot 000A  
                  ___lldiv@dividend 0001             __size_of_Wait_N_Seconds 001A  
               select_ADC_CH@AN_pin 0001                            printf@ap 004E  
                      ?__tdiv_to_l_ 0001                         _printf$1716 004B  
          __size_of_Wait_One_Second 000E                    ___lldiv@quotient 0009  
                     Set_NSLT@color 0001                       ?_get_full_ADC 0001  
