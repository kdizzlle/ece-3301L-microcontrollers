

Microchip Technology PIC18 LITE Macro Assembler V1.34 build -361300703 
                                                                                               Thu Oct 10 17:35:45 2024

Microchip Technology Omniscient Code Generator (Lite mode) build 201502162209
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  002A82                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for _LED_7seg
    49  002A82  01                 	db	1
    50  002A83  4F                 	db	79
    51  002A84  12                 	db	18
    52  002A85  06                 	db	6
    53  002A86  4C                 	db	76
    54  002A87  24                 	db	36
    55  002A88  20                 	db	32
    56  002A89  0F                 	db	15
    57  002A8A  00                 	db	0
    58  002A8B  0C                 	db	12
    59                           
    60                           	psect	smallconst
    61  001000                     __psmallconst:
    62                           	opt stack 0
    63  001000  00                 	db	0
    64  001001                     _dpowers:
    65                           	opt stack 0
    66  001001  0001               	dw	1
    67  001003  0000               	dw	0
    68  001005  000A               	dw	10
    69  001007  0000               	dw	0
    70  001009  0064               	dw	100
    71  00100B  0000               	dw	0
    72  00100D  03E8               	dw	1000
    73  00100F  0000               	dw	0
    74  001011  2710               	dw	10000
    75  001013  0000               	dw	0
    76  001015  86A0               	dw	34464
    77  001017  0001               	dw	1
    78  001019  4240               	dw	16960
    79  00101B  000F               	dw	15
    80  00101D  9680               	dw	38528
    81  00101F  0098               	dw	152
    82  001021  E100               	dw	57600
    83  001023  05F5               	dw	1525
    84  001025  CA00               	dw	51712
    85  001027  3B9A               	dw	15258
    86  001029                     __end_of_dpowers:
    87                           	opt stack 0
    88  001029                     __npowers_:
    89                           	opt stack 0
    90  001029  00                 	db	0
    91  00102A  80                 	db	128
    92  00102B  3F                 	db	63
    93  00102C  CD                 	db	205
    94  00102D  CC                 	db	204
    95  00102E  3D                 	db	61
    96  00102F  D7                 	db	215
    97  001030  23                 	db	35
    98  001031  3C                 	db	60
    99  001032  12                 	db	18
   100  001033  83                 	db	131
   101  001034  3A                 	db	58
   102  001035  B7                 	db	183
   103  001036  D1                 	db	209
   104  001037  38                 	db	56
   105  001038  C6                 	db	198
   106  001039  27                 	db	39
   107  00103A  37                 	db	55
   108  00103B  38                 	db	56
   109  00103C  86                 	db	134
   110  00103D  35                 	db	53
   111  00103E  C0                 	db	192
   112  00103F  D6                 	db	214
   113  001040  33                 	db	51
   114  001041  CC                 	db	204
   115  001042  2B                 	db	43
   116  001043  32                 	db	50
   117  001044  70                 	db	112
   118  001045  89                 	db	137
   119  001046  30                 	db	48
   120  001047  E7                 	db	231
   121  001048  DB                 	db	219
   122  001049  2E                 	db	46
   123  00104A  E5                 	db	229
   124  00104B  3C                 	db	60
   125  00104C  1E                 	db	30
   126  00104D  42                 	db	66
   127  00104E  A2                 	db	162
   128  00104F  0D                 	db	13
   129  001050                     __end_of__npowers_:
   130                           	opt stack 0
   131  001050                     __powers_:
   132                           	opt stack 0
   133  001050  00                 	db	0
   134  001051  80                 	db	128
   135  001052  3F                 	db	63
   136  001053  00                 	db	0
   137  001054  20                 	db	32
   138  001055  41                 	db	65
   139  001056  00                 	db	0
   140  001057  C8                 	db	200
   141  001058  42                 	db	66
   142  001059  00                 	db	0
   143  00105A  7A                 	db	122
   144  00105B  44                 	db	68
   145  00105C  40                 	db	64
   146  00105D  1C                 	db	28
   147  00105E  46                 	db	70
   148  00105F  50                 	db	80
   149  001060  C3                 	db	195
   150  001061  47                 	db	71
   151  001062  24                 	db	36
   152  001063  74                 	db	116
   153  001064  49                 	db	73
   154  001065  97                 	db	151
   155  001066  18                 	db	24
   156  001067  4B                 	db	75
   157  001068  BC                 	db	188
   158  001069  BE                 	db	190
   159  00106A  4C                 	db	76
   160  00106B  6B                 	db	107
   161  00106C  6E                 	db	110
   162  00106D  4E                 	db	78
   163  00106E  03                 	db	3
   164  00106F  15                 	db	21
   165  001070  50                 	db	80
   166  001071  79                 	db	121
   167  001072  AD                 	db	173
   168  001073  60                 	db	96
   169  001074  F3                 	db	243
   170  001075  49                 	db	73
   171  001076  71                 	db	113
   172  001077                     __end_of__powers_:
   173                           	opt stack 0
   174  0000                     _ADCON0	set	4034
   175  0000                     _ADCON0bits	set	4034
   176  0000                     _ADCON1	set	4033
   177  0000                     _ADCON2	set	4032
   178  0000                     _ADRESH	set	4036
   179  0000                     _ADRESL	set	4035
   180  0000                     _OSCCON	set	4051
   181  0000                     _PIE1bits	set	3997
   182  0000                     _PIR1bits	set	3998
   183  0000                     _PORTB	set	3969
   184  0000                     _PORTD	set	3971
   185  0000                     _PORTDbits	set	3971
   186  0000                     _RCSTA	set	4011
   187  0000                     _RCSTAbits	set	4011
   188  0000                     _SPBRG	set	4015
   189  0000                     _SPBRGH	set	4016
   190  0000                     _TRISA	set	3986
   191  0000                     _TRISB	set	3987
   192  0000                     _TRISC	set	3988
   193  0000                     _TRISCbits	set	3988
   194  0000                     _TRISD	set	3989
   195  0000                     _TRISE	set	3990
   196  0000                     _TXREG	set	4013
   197  0000                     _TXSTA	set	4012
   198  0000                     _TXSTAbits	set	4012
   199  0000                     _TRMT	set	32097
   200  001077                     STR_1:
   201  001077  56                 	db	86	;'V'
   202  001078  6F                 	db	111	;'o'
   203  001079  6C                 	db	108	;'l'
   204  00107A  74                 	db	116	;'t'
   205  00107B  61                 	db	97	;'a'
   206  00107C  67                 	db	103	;'g'
   207  00107D  65                 	db	101	;'e'
   208  00107E  20                 	db	32
   209  00107F  3D                 	db	61	;'='
   210  001080  20                 	db	32
   211  001081  25                 	db	37
   212  001082  66                 	db	102	;'f'
   213  001083  20                 	db	32
   214  001084  0D                 	db	13
   215  001085  0A                 	db	10
   216  001086  00                 	db	0
   217                           
   218                           ; #config settings
   219  001087  00                 	db	0	; dummy byte at the end
   220  0000                     
   221                           	psect	cinit
   222  00291E                     __pcinit:
   223                           	opt stack 0
   224  00291E                     start_initialization:
   225                           	opt stack 0
   226  00291E                     __initialization:
   227                           	opt stack 0
   228                           
   229                           ; Clear objects allocated to COMRAM (8 bytes)
   230  00291E  EE00  F071         	lfsr	0,__pbssCOMRAM
   231  002922  0E08               	movlw	8
   232  002924                     clear_0:
   233  002924  6AEE               	clrf	postinc0,c
   234  002926  06E8               	decf	wreg,f,c
   235  002928  E1FD               	bnz	clear_0
   236                           
   237                           ; Initialize objects allocated to COMRAM (10 bytes)
   238                           ; load TBLPTR registers with __pidataCOMRAM
   239  00292A  0E82               	movlw	low __pidataCOMRAM
   240  00292C  6EF6               	movwf	tblptrl,c
   241  00292E  0E2A               	movlw	high __pidataCOMRAM
   242  002930  6EF7               	movwf	tblptrh,c
   243  002932  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   244  002934  6EF8               	movwf	tblptru,c
   245  002936  EE00  F067         	lfsr	0,__pdataCOMRAM
   246  00293A  EE10 F00A          	lfsr	1,10
   247  00293E                     copy_data0:
   248  00293E  0009               	tblrd		*+
   249  002940  CFF5 FFEE          	movff	tablat,postinc0
   250  002944  50E5               	movf	postdec1,w,c
   251  002946  50E1               	movf	fsr1l,w,c
   252  002948  E1FA               	bnz	copy_data0
   253  00294A                     end_of_initialization:
   254                           	opt stack 0
   255  00294A                     __end_of__initialization:
   256                           	opt stack 0
   257  00294A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   258  00294C  6EF8               	movwf	tblptru,c
   259  00294E  0100               	movlb	0
   260  002950  EF4B  F00F         	goto	_main	;jump to C main() function
   261                           tblptru	equ	0xFF8
   262                           tblptrh	equ	0xFF7
   263                           tblptrl	equ	0xFF6
   264                           tablat	equ	0xFF5
   265                           postinc0	equ	0xFEE
   266                           wreg	equ	0xFE8
   267                           postdec1	equ	0xFE5
   268                           fsr1l	equ	0xFE1
   269                           
   270                           	psect	bssCOMRAM
   271  000071                     __pbssCOMRAM:
   272                           	opt stack 0
   273  000071                     _R:
   274                           	opt stack 0
   275  000071                     	ds	3
   276  000074                     _volt:
   277                           	opt stack 0
   278  000074                     	ds	3
   279  000077                     _num_step:
   280                           	opt stack 0
   281  000077                     	ds	2
   282                           tblptru	equ	0xFF8
   283                           tblptrh	equ	0xFF7
   284                           tblptrl	equ	0xFF6
   285                           tablat	equ	0xFF5
   286                           postinc0	equ	0xFEE
   287                           wreg	equ	0xFE8
   288                           postdec1	equ	0xFE5
   289                           fsr1l	equ	0xFE1
   290                           
   291                           	psect	dataCOMRAM
   292  000067                     __pdataCOMRAM:
   293                           	opt stack 0
   294  000067                     _LED_7seg:
   295                           	opt stack 0
   296  000067                     	ds	10
   297                           tblptru	equ	0xFF8
   298                           tblptrh	equ	0xFF7
   299                           tblptrl	equ	0xFF6
   300                           tablat	equ	0xFF5
   301                           postinc0	equ	0xFEE
   302                           wreg	equ	0xFE8
   303                           postdec1	equ	0xFE5
   304                           fsr1l	equ	0xFE1
   305                           
   306                           	psect	cstackCOMRAM
   307  000001                     __pcstackCOMRAM:
   308                           	opt stack 0
   309  000001                     ?_get_full_ADC:
   310                           	opt stack 0
   311  000001                     ?___awmod:
   312                           	opt stack 0
   313  000001                     ?___ftpack:
   314                           	opt stack 0
   315  000001                     ?__tdiv_to_l_:
   316                           	opt stack 0
   317  000001                     ?__div_to_l_:
   318                           	opt stack 0
   319  000001                     ?___lldiv:
   320                           	opt stack 0
   321  000001                     ?___llmod:
   322                           	opt stack 0
   323  000001                     putch@c:
   324                           	opt stack 0
   325  000001                     select_ADC_CH@AN_pin:
   326                           	opt stack 0
   327  000001                     wait_1_sec@j:
   328                           	opt stack 0
   329  000001                     OpenUSART@spbrg:
   330                           	opt stack 0
   331  000001                     ___awmod@dividend:
   332                           	opt stack 0
   333  000001                     __div_to_l_@f1:
   334                           	opt stack 0
   335  000001                     ___ftpack@arg:
   336                           	opt stack 0
   337  000001                     __tdiv_to_l_@f1:
   338                           	opt stack 0
   339  000001                     ___ftge@ff1:
   340                           	opt stack 0
   341  000001                     ___lldiv@dividend:
   342                           	opt stack 0
   343  000001                     ___llmod@dividend:
   344                           	opt stack 0
   345                           
   346                           ; 4 bytes @ 0x0
   347  000001                     	ds	2
   348  000003                     ??_get_full_ADC:
   349  000003                     OpenUSART@config:
   350                           	opt stack 0
   351  000003                     ___awmod@divisor:
   352                           	opt stack 0
   353                           
   354                           ; 2 bytes @ 0x2
   355  000003                     	ds	1
   356  000004                     ___ftpack@exp:
   357                           	opt stack 0
   358  000004                     __div_to_l_@f2:
   359                           	opt stack 0
   360  000004                     __tdiv_to_l_@f2:
   361                           	opt stack 0
   362  000004                     ___ftge@ff2:
   363                           	opt stack 0
   364                           
   365                           ; 3 bytes @ 0x3
   366  000004                     	ds	1
   367  000005                     ___awmod@counter:
   368                           	opt stack 0
   369  000005                     ___ftpack@sign:
   370                           	opt stack 0
   371  000005                     get_full_ADC@result:
   372                           	opt stack 0
   373  000005                     ___lldiv@divisor:
   374                           	opt stack 0
   375  000005                     ___llmod@divisor:
   376                           	opt stack 0
   377                           
   378                           ; 4 bytes @ 0x4
   379  000005                     	ds	1
   380  000006                     ??___ftpack:
   381  000006                     ___awmod@sign:
   382                           	opt stack 0
   383                           
   384                           ; 1 bytes @ 0x5
   385  000006                     	ds	1
   386  000007                     ??__tdiv_to_l_:
   387  000007                     ??___ftge:
   388  000007                     ?___awdiv:
   389                           	opt stack 0
   390  000007                     ___awdiv@dividend:
   391                           	opt stack 0
   392  000007                     __div_to_l_@quot:
   393                           	opt stack 0
   394                           
   395                           ; 4 bytes @ 0x6
   396  000007                     	ds	2
   397  000009                     ?___lbtoft:
   398                           	opt stack 0
   399  000009                     ?___lltoft:
   400                           	opt stack 0
   401  000009                     ?___lwtoft:
   402                           	opt stack 0
   403  000009                     ___llmod@counter:
   404                           	opt stack 0
   405  000009                     ___awdiv@divisor:
   406                           	opt stack 0
   407  000009                     ___lwtoft@c:
   408                           	opt stack 0
   409  000009                     ___lldiv@quotient:
   410                           	opt stack 0
   411  000009                     ___lltoft@c:
   412                           	opt stack 0
   413                           
   414                           ; 4 bytes @ 0x8
   415  000009                     	ds	1
   416  00000A                     __tdiv_to_l_@quot:
   417                           	opt stack 0
   418                           
   419                           ; 4 bytes @ 0x9
   420  00000A                     	ds	1
   421  00000B                     ___awdiv@counter:
   422                           	opt stack 0
   423  00000B                     __div_to_l_@cntr:
   424                           	opt stack 0
   425                           
   426                           ; 1 bytes @ 0xA
   427  00000B                     	ds	1
   428  00000C                     ?___ftdiv:
   429                           	opt stack 0
   430  00000C                     ___awdiv@sign:
   431                           	opt stack 0
   432  00000C                     __div_to_l_@exp1:
   433                           	opt stack 0
   434  00000C                     ___lbtoft@c:
   435                           	opt stack 0
   436  00000C                     ___ftdiv@f1:
   437                           	opt stack 0
   438                           
   439                           ; 3 bytes @ 0xB
   440  00000C                     	ds	1
   441  00000D                     ??___lltoft:
   442  00000D                     ?___ftneg:
   443                           	opt stack 0
   444  00000D                     ___lldiv@counter:
   445                           	opt stack 0
   446  00000D                     ___awdiv@quotient:
   447                           	opt stack 0
   448  00000D                     ___ftneg@f1:
   449                           	opt stack 0
   450                           
   451                           ; 3 bytes @ 0xC
   452  00000D                     	ds	1
   453  00000E                     __tdiv_to_l_@cntr:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0xD
   457  00000E                     	ds	1
   458  00000F                     ?___wmul:
   459                           	opt stack 0
   460  00000F                     __tdiv_to_l_@exp1:
   461                           	opt stack 0
   462  00000F                     ___wmul@multiplier:
   463                           	opt stack 0
   464  00000F                     ___ftdiv@f2:
   465                           	opt stack 0
   466                           
   467                           ; 3 bytes @ 0xE
   468  00000F                     	ds	1
   469  000010                     ?___ftadd:
   470                           	opt stack 0
   471  000010                     ___ftadd@f1:
   472                           	opt stack 0
   473                           
   474                           ; 3 bytes @ 0xF
   475  000010                     	ds	1
   476  000011                     ___lltoft@exp:
   477                           	opt stack 0
   478  000011                     ___wmul@multiplicand:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x10
   482  000011                     	ds	1
   483  000012                     ??___ftdiv:
   484                           
   485                           ; 0 bytes @ 0x11
   486  000012                     	ds	1
   487  000013                     ___wmul@product:
   488                           	opt stack 0
   489  000013                     ___ftadd@f2:
   490                           	opt stack 0
   491                           
   492                           ; 3 bytes @ 0x12
   493  000013                     	ds	2
   494  000015                     ___ftdiv@cntr:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x14
   498  000015                     	ds	1
   499  000016                     ??___ftadd:
   500  000016                     ___ftdiv@f3:
   501                           	opt stack 0
   502                           
   503                           ; 3 bytes @ 0x15
   504  000016                     	ds	3
   505  000019                     ___ftadd@sign:
   506                           	opt stack 0
   507  000019                     ___ftdiv@exp:
   508                           	opt stack 0
   509                           
   510                           ; 1 bytes @ 0x18
   511  000019                     	ds	1
   512  00001A                     ___ftadd@exp2:
   513                           	opt stack 0
   514  00001A                     ___ftdiv@sign:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x19
   518  00001A                     	ds	1
   519  00001B                     ___ftadd@exp1:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x1A
   523  00001B                     	ds	1
   524  00001C                     ?___ftmul:
   525                           	opt stack 0
   526  00001C                     ?___ftsub:
   527                           	opt stack 0
   528  00001C                     ___ftmul@f1:
   529                           	opt stack 0
   530  00001C                     ___ftsub@f1:
   531                           	opt stack 0
   532                           
   533                           ; 3 bytes @ 0x1B
   534  00001C                     	ds	3
   535  00001F                     ___ftmul@f2:
   536                           	opt stack 0
   537  00001F                     ___ftsub@f2:
   538                           	opt stack 0
   539                           
   540                           ; 3 bytes @ 0x1E
   541  00001F                     	ds	3
   542  000022                     ??___ftmul:
   543  000022                     
   544                           ; 0 bytes @ 0x21
   545  000022                     	ds	3
   546  000025                     ___ftmul@exp:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x24
   550  000025                     	ds	1
   551  000026                     ___ftmul@f3_as_product:
   552                           	opt stack 0
   553                           
   554                           ; 3 bytes @ 0x25
   555  000026                     	ds	3
   556  000029                     ___ftmul@cntr:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x28
   560  000029                     	ds	1
   561  00002A                     ___ftmul@sign:
   562                           	opt stack 0
   563                           
   564                           ; 1 bytes @ 0x29
   565  00002A                     	ds	1
   566  00002B                     ?_fround:
   567                           	opt stack 0
   568  00002B                     ?_scale:
   569                           	opt stack 0
   570                           
   571                           ; 3 bytes @ 0x2A
   572  00002B                     	ds	3
   573  00002E                     _fround$1093:
   574                           	opt stack 0
   575  00002E                     _scale$1094:
   576                           	opt stack 0
   577                           
   578                           ; 3 bytes @ 0x2D
   579  00002E                     	ds	3
   580  000031                     scale@scl:
   581                           	opt stack 0
   582  000031                     _fround$1092:
   583                           	opt stack 0
   584                           
   585                           ; 3 bytes @ 0x30
   586  000031                     	ds	1
   587  000032                     ?___fttol:
   588                           	opt stack 0
   589  000032                     ___fttol@f1:
   590                           	opt stack 0
   591                           
   592                           ; 3 bytes @ 0x31
   593  000032                     	ds	2
   594  000034                     fround@prec:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x33
   598  000034                     	ds	2
   599  000036                     ??___fttol:
   600                           
   601                           ; 0 bytes @ 0x35
   602  000036                     	ds	5
   603  00003B                     ___fttol@sign1:
   604                           	opt stack 0
   605                           
   606                           ; 1 bytes @ 0x3A
   607  00003B                     	ds	1
   608  00003C                     ___fttol@lval:
   609                           	opt stack 0
   610                           
   611                           ; 4 bytes @ 0x3B
   612  00003C                     	ds	4
   613  000040                     ___fttol@exp1:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x3F
   617  000040                     	ds	1
   618  000041                     ?_printf:
   619                           	opt stack 0
   620  000041                     printf@f:
   621                           	opt stack 0
   622                           
   623                           ; 2 bytes @ 0x40
   624  000041                     	ds	5
   625  000046                     ??_printf:
   626                           
   627                           ; 0 bytes @ 0x45
   628  000046                     	ds	6
   629  00004C                     _printf$1095:
   630                           	opt stack 0
   631                           
   632                           ; 3 bytes @ 0x4B
   633  00004C                     	ds	3
   634  00004F                     printf@ap:
   635                           	opt stack 0
   636                           
   637                           ; 2 bytes @ 0x4E
   638  00004F                     	ds	2
   639  000051                     printf@flag:
   640                           	opt stack 0
   641                           
   642                           ; 2 bytes @ 0x50
   643  000051                     	ds	2
   644  000053                     printf@prec:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x52
   648  000053                     	ds	2
   649  000055                     printf@val:
   650                           	opt stack 0
   651                           
   652                           ; 4 bytes @ 0x54
   653  000055                     	ds	4
   654  000059                     printf@exp:
   655                           	opt stack 0
   656                           
   657                           ; 2 bytes @ 0x58
   658  000059                     	ds	2
   659  00005B                     printf@tmpval:
   660                           	opt stack 0
   661                           
   662                           ; 4 bytes @ 0x5A
   663  00005B                     	ds	4
   664  00005F                     printf@fval:
   665                           	opt stack 0
   666                           
   667                           ; 3 bytes @ 0x5E
   668  00005F                     	ds	3
   669  000062                     printf@c:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x61
   673  000062                     	ds	1
   674  000063                     ??_main:
   675                           
   676                           ; 0 bytes @ 0x62
   677  000063                     	ds	2
   678  000065                     main@L:
   679                           	opt stack 0
   680                           
   681                           ; 1 bytes @ 0x64
   682  000065                     	ds	1
   683  000066                     main@U:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x65
   687  000066                     	ds	1
   688                           tblptru	equ	0xFF8
   689                           tblptrh	equ	0xFF7
   690                           tblptrl	equ	0xFF6
   691                           tablat	equ	0xFF5
   692                           postinc0	equ	0xFEE
   693                           wreg	equ	0xFE8
   694                           postdec1	equ	0xFE5
   695                           fsr1l	equ	0xFE1
   696                           
   697 ;;
   698 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   699 ;;
   700 ;; *************** function _main *****************
   701 ;; Defined at:
   702 ;;		line 46 in file "lab6pa.c"
   703 ;; Parameters:    Size  Location     Type
   704 ;;		None
   705 ;; Auto vars:     Size  Location     Type
   706 ;;  U               1  101[COMRAM] unsigned char 
   707 ;;  L               1  100[COMRAM] unsigned char 
   708 ;; Return value:  Size  Location     Type
   709 ;;		None               void
   710 ;; Registers used:
   711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   712 ;; Tracked objects:
   713 ;;		On entry : 0/0
   714 ;;		On exit  : 0/0
   715 ;;		Unchanged: 0/0
   716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   718 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   719 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   720 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   721 ;;Total ram usage:        4 bytes
   722 ;; Hardware stack levels required when called:    4
   723 ;; This function calls:
   724 ;;		_Init_ADC
   725 ;;		_Init_TRIS
   726 ;;		___ftadd
   727 ;;		___ftdiv
   728 ;;		___ftmul
   729 ;;		___ftneg
   730 ;;		___fttol
   731 ;;		___lbtoft
   732 ;;		___lwtoft
   733 ;;		_get_full_ADC
   734 ;;		_init_UART
   735 ;;		_printf
   736 ;;		_select_ADC_CH
   737 ;;		_wait_1_sec
   738 ;; This function is called by:
   739 ;;		Startup code after reset
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           	psect	text0
   744  001E96                     __ptext0:
   745                           	opt stack 0
   746  001E96                     _main:
   747                           	opt stack 27
   748                           
   749                           ;lab6pa.c: 48: init_UART();
   750                           
   751                           ;incstack = 0
   752  001E96  EC19  F015         	call	_init_UART	;wreg free
   753                           
   754                           ;lab6pa.c: 49: Init_ADC();
   755  001E9A  EC34  F015         	call	_Init_ADC	;wreg free
   756                           
   757                           ;lab6pa.c: 50: Init_TRIS();
   758  001E9E  EC23  F015         	call	_Init_TRIS	;wreg free
   759                           
   760                           ;lab6pa.c: 52: select_ADC_CH(0);
   761  001EA2  0E00               	movlw	0
   762  001EA4  EC3B  F015         	call	_select_ADC_CH
   763  001EA8  D000               	goto	l2517
   764  001EAA                     l2517:
   765                           
   766                           ;lab6pa.c: 54: {
   767                           ;lab6pa.c: 55: num_step = get_full_ADC();
   768  001EAA  ECBE  F014         	call	_get_full_ADC	;wreg free
   769  001EAE  C001  F077         	movff	?_get_full_ADC,_num_step
   770  001EB2  C002  F078         	movff	?_get_full_ADC+1,_num_step+1
   771                           
   772                           ;lab6pa.c: 57: volt = (num_step * 4)/1000.0;
   773  001EB6  C077  F063         	movff	_num_step,??_main
   774  001EBA  C078  F064         	movff	_num_step+1,??_main+1
   775  001EBE  90D8               	bcf	status,0,c
   776  001EC0  3663               	rlcf	??_main,f,c
   777  001EC2  3664               	rlcf	??_main+1,f,c
   778  001EC4  90D8               	bcf	status,0,c
   779  001EC6  3663               	rlcf	??_main,f,c
   780  001EC8  3664               	rlcf	??_main+1,f,c
   781  001ECA  C063  F009         	movff	??_main,___lwtoft@c
   782  001ECE  C064  F00A         	movff	??_main+1,___lwtoft@c+1
   783  001ED2  ECD1  F014         	call	___lwtoft	;wreg free
   784  001ED6  C009  F00C         	movff	?___lwtoft,___ftdiv@f1
   785  001EDA  C00A  F00D         	movff	?___lwtoft+1,___ftdiv@f1+1
   786  001EDE  C00B  F00E         	movff	?___lwtoft+2,___ftdiv@f1+2
   787  001EE2  0E00               	movlw	0
   788  001EE4  6E0F               	movwf	___ftdiv@f2,c
   789  001EE6  0E7A               	movlw	122
   790  001EE8  6E10               	movwf	___ftdiv@f2+1,c
   791  001EEA  0E44               	movlw	68
   792  001EEC  6E11               	movwf	___ftdiv@f2+2,c
   793  001EEE  ECDC  F011         	call	___ftdiv	;wreg free
   794  001EF2  C00C  F074         	movff	?___ftdiv,_volt
   795  001EF6  C00D  F075         	movff	?___ftdiv+1,_volt+1
   796  001EFA  C00E  F076         	movff	?___ftdiv+2,_volt+2
   797                           
   798                           ;lab6pa.c: 58: char U = (int) volt;
   799  001EFE  C074  F032         	movff	_volt,___fttol@f1
   800  001F02  C075  F033         	movff	_volt+1,___fttol@f1+1
   801  001F06  C076  F034         	movff	_volt+2,___fttol@f1+2
   802  001F0A  EC69  F011         	call	___fttol	;wreg free
   803  001F0E  5032               	movf	?___fttol,w,c
   804  001F10  6E66               	movwf	main@U,c
   805                           
   806                           ;lab6pa.c: 59: char L = (int) ((volt-U) * 10);
   807  001F12  0E00               	movlw	0
   808  001F14  6E1F               	movwf	___ftmul@f2,c
   809  001F16  0E20               	movlw	32
   810  001F18  6E20               	movwf	___ftmul@f2+1,c
   811  001F1A  0E41               	movlw	65
   812  001F1C  6E21               	movwf	___ftmul@f2+2,c
   813  001F1E  C074  F013         	movff	_volt,___ftadd@f2
   814  001F22  C075  F014         	movff	_volt+1,___ftadd@f2+1
   815  001F26  C076  F015         	movff	_volt+2,___ftadd@f2+2
   816  001F2A  5066               	movf	main@U,w,c
   817  001F2C  ECE4  F014         	call	___lbtoft
   818  001F30  C009  F00D         	movff	?___lbtoft,___ftneg@f1
   819  001F34  C00A  F00E         	movff	?___lbtoft+1,___ftneg@f1+1
   820  001F38  C00B  F00F         	movff	?___lbtoft+2,___ftneg@f1+2
   821  001F3C  ECF7  F014         	call	___ftneg	;wreg free
   822  001F40  C00D  F010         	movff	?___ftneg,___ftadd@f1
   823  001F44  C00E  F011         	movff	?___ftneg+1,___ftadd@f1+1
   824  001F48  C00F  F012         	movff	?___ftneg+2,___ftadd@f1+2
   825  001F4C  EC69  F00E         	call	___ftadd	;wreg free
   826  001F50  C010  F01C         	movff	?___ftadd,___ftmul@f1
   827  001F54  C011  F01D         	movff	?___ftadd+1,___ftmul@f1+1
   828  001F58  C012  F01E         	movff	?___ftadd+2,___ftmul@f1+2
   829  001F5C  ECED  F010         	call	___ftmul	;wreg free
   830  001F60  C01C  F032         	movff	?___ftmul,___fttol@f1
   831  001F64  C01D  F033         	movff	?___ftmul+1,___fttol@f1+1
   832  001F68  C01E  F034         	movff	?___ftmul+2,___fttol@f1+2
   833  001F6C  EC69  F011         	call	___fttol	;wreg free
   834  001F70  5032               	movf	?___fttol,w,c
   835  001F72  6E65               	movwf	main@L,c
   836                           
   837                           ;lab6pa.c: 62: wait_1_sec();
   838  001F74  EC09  F015         	call	_wait_1_sec	;wreg free
   839                           
   840                           ;lab6pa.c: 63: PORTB = LED_7seg[U];
   841  001F78  5066               	movf	main@U,w,c
   842  001F7A  0D01               	mullw	1
   843  001F7C  0E67               	movlw	low _LED_7seg
   844  001F7E  24F3               	addwf	prodl,w,c
   845  001F80  6ED9               	movwf	fsr2l,c
   846  001F82  0E00               	movlw	high _LED_7seg
   847  001F84  20F4               	addwfc	prodh,w,c
   848  001F86  6EDA               	movwf	fsr2h,c
   849  001F88  50DF               	movf	indf2,w,c
   850  001F8A  6E81               	movwf	3969,c	;volatile
   851                           
   852                           ;lab6pa.c: 64: PORTD = LED_7seg[L];
   853  001F8C  5065               	movf	main@L,w,c
   854  001F8E  0D01               	mullw	1
   855  001F90  0E67               	movlw	low _LED_7seg
   856  001F92  24F3               	addwf	prodl,w,c
   857  001F94  6ED9               	movwf	fsr2l,c
   858  001F96  0E00               	movlw	high _LED_7seg
   859  001F98  20F4               	addwfc	prodh,w,c
   860  001F9A  6EDA               	movwf	fsr2h,c
   861  001F9C  50DF               	movf	indf2,w,c
   862  001F9E  6E83               	movwf	3971,c	;volatile
   863                           
   864                           ;lab6pa.c: 65: PORTDbits.RD7 = 0;
   865  001FA0  9E83               	bcf	3971,7,c	;volatile
   866                           
   867                           ;lab6pa.c: 72: printf ("Voltage = %f \r\n", volt);
   868  001FA2  0E77               	movlw	low STR_1
   869  001FA4  6E41               	movwf	printf@f,c
   870  001FA6  0E10               	movlw	high STR_1
   871  001FA8  6E42               	movwf	printf@f+1,c
   872  001FAA  C074  F043         	movff	_volt,?_printf+2
   873  001FAE  C075  F044         	movff	_volt+1,?_printf+3
   874  001FB2  C076  F045         	movff	_volt+2,?_printf+4
   875  001FB6  EC44  F008         	call	_printf	;wreg free
   876  001FBA  D777               	goto	l2517
   877  001FBC  EF00  F000         	goto	start
   878  001FC0                     __end_of_main:
   879                           	opt stack 0
   880                           tblptru	equ	0xFF8
   881                           tblptrh	equ	0xFF7
   882                           tblptrl	equ	0xFF6
   883                           tablat	equ	0xFF5
   884                           prodh	equ	0xFF4
   885                           prodl	equ	0xFF3
   886                           postinc0	equ	0xFEE
   887                           wreg	equ	0xFE8
   888                           postdec1	equ	0xFE5
   889                           fsr1l	equ	0xFE1
   890                           indf2	equ	0xFDF
   891                           fsr2h	equ	0xFDA
   892                           fsr2l	equ	0xFD9
   893                           status	equ	0xFD8
   894                           
   895 ;; *************** function _wait_1_sec *****************
   896 ;; Defined at:
   897 ;;		line 41 in file "lab6pa.c"
   898 ;; Parameters:    Size  Location     Type
   899 ;;		None
   900 ;; Auto vars:     Size  Location     Type
   901 ;;  j               2    0[COMRAM] int 
   902 ;; Return value:  Size  Location     Type
   903 ;;		None               void
   904 ;; Registers used:
   905 ;;		wreg, status,2, status,0
   906 ;; Tracked objects:
   907 ;;		On entry : 0/0
   908 ;;		On exit  : 0/0
   909 ;;		Unchanged: 0/0
   910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   912 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   914 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   915 ;;Total ram usage:        2 bytes
   916 ;; Hardware stack levels used:    1
   917 ;; This function calls:
   918 ;;		Nothing
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text1
   925  002A12                     __ptext1:
   926                           	opt stack 0
   927  002A12                     _wait_1_sec:
   928                           	opt stack 30
   929                           
   930                           ;lab6pa.c: 43: for (int j=0; j<0xffff; j++);
   931                           
   932                           ;incstack = 0
   933  002A12  0E00               	movlw	0
   934  002A14  6E02               	movwf	wait_1_sec@j+1,c
   935  002A16  0E00               	movlw	0
   936  002A18  6E01               	movwf	wait_1_sec@j,c
   937  002A1A                     l1445:
   938  002A1A  2801               	incf	wait_1_sec@j,w,c
   939  002A1C  E105               	bnz	l1449
   940  002A1E  2802               	incf	wait_1_sec@j+1,w,c
   941  002A20  B4D8               	btfsc	status,2,c
   942  002A22  D006               	goto	l68
   943  002A24  D001               	goto	l1449
   944  002A26  D004               	goto	l68
   945  002A28                     l1449:
   946  002A28  4A01               	infsnz	wait_1_sec@j,f,c
   947  002A2A  2A02               	incf	wait_1_sec@j+1,f,c
   948  002A2C  D7F6               	goto	l1445
   949  002A2E  D7FC               	goto	l1449
   950  002A30                     l68:
   951  002A30  0012               	return		;funcret
   952  002A32                     __end_of_wait_1_sec:
   953                           	opt stack 0
   954                           tblptru	equ	0xFF8
   955                           tblptrh	equ	0xFF7
   956                           tblptrl	equ	0xFF6
   957                           tablat	equ	0xFF5
   958                           prodh	equ	0xFF4
   959                           prodl	equ	0xFF3
   960                           postinc0	equ	0xFEE
   961                           wreg	equ	0xFE8
   962                           postdec1	equ	0xFE5
   963                           fsr1l	equ	0xFE1
   964                           indf2	equ	0xFDF
   965                           fsr2h	equ	0xFDA
   966                           fsr2l	equ	0xFD9
   967                           status	equ	0xFD8
   968                           
   969 ;; *************** function _select_ADC_CH *****************
   970 ;; Defined at:
   971 ;;		line 77 in file "lab6pa.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;  AN_pin          1    wreg     unsigned char 
   974 ;; Auto vars:     Size  Location     Type
   975 ;;  AN_pin          1    0[COMRAM] unsigned char 
   976 ;; Return value:  Size  Location     Type
   977 ;;		None               void
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0, prodl, prodh
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   986 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   988 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   989 ;;Total ram usage:        1 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		_main
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           	psect	text2
   999  002A76                     __ptext2:
  1000                           	opt stack 0
  1001  002A76                     _select_ADC_CH:
  1002                           	opt stack 30
  1003                           
  1004                           ;incstack = 0
  1005                           ;select_ADC_CH@AN_pin stored from wreg
  1006  002A76  6E01               	movwf	select_ADC_CH@AN_pin,c
  1007                           
  1008                           ;lab6pa.c: 79: ADCON0 = AN_pin * 4 + 1;
  1009  002A78  5001               	movf	select_ADC_CH@AN_pin,w,c
  1010  002A7A  0D04               	mullw	4
  1011  002A7C  28F3               	incf	prodl,w,c
  1012  002A7E  6EC2               	movwf	4034,c	;volatile
  1013  002A80  0012               	return		;funcret
  1014  002A82                     __end_of_select_ADC_CH:
  1015                           	opt stack 0
  1016                           tblptru	equ	0xFF8
  1017                           tblptrh	equ	0xFF7
  1018                           tblptrl	equ	0xFF6
  1019                           tablat	equ	0xFF5
  1020                           prodh	equ	0xFF4
  1021                           prodl	equ	0xFF3
  1022                           postinc0	equ	0xFEE
  1023                           wreg	equ	0xFE8
  1024                           postdec1	equ	0xFE5
  1025                           fsr1l	equ	0xFE1
  1026                           indf2	equ	0xFDF
  1027                           fsr2h	equ	0xFDA
  1028                           fsr2l	equ	0xFD9
  1029                           status	equ	0xFD8
  1030                           
  1031 ;; *************** function _printf *****************
  1032 ;; Defined at:
  1033 ;;		line 464 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1034 ;; Parameters:    Size  Location     Type
  1035 ;;  f               2   64[COMRAM] PTR const unsigned char 
  1036 ;;		 -> STR_1(16), 
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;  tmpval          4   90[COMRAM] struct .
  1039 ;;  val             4   84[COMRAM] unsigned long 
  1040 ;;  fval            3   94[COMRAM] unsigned long 
  1041 ;;  cp              3    0        PTR const unsigned char 
  1042 ;;  exp             2   88[COMRAM] int 
  1043 ;;  prec            2   82[COMRAM] int 
  1044 ;;  flag            2   80[COMRAM] unsigned short 
  1045 ;;  ap              2   78[COMRAM] PTR void [1]
  1046 ;;		 -> ?_printf(2), 
  1047 ;;  len             2    0        unsigned int 
  1048 ;;  width           2    0        int 
  1049 ;;  c               1   97[COMRAM] char 
  1050 ;;  d               1    0        unsigned char 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  2   64[COMRAM] int 
  1053 ;; Registers used:
  1054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1060 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1061 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1062 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1063 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1064 ;;Total ram usage:       34 bytes
  1065 ;; Hardware stack levels used:    1
  1066 ;; Hardware stack levels required when called:    3
  1067 ;; This function calls:
  1068 ;;		___awdiv
  1069 ;;		___ftadd
  1070 ;;		___ftge
  1071 ;;		___ftmul
  1072 ;;		___ftneg
  1073 ;;		___ftsub
  1074 ;;		___fttol
  1075 ;;		___lldiv
  1076 ;;		___llmod
  1077 ;;		___lltoft
  1078 ;;		___wmul
  1079 ;;		__div_to_l_
  1080 ;;		__tdiv_to_l_
  1081 ;;		_fround
  1082 ;;		_putch
  1083 ;;		_scale
  1084 ;; This function is called by:
  1085 ;;		_main
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           
  1089                           	psect	text3
  1090  001088                     __ptext3:
  1091                           	opt stack 0
  1092  001088                     _printf:
  1093                           	opt stack 27
  1094                           
  1095                           ;doprnt.c: 466: va_list ap;
  1096                           ;doprnt.c: 499: signed char c;
  1097                           ;doprnt.c: 501: int width;
  1098                           ;doprnt.c: 504: int prec;
  1099                           ;doprnt.c: 508: unsigned short flag;
  1100                           ;doprnt.c: 515: char d;
  1101                           ;doprnt.c: 516: double fval;
  1102                           ;doprnt.c: 517: int exp;
  1103                           ;doprnt.c: 523: union {
  1104                           ;doprnt.c: 524: unsigned long vd;
  1105                           ;doprnt.c: 525: double integ;
  1106                           ;doprnt.c: 526: } tmpval;
  1107                           ;doprnt.c: 528: unsigned long val;
  1108                           ;doprnt.c: 529: unsigned len;
  1109                           ;doprnt.c: 530: const char * cp;
  1110                           ;doprnt.c: 533: *ap = __va_start();
  1111                           
  1112                           ;incstack = 0
  1113  001088  0E43               	movlw	low (?_printf+2)
  1114  00108A  6E4F               	movwf	printf@ap,c
  1115  00108C  0E00               	movlw	high (?_printf+2)
  1116  00108E  6E50               	movwf	printf@ap+1,c
  1117                           
  1118                           ;doprnt.c: 536: while(c = *f++) {
  1119  001090  D2FF               	goto	l2457
  1120  001092                     l2309:
  1121                           
  1122                           ;doprnt.c: 538: if(c != '%')
  1123  001092  0E25               	movlw	37
  1124  001094  1862               	xorwf	printf@c,w,c
  1125  001096  B4D8               	btfsc	status,2,c
  1126  001098  D004               	goto	l2313
  1127                           
  1128                           ;doprnt.c: 540: {
  1129                           ;doprnt.c: 541: (putch(c) );
  1130  00109A  5062               	movf	printf@c,w,c
  1131  00109C  EC2D  F015         	call	_putch
  1132                           
  1133                           ;doprnt.c: 542: continue;
  1134  0010A0  D2F7               	goto	l2457
  1135  0010A2                     l2313:
  1136                           
  1137                           ;doprnt.c: 543: }
  1138                           ;doprnt.c: 548: flag = 0;
  1139  0010A2  0E00               	movlw	0
  1140  0010A4  6E52               	movwf	printf@flag+1,c
  1141  0010A6  0E00               	movlw	0
  1142  0010A8  6E51               	movwf	printf@flag,c
  1143                           
  1144                           ;doprnt.c: 635: switch(c = *f++) {
  1145  0010AA  D005               	goto	l2319
  1146                           
  1147                           ;doprnt.c: 638: goto alldone;
  1148                           
  1149                           ;doprnt.c: 637: case 0:
  1150  0010AC  D2FF               	goto	l172
  1151  0010AE                     l2315:
  1152                           
  1153                           ;doprnt.c: 663: flag |= 0x400;
  1154  0010AE  8452               	bsf	printf@flag+1,2,c
  1155                           
  1156                           ;doprnt.c: 664: break;
  1157  0010B0  D013               	goto	l2321
  1158                           
  1159                           ;doprnt.c: 813: continue;
  1160                           
  1161                           ;doprnt.c: 802: default:
  1162  0010B2  D2EE               	goto	l2457
  1163                           
  1164                           ;doprnt.c: 822: }
  1165  0010B4  D011               	goto	l2321
  1166  0010B6                     l2319:
  1167  0010B6  C041  FFF6         	movff	printf@f,tblptrl
  1168  0010BA  C042  FFF7         	movff	printf@f+1,tblptrh
  1169  0010BE  4A41               	infsnz	printf@f,f,c
  1170  0010C0  2A42               	incf	printf@f+1,f,c
  1171  0010C2                     	if	0	;tblptru may be non-zero
  1172  0010C2                     	endif
  1173  0010C2                     	if	0	;tblptru may be non-zero
  1174  0010C2                     	endif
  1175  0010C2  0008               	tblrd		*
  1176  0010C4  CFF5 F062          	movff	tablat,printf@c
  1177  0010C8  5062               	movf	printf@c,w,c
  1178                           
  1179                           ; Switch size 1, requested type "space"
  1180                           ; Number of cases is 2, Range of values is 0 to 102
  1181                           ; switch strategies available:
  1182                           ; Name         Instructions Cycles
  1183                           ; simple_byte            7     4 (average)
  1184                           ;	Chosen strategy is simple_byte
  1185  0010CA  0A00               	xorlw	0	; case 0
  1186  0010CC  B4D8               	btfsc	status,2,c
  1187  0010CE  D2EE               	goto	l172
  1188  0010D0  0A66               	xorlw	102	; case 102
  1189  0010D2  B4D8               	btfsc	status,2,c
  1190  0010D4  D7EC               	goto	l2315
  1191  0010D6  D2DC               	goto	l2457
  1192  0010D8                     l2321:
  1193                           
  1194                           ;doprnt.c: 825: if(flag & (0x700)) {
  1195  0010D8  0E07               	movlw	7
  1196  0010DA  1452               	andwf	printf@flag+1,w,c
  1197  0010DC  B4D8               	btfsc	status,2,c
  1198  0010DE  D2CA               	goto	l2453
  1199                           
  1200                           ;doprnt.c: 829: prec = 6;
  1201  0010E0  0E00               	movlw	0
  1202  0010E2  6E54               	movwf	printf@prec+1,c
  1203  0010E4  0E06               	movlw	6
  1204  0010E6  6E53               	movwf	printf@prec,c
  1205                           
  1206                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  1207  0010E8  C04F  FFD9         	movff	printf@ap,fsr2l
  1208  0010EC  C050  FFDA         	movff	printf@ap+1,fsr2h
  1209  0010F0  CFDE F05F          	movff	postinc2,printf@fval
  1210  0010F4  CFDE F060          	movff	postinc2,printf@fval+1
  1211  0010F8  CFDD F061          	movff	postdec2,printf@fval+2
  1212  0010FC  0E03               	movlw	3
  1213  0010FE  264F               	addwf	printf@ap,f,c
  1214  001100  0E00               	movlw	0
  1215  001102  2250               	addwfc	printf@ap+1,f,c
  1216                           
  1217                           ;doprnt.c: 831: if(fval < 0.0) {
  1218  001104  AE61               	btfss	printf@fval+2,7,c
  1219  001106  D011               	goto	l2335
  1220                           
  1221                           ;doprnt.c: 832: fval = -fval;
  1222  001108  C05F  F00D         	movff	printf@fval,___ftneg@f1
  1223  00110C  C060  F00E         	movff	printf@fval+1,___ftneg@f1+1
  1224  001110  C061  F00F         	movff	printf@fval+2,___ftneg@f1+2
  1225  001114  ECF7  F014         	call	___ftneg	;wreg free
  1226  001118  C00D  F05F         	movff	?___ftneg,printf@fval
  1227  00111C  C00E  F060         	movff	?___ftneg+1,printf@fval+1
  1228  001120  C00F  F061         	movff	?___ftneg+2,printf@fval+2
  1229                           
  1230                           ;doprnt.c: 833: flag |= 0x03;
  1231  001124  0E03               	movlw	3
  1232  001126  1251               	iorwf	printf@flag,f,c
  1233  001128  D000               	goto	l2335
  1234  00112A                     l2335:
  1235                           
  1236                           ;doprnt.c: 834: }
  1237                           ;doprnt.c: 835: exp = 0;
  1238  00112A  0E00               	movlw	0
  1239  00112C  6E5A               	movwf	printf@exp+1,c
  1240  00112E  0E00               	movlw	0
  1241  001130  6E59               	movwf	printf@exp,c
  1242                           
  1243                           ;doprnt.c: 836: if( fval!=0) {
  1244  001132  505F               	movf	printf@fval,w,c
  1245  001134  1060               	iorwf	printf@fval+1,w,c
  1246  001136  1061               	iorwf	printf@fval+2,w,c
  1247  001138  B4D8               	btfsc	status,2,c
  1248  00113A  D085               	goto	l2363
  1249                           
  1250                           ;doprnt.c: 837: (void)(*(&exp) = ((*(unsigned long *)&fval >> 15) & 255) - 126);
  1251  00113C  0E82               	movlw	130
  1252  00113E  6E46               	movwf	??_printf& (0+255),c
  1253  001140  0EFF               	movlw	255
  1254  001142  6E47               	movwf	(??_printf+1)& (0+255),c
  1255  001144  C05F  F048         	movff	printf@fval,??_printf+2
  1256  001148  C060  F049         	movff	printf@fval+1,??_printf+3
  1257  00114C  C061  F04A         	movff	printf@fval+2,??_printf+4
  1258  001150  C062  F04B         	movff	printf@fval+3,??_printf+5
  1259  001154  0E10               	movlw	16
  1260  001156  D005               	goto	u2420
  1261  001158                     u2425:
  1262  001158  90D8               	bcf	status,0,c
  1263  00115A  324B               	rrcf	??_printf+5,f,c
  1264  00115C  324A               	rrcf	??_printf+4,f,c
  1265  00115E  3249               	rrcf	??_printf+3,f,c
  1266  001160  3248               	rrcf	??_printf+2,f,c
  1267  001162                     u2420:
  1268  001162  2EE8               	decfsz	wreg,f,c
  1269  001164  D7F9               	goto	u2425
  1270  001166  5048               	movf	??_printf+2,w,c
  1271  001168  2446               	addwf	??_printf,w,c
  1272  00116A  6E59               	movwf	printf@exp,c
  1273  00116C  0E00               	movlw	0
  1274  00116E  2047               	addwfc	??_printf+1,w,c
  1275  001170  6E5A               	movwf	printf@exp+1,c
  1276                           
  1277                           ;doprnt.c: 838: exp--;
  1278  001172  0659               	decf	printf@exp,f,c
  1279  001174  A0D8               	btfss	status,0,c
  1280  001176  065A               	decf	printf@exp+1,f,c
  1281                           
  1282                           ;doprnt.c: 839: exp *= 3;
  1283  001178  C059  F00F         	movff	printf@exp,___wmul@multiplier
  1284  00117C  C05A  F010         	movff	printf@exp+1,___wmul@multiplier+1
  1285  001180  0E00               	movlw	0
  1286  001182  6E12               	movwf	___wmul@multiplicand+1,c
  1287  001184  0E03               	movlw	3
  1288  001186  6E11               	movwf	___wmul@multiplicand,c
  1289  001188  ECAA  F014         	call	___wmul	;wreg free
  1290  00118C  C00F  F059         	movff	?___wmul,printf@exp
  1291  001190  C010  F05A         	movff	?___wmul+1,printf@exp+1
  1292                           
  1293                           ;doprnt.c: 840: exp /= 10;
  1294  001194  C059  F007         	movff	printf@exp,___awdiv@dividend
  1295  001198  C05A  F008         	movff	printf@exp+1,___awdiv@dividend+1
  1296  00119C  0E00               	movlw	0
  1297  00119E  6E0A               	movwf	___awdiv@divisor+1,c
  1298  0011A0  0E0A               	movlw	10
  1299  0011A2  6E09               	movwf	___awdiv@divisor,c
  1300  0011A4  ECB0  F012         	call	___awdiv	;wreg free
  1301  0011A8  C007  F059         	movff	?___awdiv,printf@exp
  1302  0011AC  C008  F05A         	movff	?___awdiv+1,printf@exp+1
  1303                           
  1304                           ;doprnt.c: 841: if(exp < 0)
  1305  0011B0  AE5A               	btfss	printf@exp+1,7,c
  1306  0011B2  D004               	goto	l2351
  1307                           
  1308                           ;doprnt.c: 842: exp--;
  1309  0011B4  0659               	decf	printf@exp,f,c
  1310  0011B6  A0D8               	btfss	status,0,c
  1311  0011B8  065A               	decf	printf@exp+1,f,c
  1312  0011BA  D000               	goto	l2351
  1313  0011BC                     l2351:
  1314                           
  1315                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  1316  0011BC  5059               	movf	printf@exp,w,c
  1317  0011BE  0800               	sublw	0
  1318  0011C0  EC57  F00B         	call	_scale
  1319  0011C4  C02B  F05B         	movff	?_scale,printf@tmpval
  1320  0011C8  C02C  F05C         	movff	?_scale+1,printf@tmpval+1
  1321  0011CC  C02D  F05D         	movff	?_scale+2,printf@tmpval+2
  1322                           
  1323                           ;doprnt.c: 847: tmpval.integ *= fval;
  1324  0011D0  C05B  F01C         	movff	printf@tmpval,___ftmul@f1
  1325  0011D4  C05C  F01D         	movff	printf@tmpval+1,___ftmul@f1+1
  1326  0011D8  C05D  F01E         	movff	printf@tmpval+2,___ftmul@f1+2
  1327  0011DC  C05F  F01F         	movff	printf@fval,___ftmul@f2
  1328  0011E0  C060  F020         	movff	printf@fval+1,___ftmul@f2+1
  1329  0011E4  C061  F021         	movff	printf@fval+2,___ftmul@f2+2
  1330  0011E8  ECED  F010         	call	___ftmul	;wreg free
  1331  0011EC  C01C  F05B         	movff	?___ftmul,printf@tmpval
  1332  0011F0  C01D  F05C         	movff	?___ftmul+1,printf@tmpval+1
  1333  0011F4  C01E  F05D         	movff	?___ftmul+2,printf@tmpval+2
  1334                           
  1335                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  1336  0011F8  C05B  F001         	movff	printf@tmpval,___ftge@ff1
  1337  0011FC  C05C  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1338  001200  C05D  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1339  001204  0E00               	movlw	0
  1340  001206  6E04               	movwf	___ftge@ff2,c
  1341  001208  0E80               	movlw	128
  1342  00120A  6E05               	movwf	___ftge@ff2+1,c
  1343  00120C  0E3F               	movlw	63
  1344  00120E  6E06               	movwf	___ftge@ff2+2,c
  1345  001210  ECFB  F012         	call	___ftge	;wreg free
  1346  001214  B0D8               	btfsc	status,0,c
  1347  001216  D004               	goto	l2359
  1348                           
  1349                           ;doprnt.c: 849: exp--;
  1350  001218  0659               	decf	printf@exp,f,c
  1351  00121A  A0D8               	btfss	status,0,c
  1352  00121C  065A               	decf	printf@exp+1,f,c
  1353  00121E  D013               	goto	l2363
  1354  001220                     l2359:
  1355                           
  1356                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  1357  001220  C05B  F001         	movff	printf@tmpval,___ftge@ff1
  1358  001224  C05C  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1359  001228  C05D  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1360  00122C  0E00               	movlw	0
  1361  00122E  6E04               	movwf	___ftge@ff2,c
  1362  001230  0E20               	movlw	32
  1363  001232  6E05               	movwf	___ftge@ff2+1,c
  1364  001234  0E41               	movlw	65
  1365  001236  6E06               	movwf	___ftge@ff2+2,c
  1366  001238  ECFB  F012         	call	___ftge	;wreg free
  1367  00123C  A0D8               	btfss	status,0,c
  1368  00123E  D003               	goto	l2363
  1369                           
  1370                           ;doprnt.c: 851: exp++;
  1371  001240  4A59               	infsnz	printf@exp,f,c
  1372  001242  2A5A               	incf	printf@exp+1,f,c
  1373  001244  D000               	goto	l2363
  1374  001246                     l2363:
  1375                           
  1376                           ;doprnt.c: 852: }
  1377                           ;doprnt.c: 1112: if(prec <= 12)
  1378  001246  BE54               	btfsc	printf@prec+1,7,c
  1379  001248  D006               	goto	l2365
  1380  00124A  5054               	movf	printf@prec+1,w,c
  1381  00124C  E11C               	bnz	l2367
  1382  00124E  0E0D               	movlw	13
  1383  001250  5C53               	subwf	printf@prec,w,c
  1384  001252  B0D8               	btfsc	status,0,c
  1385  001254  D018               	goto	l2367
  1386  001256                     l2365:
  1387                           
  1388                           ;doprnt.c: 1113: fval += fround(prec);
  1389  001256  C05F  F010         	movff	printf@fval,___ftadd@f1
  1390  00125A  C060  F011         	movff	printf@fval+1,___ftadd@f1+1
  1391  00125E  C061  F012         	movff	printf@fval+2,___ftadd@f1+2
  1392  001262  5053               	movf	printf@prec,w,c
  1393  001264  EC47  F00D         	call	_fround
  1394  001268  C02B  F013         	movff	?_fround,___ftadd@f2
  1395  00126C  C02C  F014         	movff	?_fround+1,___ftadd@f2+1
  1396  001270  C02D  F015         	movff	?_fround+2,___ftadd@f2+2
  1397  001274  EC69  F00E         	call	___ftadd	;wreg free
  1398  001278  C010  F05F         	movff	?___ftadd,printf@fval
  1399  00127C  C011  F060         	movff	?___ftadd+1,printf@fval+1
  1400  001280  C012  F061         	movff	?___ftadd+2,printf@fval+2
  1401  001284  D000               	goto	l2367
  1402  001286                     l2367:
  1403                           
  1404                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  1405  001286  BE5A               	btfsc	printf@exp+1,7,c
  1406  001288  D006               	goto	l2369
  1407  00128A  505A               	movf	printf@exp+1,w,c
  1408  00128C  E120               	bnz	l2375
  1409  00128E  0E0A               	movlw	10
  1410  001290  5C59               	subwf	printf@exp,w,c
  1411  001292  B0D8               	btfsc	status,0,c
  1412  001294  D01C               	goto	l2375
  1413  001296                     l2369:
  1414  001296  505F               	movf	printf@fval,w,c
  1415  001298  1060               	iorwf	printf@fval+1,w,c
  1416  00129A  1061               	iorwf	printf@fval+2,w,c
  1417  00129C  B4D8               	btfsc	status,2,c
  1418  00129E  D06D               	goto	l2389
  1419  0012A0  C05F  F032         	movff	printf@fval,___fttol@f1
  1420  0012A4  C060  F033         	movff	printf@fval+1,___fttol@f1+1
  1421  0012A8  C061  F034         	movff	printf@fval+2,___fttol@f1+2
  1422  0012AC  EC69  F011         	call	___fttol	;wreg free
  1423  0012B0  5032               	movf	?___fttol,w,c
  1424  0012B2  1033               	iorwf	?___fttol+1,w,c
  1425  0012B4  1034               	iorwf	?___fttol+2,w,c
  1426  0012B6  1035               	iorwf	?___fttol+3,w,c
  1427  0012B8  B4D8               	btfsc	status,2,c
  1428  0012BA  BE5A               	btfsc	printf@exp+1,7,c
  1429  0012BC  D05E               	goto	l2389
  1430  0012BE  505A               	movf	printf@exp+1,w,c
  1431  0012C0  E106               	bnz	l2375
  1432  0012C2  0E02               	movlw	2
  1433  0012C4  5C59               	subwf	printf@exp,w,c
  1434  0012C6  B0D8               	btfsc	status,0,c
  1435  0012C8  D002               	goto	l2375
  1436  0012CA  D057               	goto	l2389
  1437  0012CC  D000               	goto	l2375
  1438  0012CE                     l2375:
  1439                           
  1440                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  1441  0012CE  C05B  F001         	movff	printf@tmpval,___ftge@ff1
  1442  0012D2  C05C  F002         	movff	printf@tmpval+1,___ftge@ff1+1
  1443  0012D6  C05D  F003         	movff	printf@tmpval+2,___ftge@ff1+2
  1444  0012DA  0E70               	movlw	112
  1445  0012DC  6E04               	movwf	___ftge@ff2,c
  1446  0012DE  0E89               	movlw	137
  1447  0012E0  6E05               	movwf	___ftge@ff2+1,c
  1448  0012E2  0E40               	movlw	64
  1449  0012E4  6E06               	movwf	___ftge@ff2+2,c
  1450  0012E6  ECFB  F012         	call	___ftge	;wreg free
  1451  0012EA  B0D8               	btfsc	status,0,c
  1452  0012EC  D002               	goto	l2379
  1453                           
  1454                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  1455  0012EE  0EF7               	movlw	247
  1456  0012F0  D001               	goto	L1
  1457  0012F2                     l2379:
  1458                           
  1459                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  1460  0012F2  0EF8               	movlw	248
  1461  0012F4                     L1:
  1462  0012F4  2659               	addwf	printf@exp,f,c
  1463  0012F6  0EFF               	movlw	255
  1464  0012F8  225A               	addwfc	printf@exp+1,f,c
  1465  0012FA  D000               	goto	l2381
  1466  0012FC                     l2381:
  1467                           
  1468                           ;doprnt.c: 1124: }
  1469                           ;doprnt.c: 1125: tmpval.integ = scale(exp);
  1470  0012FC  5059               	movf	printf@exp,w,c
  1471  0012FE  EC57  F00B         	call	_scale
  1472  001302  C02B  F05B         	movff	?_scale,printf@tmpval
  1473  001306  C02C  F05C         	movff	?_scale+1,printf@tmpval+1
  1474  00130A  C02D  F05D         	movff	?_scale+2,printf@tmpval+2
  1475                           
  1476                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  1477  00130E  D017               	goto	l2385
  1478  001310  C05F  F001         	movff	printf@fval,__div_to_l_@f1
  1479  001314  C060  F002         	movff	printf@fval+1,__div_to_l_@f1+1
  1480  001318  C061  F003         	movff	printf@fval+2,__div_to_l_@f1+2
  1481  00131C  C05B  F004         	movff	printf@tmpval,__div_to_l_@f2
  1482  001320  C05C  F005         	movff	printf@tmpval+1,__div_to_l_@f2+1
  1483  001324  C05D  F006         	movff	printf@tmpval+2,__div_to_l_@f2+2
  1484  001328  EC68  F010         	call	__div_to_l_	;wreg free
  1485  00132C  C001  F055         	movff	?__div_to_l_,printf@val
  1486  001330  C002  F056         	movff	?__div_to_l_+1,printf@val+1
  1487  001334  C003  F057         	movff	?__div_to_l_+2,printf@val+2
  1488  001338  C004  F058         	movff	?__div_to_l_+3,printf@val+3
  1489  00133C  D017               	goto	l2387
  1490  00133E                     l2385:
  1491  00133E  C05F  F001         	movff	printf@fval,__tdiv_to_l_@f1
  1492  001342  C060  F002         	movff	printf@fval+1,__tdiv_to_l_@f1+1
  1493  001346  C061  F003         	movff	printf@fval+2,__tdiv_to_l_@f1+2
  1494  00134A  C05B  F004         	movff	printf@tmpval,__tdiv_to_l_@f2
  1495  00134E  C05C  F005         	movff	printf@tmpval+1,__tdiv_to_l_@f2+1
  1496  001352  C05D  F006         	movff	printf@tmpval+2,__tdiv_to_l_@f2+2
  1497  001356  ECE0  F00F         	call	__tdiv_to_l_	;wreg free
  1498  00135A  C001  F055         	movff	?__tdiv_to_l_,printf@val
  1499  00135E  C002  F056         	movff	?__tdiv_to_l_+1,printf@val+1
  1500  001362  C003  F057         	movff	?__tdiv_to_l_+2,printf@val+2
  1501  001366  C004  F058         	movff	?__tdiv_to_l_+3,printf@val+3
  1502  00136A  D000               	goto	l2387
  1503  00136C                     l2387:
  1504                           
  1505                           ;doprnt.c: 1129: fval = 0.0;
  1506  00136C  0E00               	movlw	0
  1507  00136E  6E5F               	movwf	printf@fval,c
  1508  001370  0E00               	movlw	0
  1509  001372  6E60               	movwf	printf@fval+1,c
  1510  001374  0E00               	movlw	0
  1511  001376  6E61               	movwf	printf@fval+2,c
  1512                           
  1513                           ;doprnt.c: 1130: } else {
  1514  001378  D033               	goto	l2393
  1515  00137A                     l2389:
  1516                           
  1517                           ;doprnt.c: 1131: val = (unsigned long)fval;
  1518  00137A  C05F  F032         	movff	printf@fval,___fttol@f1
  1519  00137E  C060  F033         	movff	printf@fval+1,___fttol@f1+1
  1520  001382  C061  F034         	movff	printf@fval+2,___fttol@f1+2
  1521  001386  EC69  F011         	call	___fttol	;wreg free
  1522  00138A  C032  F055         	movff	?___fttol,printf@val
  1523  00138E  C033  F056         	movff	?___fttol+1,printf@val+1
  1524  001392  C034  F057         	movff	?___fttol+2,printf@val+2
  1525  001396  C035  F058         	movff	?___fttol+3,printf@val+3
  1526                           
  1527                           ;doprnt.c: 1132: fval -= (double)val;
  1528  00139A  C05F  F01C         	movff	printf@fval,___ftsub@f1
  1529  00139E  C060  F01D         	movff	printf@fval+1,___ftsub@f1+1
  1530  0013A2  C061  F01E         	movff	printf@fval+2,___ftsub@f1+2
  1531  0013A6  C055  F009         	movff	printf@val,___lltoft@c
  1532  0013AA  C056  F00A         	movff	printf@val+1,___lltoft@c+1
  1533  0013AE  C057  F00B         	movff	printf@val+2,___lltoft@c+2
  1534  0013B2  C058  F00C         	movff	printf@val+3,___lltoft@c+3
  1535  0013B6  EC3D  F014         	call	___lltoft	;wreg free
  1536  0013BA  C009  F01F         	movff	?___lltoft,___ftsub@f2
  1537  0013BE  C00A  F020         	movff	?___lltoft+1,___ftsub@f2+1
  1538  0013C2  C00B  F021         	movff	?___lltoft+2,___ftsub@f2+2
  1539  0013C6  EC6D  F014         	call	___ftsub	;wreg free
  1540  0013CA  C01C  F05F         	movff	?___ftsub,printf@fval
  1541  0013CE  C01D  F060         	movff	?___ftsub+1,printf@fval+1
  1542  0013D2  C01E  F061         	movff	?___ftsub+2,printf@fval+2
  1543                           
  1544                           ;doprnt.c: 1133: exp = 0;
  1545  0013D6  0E00               	movlw	0
  1546  0013D8  6E5A               	movwf	printf@exp+1,c
  1547  0013DA  0E00               	movlw	0
  1548  0013DC  6E59               	movwf	printf@exp,c
  1549  0013DE  D000               	goto	l2393
  1550  0013E0                     l2393:
  1551                           
  1552                           ;doprnt.c: 1134: }
  1553                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  1554  0013E0  0E01               	movlw	1
  1555  0013E2  6E62               	movwf	printf@c,c
  1556  0013E4                     l2395:
  1557  0013E4  0E0A               	movlw	10
  1558  0013E6  1862               	xorwf	printf@c,w,c
  1559  0013E8  B4D8               	btfsc	status,2,c
  1560  0013EA  D01C               	goto	l2407
  1561  0013EC  D001               	goto	l2399
  1562  0013EE  D01A               	goto	l2407
  1563  0013F0                     l2399:
  1564                           
  1565                           ;doprnt.c: 1137: if(val < dpowers[c])
  1566  0013F0  5062               	movf	printf@c,w,c
  1567  0013F2  0D04               	mullw	4
  1568  0013F4  0E01               	movlw	low _dpowers
  1569  0013F6  24F3               	addwf	prodl,w,c
  1570  0013F8  6EF6               	movwf	tblptrl,c
  1571  0013FA  0E10               	movlw	high _dpowers
  1572  0013FC  20F4               	addwfc	prodh,w,c
  1573  0013FE  6EF7               	movwf	tblptrh,c
  1574  001400                     	if	0	;There are less than 3 active tblptr bytes
  1575  001400                     	endif
  1576  001400  0009               	tblrd		*+
  1577  001402  50F5               	movf	tablat,w,c
  1578  001404  5C55               	subwf	printf@val,w,c
  1579  001406  0009               	tblrd		*+
  1580  001408  50F5               	movf	tablat,w,c
  1581  00140A  5856               	subwfb	printf@val+1,w,c
  1582  00140C  0009               	tblrd		*+
  1583  00140E  50F5               	movf	tablat,w,c
  1584  001410  5857               	subwfb	printf@val+2,w,c
  1585  001412  0009               	tblrd		*+
  1586  001414  50F5               	movf	tablat,w,c
  1587  001416  5858               	subwfb	printf@val+3,w,c
  1588  001418  A0D8               	btfss	status,0,c
  1589  00141A  D004               	goto	l2407
  1590  00141C  D001               	goto	l2403
  1591                           
  1592                           ;doprnt.c: 1138: break;
  1593  00141E  D002               	goto	l2407
  1594  001420                     l2403:
  1595  001420  2A62               	incf	printf@c,f,c
  1596  001422  D7E0               	goto	l2395
  1597  001424                     l2407:
  1598                           
  1599                           ;doprnt.c: 1175: {
  1600                           ;doprnt.c: 1188: if(flag & 0x03)
  1601  001424  0E03               	movlw	3
  1602  001426  1451               	andwf	printf@flag,w,c
  1603  001428  6E46               	movwf	??_printf& (0+255),c
  1604  00142A  0E00               	movlw	0
  1605  00142C  1452               	andwf	printf@flag+1,w,c
  1606  00142E  6E47               	movwf	(??_printf+1)& (0+255),c
  1607  001430  5046               	movf	??_printf,w,c
  1608  001432  1047               	iorwf	??_printf+1,w,c
  1609  001434  B4D8               	btfsc	status,2,c
  1610  001436  D049               	goto	l2417
  1611                           
  1612                           ;doprnt.c: 1190: (putch('-') );
  1613  001438  0E2D               	movlw	45
  1614  00143A  EC2D  F015         	call	_putch
  1615                           
  1616                           ;doprnt.c: 1195: }
  1617                           ;doprnt.c: 1196: while(c--) {
  1618  00143E  D045               	goto	l2417
  1619  001440                     l2411:
  1620                           
  1621                           ;doprnt.c: 1200: {
  1622                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  1623  001440  C055  F001         	movff	printf@val,___lldiv@dividend
  1624  001444  C056  F002         	movff	printf@val+1,___lldiv@dividend+1
  1625  001448  C057  F003         	movff	printf@val+2,___lldiv@dividend+2
  1626  00144C  C058  F004         	movff	printf@val+3,___lldiv@dividend+3
  1627  001450  5062               	movf	printf@c,w,c
  1628  001452  0D04               	mullw	4
  1629  001454  0E01               	movlw	low _dpowers
  1630  001456  24F3               	addwf	prodl,w,c
  1631  001458  6EF6               	movwf	tblptrl,c
  1632  00145A  0E10               	movlw	high _dpowers
  1633  00145C  20F4               	addwfc	prodh,w,c
  1634  00145E  6EF7               	movwf	tblptrh,c
  1635  001460                     	if	0	;There are less than 3 active tblptr bytes
  1636  001460                     	endif
  1637  001460  0009               	tblrd		*+
  1638  001462  CFF5 F005          	movff	tablat,___lldiv@divisor
  1639  001466  0009               	tblrd		*+
  1640  001468  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1641  00146C  0009               	tblrd		*+
  1642  00146E  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1643  001472  000A               	tblrd		*-
  1644  001474  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1645  001478  EC46  F013         	call	___lldiv	;wreg free
  1646  00147C  C001  F05B         	movff	?___lldiv,printf@tmpval
  1647  001480  C002  F05C         	movff	?___lldiv+1,printf@tmpval+1
  1648  001484  C003  F05D         	movff	?___lldiv+2,printf@tmpval+2
  1649  001488  C004  F05E         	movff	?___lldiv+3,printf@tmpval+3
  1650                           
  1651                           ;doprnt.c: 1202: tmpval.vd %= 10;
  1652  00148C  C05B  F001         	movff	printf@tmpval,___llmod@dividend
  1653  001490  C05C  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  1654  001494  C05D  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  1655  001498  C05E  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  1656  00149C  0E0A               	movlw	10
  1657  00149E  6E05               	movwf	___llmod@divisor,c
  1658  0014A0  0E00               	movlw	0
  1659  0014A2  6E06               	movwf	___llmod@divisor+1,c
  1660  0014A4  0E00               	movlw	0
  1661  0014A6  6E07               	movwf	___llmod@divisor+2,c
  1662  0014A8  0E00               	movlw	0
  1663  0014AA  6E08               	movwf	___llmod@divisor+3,c
  1664  0014AC  ECCD  F013         	call	___llmod	;wreg free
  1665  0014B0  C001  F05B         	movff	?___llmod,printf@tmpval
  1666  0014B4  C002  F05C         	movff	?___llmod+1,printf@tmpval+1
  1667  0014B8  C003  F05D         	movff	?___llmod+2,printf@tmpval+2
  1668  0014BC  C004  F05E         	movff	?___llmod+3,printf@tmpval+3
  1669                           
  1670                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  1671  0014C0  505B               	movf	printf@tmpval,w,c
  1672  0014C2  0F30               	addlw	48
  1673  0014C4  EC2D  F015         	call	_putch
  1674  0014C8  D000               	goto	l2417
  1675  0014CA                     l2417:
  1676  0014CA  0662               	decf	printf@c,f,c
  1677  0014CC  2862               	incf	printf@c,w,c
  1678  0014CE  B4D8               	btfsc	status,2,c
  1679  0014D0  D009               	goto	l2423
  1680  0014D2  D7B6               	goto	l2411
  1681                           
  1682                           ;doprnt.c: 1204: }
  1683                           ;doprnt.c: 1206: }
  1684                           ;doprnt.c: 1207: while(exp > 0) {
  1685  0014D4  D007               	goto	l2423
  1686  0014D6                     l2419:
  1687                           
  1688                           ;doprnt.c: 1208: (putch('0') );
  1689  0014D6  0E30               	movlw	48
  1690  0014D8  EC2D  F015         	call	_putch
  1691                           
  1692                           ;doprnt.c: 1209: exp--;
  1693  0014DC  0659               	decf	printf@exp,f,c
  1694  0014DE  A0D8               	btfss	status,0,c
  1695  0014E0  065A               	decf	printf@exp+1,f,c
  1696  0014E2  D000               	goto	l2423
  1697  0014E4                     l2423:
  1698  0014E4  BE5A               	btfsc	printf@exp+1,7,c
  1699  0014E6  D005               	goto	l2425
  1700  0014E8  505A               	movf	printf@exp+1,w,c
  1701  0014EA  E1F5               	bnz	l2419
  1702  0014EC  0459               	decf	printf@exp,w,c
  1703  0014EE  B0D8               	btfsc	status,0,c
  1704  0014F0  D7F2               	goto	l2419
  1705  0014F2                     l2425:
  1706                           
  1707                           ;doprnt.c: 1210: }
  1708                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  1709  0014F2  BE54               	btfsc	printf@prec+1,7,c
  1710  0014F4  D009               	goto	l161
  1711  0014F6  5054               	movf	printf@prec+1,w,c
  1712  0014F8  E104               	bnz	u2580
  1713  0014FA  0E09               	movlw	9
  1714  0014FC  5C53               	subwf	printf@prec,w,c
  1715  0014FE  A0D8               	btfss	status,0,c
  1716  001500  D003               	goto	l161
  1717  001502                     u2580:
  1718                           
  1719                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  1720  001502  0E08               	movlw	8
  1721  001504  6E62               	movwf	printf@c,c
  1722  001506  D003               	goto	l2429
  1723  001508                     l161:
  1724                           
  1725                           ;doprnt.c: 1213: else
  1726                           ;doprnt.c: 1214: c = prec;
  1727  001508  C053  F062         	movff	printf@prec,printf@c
  1728  00150C  D000               	goto	l2429
  1729  00150E                     l2429:
  1730                           
  1731                           ;doprnt.c: 1215: prec -= c;
  1732  00150E  5062               	movf	printf@c,w,c
  1733  001510  5E53               	subwf	printf@prec,f,c
  1734  001512  0E00               	movlw	0
  1735  001514  BE62               	btfsc	printf@c,7,c
  1736  001516  0EFF               	movlw	255
  1737  001518  5A54               	subwfb	printf@prec+1,f,c
  1738                           
  1739                           ;doprnt.c: 1219: if(c)
  1740  00151A  5062               	movf	printf@c,w,c
  1741  00151C  B4D8               	btfsc	status,2,c
  1742  00151E  D004               	goto	l2435
  1743                           
  1744                           ;doprnt.c: 1221: (putch('.') );
  1745  001520  0E2E               	movlw	46
  1746  001522  EC2D  F015         	call	_putch
  1747  001526  D000               	goto	l2435
  1748  001528                     l2435:
  1749                           
  1750                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1751  001528  5062               	movf	printf@c,w,c
  1752  00152A  EC57  F00B         	call	_scale
  1753  00152E  C02B  F04C         	movff	?_scale,_printf$1095
  1754  001532  C02C  F04D         	movff	?_scale+1,_printf$1095+1
  1755  001536  C02D  F04E         	movff	?_scale+2,_printf$1095+2
  1756                           
  1757                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  1758  00153A  C05F  F01F         	movff	printf@fval,___ftmul@f2
  1759  00153E  C060  F020         	movff	printf@fval+1,___ftmul@f2+1
  1760  001542  C061  F021         	movff	printf@fval+2,___ftmul@f2+2
  1761  001546  C04C  F01C         	movff	_printf$1095,___ftmul@f1
  1762  00154A  C04D  F01D         	movff	_printf$1095+1,___ftmul@f1+1
  1763  00154E  C04E  F01E         	movff	_printf$1095+2,___ftmul@f1+2
  1764  001552  ECED  F010         	call	___ftmul	;wreg free
  1765  001556  C01C  F032         	movff	?___ftmul,___fttol@f1
  1766  00155A  C01D  F033         	movff	?___ftmul+1,___fttol@f1+1
  1767  00155E  C01E  F034         	movff	?___ftmul+2,___fttol@f1+2
  1768  001562  EC69  F011         	call	___fttol	;wreg free
  1769  001566  C032  F055         	movff	?___fttol,printf@val
  1770  00156A  C033  F056         	movff	?___fttol+1,printf@val+1
  1771  00156E  C034  F057         	movff	?___fttol+2,printf@val+2
  1772  001572  C035  F058         	movff	?___fttol+3,printf@val+3
  1773                           
  1774                           ;doprnt.c: 1228: while(c--) {
  1775  001576  D06B               	goto	l2445
  1776  001578                     l2439:
  1777                           
  1778                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  1779  001578  C055  F001         	movff	printf@val,___lldiv@dividend
  1780  00157C  C056  F002         	movff	printf@val+1,___lldiv@dividend+1
  1781  001580  C057  F003         	movff	printf@val+2,___lldiv@dividend+2
  1782  001584  C058  F004         	movff	printf@val+3,___lldiv@dividend+3
  1783  001588  5062               	movf	printf@c,w,c
  1784  00158A  0D04               	mullw	4
  1785  00158C  0E01               	movlw	low _dpowers
  1786  00158E  24F3               	addwf	prodl,w,c
  1787  001590  6EF6               	movwf	tblptrl,c
  1788  001592  0E10               	movlw	high _dpowers
  1789  001594  20F4               	addwfc	prodh,w,c
  1790  001596  6EF7               	movwf	tblptrh,c
  1791  001598                     	if	0	;There are less than 3 active tblptr bytes
  1792  001598                     	endif
  1793  001598  0009               	tblrd		*+
  1794  00159A  CFF5 F005          	movff	tablat,___lldiv@divisor
  1795  00159E  0009               	tblrd		*+
  1796  0015A0  CFF5 F006          	movff	tablat,___lldiv@divisor+1
  1797  0015A4  0009               	tblrd		*+
  1798  0015A6  CFF5 F007          	movff	tablat,___lldiv@divisor+2
  1799  0015AA  000A               	tblrd		*-
  1800  0015AC  CFF5 F008          	movff	tablat,___lldiv@divisor+3
  1801  0015B0  EC46  F013         	call	___lldiv	;wreg free
  1802  0015B4  C001  F05B         	movff	?___lldiv,printf@tmpval
  1803  0015B8  C002  F05C         	movff	?___lldiv+1,printf@tmpval+1
  1804  0015BC  C003  F05D         	movff	?___lldiv+2,printf@tmpval+2
  1805  0015C0  C004  F05E         	movff	?___lldiv+3,printf@tmpval+3
  1806                           
  1807                           ;doprnt.c: 1230: tmpval.vd %= 10;
  1808  0015C4  C05B  F001         	movff	printf@tmpval,___llmod@dividend
  1809  0015C8  C05C  F002         	movff	printf@tmpval+1,___llmod@dividend+1
  1810  0015CC  C05D  F003         	movff	printf@tmpval+2,___llmod@dividend+2
  1811  0015D0  C05E  F004         	movff	printf@tmpval+3,___llmod@dividend+3
  1812  0015D4  0E0A               	movlw	10
  1813  0015D6  6E05               	movwf	___llmod@divisor,c
  1814  0015D8  0E00               	movlw	0
  1815  0015DA  6E06               	movwf	___llmod@divisor+1,c
  1816  0015DC  0E00               	movlw	0
  1817  0015DE  6E07               	movwf	___llmod@divisor+2,c
  1818  0015E0  0E00               	movlw	0
  1819  0015E2  6E08               	movwf	___llmod@divisor+3,c
  1820  0015E4  ECCD  F013         	call	___llmod	;wreg free
  1821  0015E8  C001  F05B         	movff	?___llmod,printf@tmpval
  1822  0015EC  C002  F05C         	movff	?___llmod+1,printf@tmpval+1
  1823  0015F0  C003  F05D         	movff	?___llmod+2,printf@tmpval+2
  1824  0015F4  C004  F05E         	movff	?___llmod+3,printf@tmpval+3
  1825                           
  1826                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  1827  0015F8  505B               	movf	printf@tmpval,w,c
  1828  0015FA  0F30               	addlw	48
  1829  0015FC  EC2D  F015         	call	_putch
  1830                           
  1831                           ;doprnt.c: 1232: val %= dpowers[c];
  1832  001600  C055  F001         	movff	printf@val,___llmod@dividend
  1833  001604  C056  F002         	movff	printf@val+1,___llmod@dividend+1
  1834  001608  C057  F003         	movff	printf@val+2,___llmod@dividend+2
  1835  00160C  C058  F004         	movff	printf@val+3,___llmod@dividend+3
  1836  001610  5062               	movf	printf@c,w,c
  1837  001612  0D04               	mullw	4
  1838  001614  0E01               	movlw	low _dpowers
  1839  001616  24F3               	addwf	prodl,w,c
  1840  001618  6EF6               	movwf	tblptrl,c
  1841  00161A  0E10               	movlw	high _dpowers
  1842  00161C  20F4               	addwfc	prodh,w,c
  1843  00161E  6EF7               	movwf	tblptrh,c
  1844  001620                     	if	0	;There are less than 3 active tblptr bytes
  1845  001620                     	endif
  1846  001620  0009               	tblrd		*+
  1847  001622  CFF5 F005          	movff	tablat,___llmod@divisor
  1848  001626  0009               	tblrd		*+
  1849  001628  CFF5 F006          	movff	tablat,___llmod@divisor+1
  1850  00162C  0009               	tblrd		*+
  1851  00162E  CFF5 F007          	movff	tablat,___llmod@divisor+2
  1852  001632  000A               	tblrd		*-
  1853  001634  CFF5 F008          	movff	tablat,___llmod@divisor+3
  1854  001638  ECCD  F013         	call	___llmod	;wreg free
  1855  00163C  C001  F055         	movff	?___llmod,printf@val
  1856  001640  C002  F056         	movff	?___llmod+1,printf@val+1
  1857  001644  C003  F057         	movff	?___llmod+2,printf@val+2
  1858  001648  C004  F058         	movff	?___llmod+3,printf@val+3
  1859  00164C  D000               	goto	l2445
  1860  00164E                     l2445:
  1861  00164E  0662               	decf	printf@c,f,c
  1862  001650  2862               	incf	printf@c,w,c
  1863  001652  B4D8               	btfsc	status,2,c
  1864  001654  D009               	goto	l2451
  1865  001656  D790               	goto	l2439
  1866                           
  1867                           ;doprnt.c: 1233: }
  1868                           ;doprnt.c: 1235: while(prec) {
  1869  001658  D007               	goto	l2451
  1870  00165A                     l2447:
  1871                           
  1872                           ;doprnt.c: 1236: (putch('0') );
  1873  00165A  0E30               	movlw	48
  1874  00165C  EC2D  F015         	call	_putch
  1875                           
  1876                           ;doprnt.c: 1237: prec--;
  1877  001660  0653               	decf	printf@prec,f,c
  1878  001662  A0D8               	btfss	status,0,c
  1879  001664  0654               	decf	printf@prec+1,f,c
  1880  001666  D000               	goto	l2451
  1881  001668                     l2451:
  1882  001668  5053               	movf	printf@prec,w,c
  1883  00166A  1054               	iorwf	printf@prec+1,w,c
  1884  00166C  B4D8               	btfsc	status,2,c
  1885  00166E  D010               	goto	l2457
  1886  001670  D7F4               	goto	l2447
  1887                           
  1888                           ;doprnt.c: 1238: }
  1889                           ;doprnt.c: 1245: continue;
  1890  001672  D00E               	goto	l2457
  1891  001674                     l2453:
  1892                           
  1893                           ;doprnt.c: 1246: }
  1894                           ;doprnt.c: 1422: {
  1895                           ;doprnt.c: 1438: if(flag & 0x03)
  1896  001674  0E03               	movlw	3
  1897  001676  1451               	andwf	printf@flag,w,c
  1898  001678  6E46               	movwf	??_printf& (0+255),c
  1899  00167A  0E00               	movlw	0
  1900  00167C  1452               	andwf	printf@flag+1,w,c
  1901  00167E  6E47               	movwf	(??_printf+1)& (0+255),c
  1902  001680  5046               	movf	??_printf,w,c
  1903  001682  1047               	iorwf	??_printf+1,w,c
  1904  001684  B4D8               	btfsc	status,2,c
  1905  001686  D004               	goto	l2457
  1906                           
  1907                           ;doprnt.c: 1439: (putch('-') );
  1908  001688  0E2D               	movlw	45
  1909  00168A  EC2D  F015         	call	_putch
  1910  00168E  D000               	goto	l2457
  1911  001690                     l2457:
  1912  001690  C041  FFF6         	movff	printf@f,tblptrl
  1913  001694  C042  FFF7         	movff	printf@f+1,tblptrh
  1914  001698  4A41               	infsnz	printf@f,f,c
  1915  00169A  2A42               	incf	printf@f+1,f,c
  1916  00169C                     	if	0	;tblptru may be non-zero
  1917  00169C                     	endif
  1918  00169C                     	if	0	;tblptru may be non-zero
  1919  00169C                     	endif
  1920  00169C  0008               	tblrd		*
  1921  00169E  CFF5 F062          	movff	tablat,printf@c
  1922  0016A2  5062               	movf	printf@c,w,c
  1923  0016A4  B4D8               	btfsc	status,2,c
  1924  0016A6  D002               	goto	l172
  1925  0016A8  D4F4               	goto	l2309
  1926  0016AA  D000               	goto	l172
  1927  0016AC                     l172:
  1928  0016AC  0012               	return		;funcret
  1929  0016AE                     __end_of_printf:
  1930                           	opt stack 0
  1931                           tblptru	equ	0xFF8
  1932                           tblptrh	equ	0xFF7
  1933                           tblptrl	equ	0xFF6
  1934                           tablat	equ	0xFF5
  1935                           prodh	equ	0xFF4
  1936                           prodl	equ	0xFF3
  1937                           postinc0	equ	0xFEE
  1938                           wreg	equ	0xFE8
  1939                           postdec1	equ	0xFE5
  1940                           fsr1l	equ	0xFE1
  1941                           indf2	equ	0xFDF
  1942                           postinc2	equ	0xFDE
  1943                           postdec2	equ	0xFDD
  1944                           fsr2h	equ	0xFDA
  1945                           fsr2l	equ	0xFD9
  1946                           status	equ	0xFD8
  1947                           
  1948 ;; *************** function _scale *****************
  1949 ;; Defined at:
  1950 ;;		line 425 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  1951 ;; Parameters:    Size  Location     Type
  1952 ;;  scl             1    wreg     char 
  1953 ;; Auto vars:     Size  Location     Type
  1954 ;;  scl             1   48[COMRAM] char 
  1955 ;; Return value:  Size  Location     Type
  1956 ;;                  3   42[COMRAM] char 
  1957 ;; Registers used:
  1958 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1959 ;; Tracked objects:
  1960 ;;		On entry : 0/0
  1961 ;;		On exit  : 0/0
  1962 ;;		Unchanged: 0/0
  1963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1964 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1965 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1967 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1968 ;;Total ram usage:        7 bytes
  1969 ;; Hardware stack levels used:    1
  1970 ;; Hardware stack levels required when called:    2
  1971 ;; This function calls:
  1972 ;;		___awdiv
  1973 ;;		___awmod
  1974 ;;		___ftmul
  1975 ;;		___wmul
  1976 ;; This function is called by:
  1977 ;;		_printf
  1978 ;; This function uses a non-reentrant model
  1979 ;;
  1980                           
  1981                           	psect	text4
  1982  0016AE                     __ptext4:
  1983                           	opt stack 0
  1984  0016AE                     _scale:
  1985                           	opt stack 27
  1986                           
  1987                           ;incstack = 0
  1988                           ;scale@scl stored from wreg
  1989  0016AE  6E31               	movwf	scale@scl,c
  1990                           
  1991                           ;doprnt.c: 428: if(scl < 0) {
  1992  0016B0  AE31               	btfss	scale@scl,7,c
  1993  0016B2  D0EF               	goto	l2037
  1994                           
  1995                           ;doprnt.c: 429: scl = -scl;
  1996  0016B4  6C31               	negf	scale@scl,c
  1997                           
  1998                           ;doprnt.c: 430: if(scl>=110)
  1999  0016B6  5031               	movf	scale@scl,w,c
  2000  0016B8  0A80               	xorlw	128
  2001  0016BA  0F12               	addlw	-238
  2002  0016BC  A0D8               	btfss	status,0,c
  2003  0016BE  D08D               	goto	l2027
  2004                           
  2005                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2006  0016C0  0E00               	movlw	0
  2007  0016C2  6E12               	movwf	___wmul@multiplicand+1,c
  2008  0016C4  0E03               	movlw	3
  2009  0016C6  6E11               	movwf	___wmul@multiplicand,c
  2010  0016C8  0E00               	movlw	0
  2011  0016CA  6E0A               	movwf	___awdiv@divisor+1,c
  2012  0016CC  0E0A               	movlw	10
  2013  0016CE  6E09               	movwf	___awdiv@divisor,c
  2014  0016D0  0E00               	movlw	0
  2015  0016D2  6E04               	movwf	___awmod@divisor+1,c
  2016  0016D4  0E64               	movlw	100
  2017  0016D6  6E03               	movwf	___awmod@divisor,c
  2018  0016D8  5031               	movf	scale@scl,w,c
  2019  0016DA  6E01               	movwf	___awmod@dividend,c
  2020  0016DC  6A02               	clrf	___awmod@dividend+1,c
  2021  0016DE  BE01               	btfsc	___awmod@dividend,7,c
  2022  0016E0  0602               	decf	___awmod@dividend+1,f,c
  2023  0016E2  EC8C  F013         	call	___awmod	;wreg free
  2024  0016E6  C001  F007         	movff	?___awmod,___awdiv@dividend
  2025  0016EA  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2026  0016EE  ECB0  F012         	call	___awdiv	;wreg free
  2027  0016F2  0E09               	movlw	9
  2028  0016F4  2407               	addwf	?___awdiv,w,c
  2029  0016F6  6E0F               	movwf	___wmul@multiplier,c
  2030  0016F8  0E00               	movlw	0
  2031  0016FA  2008               	addwfc	?___awdiv+1,w,c
  2032  0016FC  6E10               	movwf	___wmul@multiplier+1,c
  2033  0016FE  ECAA  F014         	call	___wmul	;wreg free
  2034  001702  0E29               	movlw	low __npowers_
  2035  001704  240F               	addwf	?___wmul,w,c
  2036  001706  6EF6               	movwf	tblptrl,c
  2037  001708  0E10               	movlw	high __npowers_
  2038  00170A  2010               	addwfc	?___wmul+1,w,c
  2039  00170C  6EF7               	movwf	tblptrh,c
  2040  00170E                     	if	0	;There are less than 3 active tblptr bytes
  2041  00170E                     	endif
  2042  00170E  0009               	tblrd		*+
  2043  001710  CFF5 F01F          	movff	tablat,___ftmul@f2
  2044  001714  0009               	tblrd		*+
  2045  001716  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2046  00171A  000A               	tblrd		*-
  2047  00171C  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2048  001720  0E00               	movlw	0
  2049  001722  6E0A               	movwf	___awdiv@divisor+1,c
  2050  001724  0E64               	movlw	100
  2051  001726  6E09               	movwf	___awdiv@divisor,c
  2052  001728  5031               	movf	scale@scl,w,c
  2053  00172A  6E07               	movwf	___awdiv@dividend,c
  2054  00172C  6A08               	clrf	___awdiv@dividend+1,c
  2055  00172E  BE07               	btfsc	___awdiv@dividend,7,c
  2056  001730  0608               	decf	___awdiv@dividend+1,f,c
  2057  001732  ECB0  F012         	call	___awdiv	;wreg free
  2058  001736  0E12               	movlw	18
  2059  001738  2407               	addwf	?___awdiv,w,c
  2060  00173A  6E0F               	movwf	___wmul@multiplier,c
  2061  00173C  0E00               	movlw	0
  2062  00173E  2008               	addwfc	?___awdiv+1,w,c
  2063  001740  6E10               	movwf	___wmul@multiplier+1,c
  2064  001742  0E00               	movlw	0
  2065  001744  6E12               	movwf	___wmul@multiplicand+1,c
  2066  001746  0E03               	movlw	3
  2067  001748  6E11               	movwf	___wmul@multiplicand,c
  2068  00174A  ECAA  F014         	call	___wmul	;wreg free
  2069  00174E  0E29               	movlw	low __npowers_
  2070  001750  240F               	addwf	?___wmul,w,c
  2071  001752  6EF6               	movwf	tblptrl,c
  2072  001754  0E10               	movlw	high __npowers_
  2073  001756  2010               	addwfc	?___wmul+1,w,c
  2074  001758  6EF7               	movwf	tblptrh,c
  2075  00175A                     	if	0	;There are less than 3 active tblptr bytes
  2076  00175A                     	endif
  2077  00175A  0009               	tblrd		*+
  2078  00175C  CFF5 F01C          	movff	tablat,___ftmul@f1
  2079  001760  0009               	tblrd		*+
  2080  001762  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2081  001766  000A               	tblrd		*-
  2082  001768  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2083  00176C  ECED  F010         	call	___ftmul	;wreg free
  2084  001770  C01C  F02E         	movff	?___ftmul,_scale$1094
  2085  001774  C01D  F02F         	movff	?___ftmul+1,_scale$1094+1
  2086  001778  C01E  F030         	movff	?___ftmul+2,_scale$1094+2
  2087                           
  2088                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  2089  00177C  C02E  F01C         	movff	_scale$1094,___ftmul@f1
  2090  001780  C02F  F01D         	movff	_scale$1094+1,___ftmul@f1+1
  2091  001784  C030  F01E         	movff	_scale$1094+2,___ftmul@f1+2
  2092  001788  0E00               	movlw	0
  2093  00178A  6E12               	movwf	___wmul@multiplicand+1,c
  2094  00178C  0E03               	movlw	3
  2095  00178E  6E11               	movwf	___wmul@multiplicand,c
  2096  001790  0E00               	movlw	0
  2097  001792  6E04               	movwf	___awmod@divisor+1,c
  2098  001794  0E0A               	movlw	10
  2099  001796  6E03               	movwf	___awmod@divisor,c
  2100  001798  5031               	movf	scale@scl,w,c
  2101  00179A  6E01               	movwf	___awmod@dividend,c
  2102  00179C  6A02               	clrf	___awmod@dividend+1,c
  2103  00179E  BE01               	btfsc	___awmod@dividend,7,c
  2104  0017A0  0602               	decf	___awmod@dividend+1,f,c
  2105  0017A2  EC8C  F013         	call	___awmod	;wreg free
  2106  0017A6  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2107  0017AA  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2108  0017AE  ECAA  F014         	call	___wmul	;wreg free
  2109  0017B2  0E29               	movlw	low __npowers_
  2110  0017B4  240F               	addwf	?___wmul,w,c
  2111  0017B6  6EF6               	movwf	tblptrl,c
  2112  0017B8  0E10               	movlw	high __npowers_
  2113  0017BA  2010               	addwfc	?___wmul+1,w,c
  2114  0017BC  6EF7               	movwf	tblptrh,c
  2115  0017BE                     	if	0	;There are less than 3 active tblptr bytes
  2116  0017BE                     	endif
  2117  0017BE  0009               	tblrd		*+
  2118  0017C0  CFF5 F01F          	movff	tablat,___ftmul@f2
  2119  0017C4  0009               	tblrd		*+
  2120  0017C6  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2121  0017CA  000A               	tblrd		*-
  2122  0017CC  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2123  0017D0  ECED  F010         	call	___ftmul	;wreg free
  2124  0017D4  D141               	goto	L5
  2125  0017D6  D15A               	goto	l116
  2126  0017D8  D054               	goto	l2033
  2127  0017DA                     l2027:
  2128                           
  2129                           ;doprnt.c: 432: else if(scl > 10)
  2130  0017DA  5031               	movf	scale@scl,w,c
  2131  0017DC  0A80               	xorlw	128
  2132  0017DE  0F75               	addlw	-139
  2133  0017E0  A0D8               	btfss	status,0,c
  2134  0017E2  D04F               	goto	l2033
  2135                           
  2136                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  2137  0017E4  0E00               	movlw	0
  2138  0017E6  6E0A               	movwf	___awdiv@divisor+1,c
  2139  0017E8  0E0A               	movlw	10
  2140  0017EA  6E09               	movwf	___awdiv@divisor,c
  2141  0017EC  5031               	movf	scale@scl,w,c
  2142  0017EE  6E07               	movwf	___awdiv@dividend,c
  2143  0017F0  6A08               	clrf	___awdiv@dividend+1,c
  2144  0017F2  BE07               	btfsc	___awdiv@dividend,7,c
  2145  0017F4  0608               	decf	___awdiv@dividend+1,f,c
  2146  0017F6  ECB0  F012         	call	___awdiv	;wreg free
  2147  0017FA  0E09               	movlw	9
  2148  0017FC  2407               	addwf	?___awdiv,w,c
  2149  0017FE  6E0F               	movwf	___wmul@multiplier,c
  2150  001800  0E00               	movlw	0
  2151  001802  2008               	addwfc	?___awdiv+1,w,c
  2152  001804  6E10               	movwf	___wmul@multiplier+1,c
  2153  001806  0E00               	movlw	0
  2154  001808  6E12               	movwf	___wmul@multiplicand+1,c
  2155  00180A  0E03               	movlw	3
  2156  00180C  6E11               	movwf	___wmul@multiplicand,c
  2157  00180E  ECAA  F014         	call	___wmul	;wreg free
  2158  001812  0E29               	movlw	low __npowers_
  2159  001814  240F               	addwf	?___wmul,w,c
  2160  001816  6EF6               	movwf	tblptrl,c
  2161  001818  0E10               	movlw	high __npowers_
  2162  00181A  2010               	addwfc	?___wmul+1,w,c
  2163  00181C  6EF7               	movwf	tblptrh,c
  2164  00181E                     	if	0	;There are less than 3 active tblptr bytes
  2165  00181E                     	endif
  2166  00181E  0009               	tblrd		*+
  2167  001820  CFF5 F01C          	movff	tablat,___ftmul@f1
  2168  001824  0009               	tblrd		*+
  2169  001826  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2170  00182A  000A               	tblrd		*-
  2171  00182C  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2172  001830  0E00               	movlw	0
  2173  001832  6E12               	movwf	___wmul@multiplicand+1,c
  2174  001834  0E03               	movlw	3
  2175  001836  6E11               	movwf	___wmul@multiplicand,c
  2176  001838  0E00               	movlw	0
  2177  00183A  6E04               	movwf	___awmod@divisor+1,c
  2178  00183C  0E0A               	movlw	10
  2179  00183E  6E03               	movwf	___awmod@divisor,c
  2180  001840  5031               	movf	scale@scl,w,c
  2181  001842  6E01               	movwf	___awmod@dividend,c
  2182  001844  6A02               	clrf	___awmod@dividend+1,c
  2183  001846  BE01               	btfsc	___awmod@dividend,7,c
  2184  001848  0602               	decf	___awmod@dividend+1,f,c
  2185  00184A  EC8C  F013         	call	___awmod	;wreg free
  2186  00184E  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2187  001852  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2188  001856  ECAA  F014         	call	___wmul	;wreg free
  2189  00185A  0E29               	movlw	low __npowers_
  2190  00185C  240F               	addwf	?___wmul,w,c
  2191  00185E  6EF6               	movwf	tblptrl,c
  2192  001860  0E10               	movlw	high __npowers_
  2193  001862  2010               	addwfc	?___wmul+1,w,c
  2194  001864  6EF7               	movwf	tblptrh,c
  2195  001866                     	if	0	;There are less than 3 active tblptr bytes
  2196  001866                     	endif
  2197  001866  0009               	tblrd		*+
  2198  001868  CFF5 F01F          	movff	tablat,___ftmul@f2
  2199  00186C  0009               	tblrd		*+
  2200  00186E  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2201  001872  000A               	tblrd		*-
  2202  001874  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2203  001878  ECED  F010         	call	___ftmul	;wreg free
  2204  00187C  D0ED               	goto	L5
  2205  00187E  D106               	goto	l116
  2206  001880  D000               	goto	l2033
  2207  001882                     l2033:
  2208                           
  2209                           ;doprnt.c: 434: return _npowers_[scl];
  2210  001882  5031               	movf	scale@scl,w,c
  2211  001884  0D03               	mullw	3
  2212  001886  0E29               	movlw	low __npowers_
  2213  001888  24F3               	addwf	prodl,w,c
  2214  00188A  6EF6               	movwf	tblptrl,c
  2215  00188C  0E10               	movlw	high __npowers_
  2216  00188E  D0F2               	goto	L4
  2217  001890  D0FD               	goto	l116
  2218  001892                     l2037:
  2219                           
  2220                           ;doprnt.c: 435: }
  2221                           ;doprnt.c: 436: if(scl>=110)
  2222  001892  5031               	movf	scale@scl,w,c
  2223  001894  0A80               	xorlw	128
  2224  001896  0F12               	addlw	-238
  2225  001898  A0D8               	btfss	status,0,c
  2226  00189A  D08D               	goto	l2045
  2227                           
  2228                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2229  00189C  0E00               	movlw	0
  2230  00189E  6E12               	movwf	___wmul@multiplicand+1,c
  2231  0018A0  0E03               	movlw	3
  2232  0018A2  6E11               	movwf	___wmul@multiplicand,c
  2233  0018A4  0E00               	movlw	0
  2234  0018A6  6E0A               	movwf	___awdiv@divisor+1,c
  2235  0018A8  0E0A               	movlw	10
  2236  0018AA  6E09               	movwf	___awdiv@divisor,c
  2237  0018AC  0E00               	movlw	0
  2238  0018AE  6E04               	movwf	___awmod@divisor+1,c
  2239  0018B0  0E64               	movlw	100
  2240  0018B2  6E03               	movwf	___awmod@divisor,c
  2241  0018B4  5031               	movf	scale@scl,w,c
  2242  0018B6  6E01               	movwf	___awmod@dividend,c
  2243  0018B8  6A02               	clrf	___awmod@dividend+1,c
  2244  0018BA  BE01               	btfsc	___awmod@dividend,7,c
  2245  0018BC  0602               	decf	___awmod@dividend+1,f,c
  2246  0018BE  EC8C  F013         	call	___awmod	;wreg free
  2247  0018C2  C001  F007         	movff	?___awmod,___awdiv@dividend
  2248  0018C6  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2249  0018CA  ECB0  F012         	call	___awdiv	;wreg free
  2250  0018CE  0E09               	movlw	9
  2251  0018D0  2407               	addwf	?___awdiv,w,c
  2252  0018D2  6E0F               	movwf	___wmul@multiplier,c
  2253  0018D4  0E00               	movlw	0
  2254  0018D6  2008               	addwfc	?___awdiv+1,w,c
  2255  0018D8  6E10               	movwf	___wmul@multiplier+1,c
  2256  0018DA  ECAA  F014         	call	___wmul	;wreg free
  2257  0018DE  0E50               	movlw	low __powers_
  2258  0018E0  240F               	addwf	?___wmul,w,c
  2259  0018E2  6EF6               	movwf	tblptrl,c
  2260  0018E4  0E10               	movlw	high __powers_
  2261  0018E6  2010               	addwfc	?___wmul+1,w,c
  2262  0018E8  6EF7               	movwf	tblptrh,c
  2263  0018EA                     	if	0	;There are less than 3 active tblptr bytes
  2264  0018EA                     	endif
  2265  0018EA  0009               	tblrd		*+
  2266  0018EC  CFF5 F01F          	movff	tablat,___ftmul@f2
  2267  0018F0  0009               	tblrd		*+
  2268  0018F2  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2269  0018F6  000A               	tblrd		*-
  2270  0018F8  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2271  0018FC  0E00               	movlw	0
  2272  0018FE  6E0A               	movwf	___awdiv@divisor+1,c
  2273  001900  0E64               	movlw	100
  2274  001902  6E09               	movwf	___awdiv@divisor,c
  2275  001904  5031               	movf	scale@scl,w,c
  2276  001906  6E07               	movwf	___awdiv@dividend,c
  2277  001908  6A08               	clrf	___awdiv@dividend+1,c
  2278  00190A  BE07               	btfsc	___awdiv@dividend,7,c
  2279  00190C  0608               	decf	___awdiv@dividend+1,f,c
  2280  00190E  ECB0  F012         	call	___awdiv	;wreg free
  2281  001912  0E12               	movlw	18
  2282  001914  2407               	addwf	?___awdiv,w,c
  2283  001916  6E0F               	movwf	___wmul@multiplier,c
  2284  001918  0E00               	movlw	0
  2285  00191A  2008               	addwfc	?___awdiv+1,w,c
  2286  00191C  6E10               	movwf	___wmul@multiplier+1,c
  2287  00191E  0E00               	movlw	0
  2288  001920  6E12               	movwf	___wmul@multiplicand+1,c
  2289  001922  0E03               	movlw	3
  2290  001924  6E11               	movwf	___wmul@multiplicand,c
  2291  001926  ECAA  F014         	call	___wmul	;wreg free
  2292  00192A  0E50               	movlw	low __powers_
  2293  00192C  240F               	addwf	?___wmul,w,c
  2294  00192E  6EF6               	movwf	tblptrl,c
  2295  001930  0E10               	movlw	high __powers_
  2296  001932  2010               	addwfc	?___wmul+1,w,c
  2297  001934  6EF7               	movwf	tblptrh,c
  2298  001936                     	if	0	;There are less than 3 active tblptr bytes
  2299  001936                     	endif
  2300  001936  0009               	tblrd		*+
  2301  001938  CFF5 F01C          	movff	tablat,___ftmul@f1
  2302  00193C  0009               	tblrd		*+
  2303  00193E  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2304  001942  000A               	tblrd		*-
  2305  001944  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2306  001948  ECED  F010         	call	___ftmul	;wreg free
  2307  00194C  C01C  F02E         	movff	?___ftmul,_scale$1094
  2308  001950  C01D  F02F         	movff	?___ftmul+1,_scale$1094+1
  2309  001954  C01E  F030         	movff	?___ftmul+2,_scale$1094+2
  2310                           
  2311                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  2312  001958  C02E  F01C         	movff	_scale$1094,___ftmul@f1
  2313  00195C  C02F  F01D         	movff	_scale$1094+1,___ftmul@f1+1
  2314  001960  C030  F01E         	movff	_scale$1094+2,___ftmul@f1+2
  2315  001964  0E00               	movlw	0
  2316  001966  6E12               	movwf	___wmul@multiplicand+1,c
  2317  001968  0E03               	movlw	3
  2318  00196A  6E11               	movwf	___wmul@multiplicand,c
  2319  00196C  0E00               	movlw	0
  2320  00196E  6E04               	movwf	___awmod@divisor+1,c
  2321  001970  0E0A               	movlw	10
  2322  001972  6E03               	movwf	___awmod@divisor,c
  2323  001974  5031               	movf	scale@scl,w,c
  2324  001976  6E01               	movwf	___awmod@dividend,c
  2325  001978  6A02               	clrf	___awmod@dividend+1,c
  2326  00197A  BE01               	btfsc	___awmod@dividend,7,c
  2327  00197C  0602               	decf	___awmod@dividend+1,f,c
  2328  00197E  EC8C  F013         	call	___awmod	;wreg free
  2329  001982  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2330  001986  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2331  00198A  ECAA  F014         	call	___wmul	;wreg free
  2332  00198E  0E50               	movlw	low __powers_
  2333  001990  240F               	addwf	?___wmul,w,c
  2334  001992  6EF6               	movwf	tblptrl,c
  2335  001994  0E10               	movlw	high __powers_
  2336  001996  2010               	addwfc	?___wmul+1,w,c
  2337  001998  6EF7               	movwf	tblptrh,c
  2338  00199A                     	if	0	;There are less than 3 active tblptr bytes
  2339  00199A                     	endif
  2340  00199A  0009               	tblrd		*+
  2341  00199C  CFF5 F01F          	movff	tablat,___ftmul@f2
  2342  0019A0  0009               	tblrd		*+
  2343  0019A2  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2344  0019A6  000A               	tblrd		*-
  2345  0019A8  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2346  0019AC  ECED  F010         	call	___ftmul	;wreg free
  2347  0019B0  D053               	goto	L5
  2348  0019B2  D06C               	goto	l116
  2349  0019B4  D059               	goto	l2051
  2350  0019B6                     l2045:
  2351                           
  2352                           ;doprnt.c: 438: else if(scl > 10)
  2353  0019B6  5031               	movf	scale@scl,w,c
  2354  0019B8  0A80               	xorlw	128
  2355  0019BA  0F75               	addlw	-139
  2356  0019BC  A0D8               	btfss	status,0,c
  2357  0019BE  D054               	goto	l2051
  2358                           
  2359                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  2360  0019C0  0E00               	movlw	0
  2361  0019C2  6E0A               	movwf	___awdiv@divisor+1,c
  2362  0019C4  0E0A               	movlw	10
  2363  0019C6  6E09               	movwf	___awdiv@divisor,c
  2364  0019C8  5031               	movf	scale@scl,w,c
  2365  0019CA  6E07               	movwf	___awdiv@dividend,c
  2366  0019CC  6A08               	clrf	___awdiv@dividend+1,c
  2367  0019CE  BE07               	btfsc	___awdiv@dividend,7,c
  2368  0019D0  0608               	decf	___awdiv@dividend+1,f,c
  2369  0019D2  ECB0  F012         	call	___awdiv	;wreg free
  2370  0019D6  0E09               	movlw	9
  2371  0019D8  2407               	addwf	?___awdiv,w,c
  2372  0019DA  6E0F               	movwf	___wmul@multiplier,c
  2373  0019DC  0E00               	movlw	0
  2374  0019DE  2008               	addwfc	?___awdiv+1,w,c
  2375  0019E0  6E10               	movwf	___wmul@multiplier+1,c
  2376  0019E2  0E00               	movlw	0
  2377  0019E4  6E12               	movwf	___wmul@multiplicand+1,c
  2378  0019E6  0E03               	movlw	3
  2379  0019E8  6E11               	movwf	___wmul@multiplicand,c
  2380  0019EA  ECAA  F014         	call	___wmul	;wreg free
  2381  0019EE  0E50               	movlw	low __powers_
  2382  0019F0  240F               	addwf	?___wmul,w,c
  2383  0019F2  6EF6               	movwf	tblptrl,c
  2384  0019F4  0E10               	movlw	high __powers_
  2385  0019F6  2010               	addwfc	?___wmul+1,w,c
  2386  0019F8  6EF7               	movwf	tblptrh,c
  2387  0019FA                     	if	0	;There are less than 3 active tblptr bytes
  2388  0019FA                     	endif
  2389  0019FA  0009               	tblrd		*+
  2390  0019FC  CFF5 F01C          	movff	tablat,___ftmul@f1
  2391  001A00  0009               	tblrd		*+
  2392  001A02  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2393  001A06  000A               	tblrd		*-
  2394  001A08  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2395  001A0C  0E00               	movlw	0
  2396  001A0E  6E12               	movwf	___wmul@multiplicand+1,c
  2397  001A10  0E03               	movlw	3
  2398  001A12  6E11               	movwf	___wmul@multiplicand,c
  2399  001A14  0E00               	movlw	0
  2400  001A16  6E04               	movwf	___awmod@divisor+1,c
  2401  001A18  0E0A               	movlw	10
  2402  001A1A  6E03               	movwf	___awmod@divisor,c
  2403  001A1C  5031               	movf	scale@scl,w,c
  2404  001A1E  6E01               	movwf	___awmod@dividend,c
  2405  001A20  6A02               	clrf	___awmod@dividend+1,c
  2406  001A22  BE01               	btfsc	___awmod@dividend,7,c
  2407  001A24  0602               	decf	___awmod@dividend+1,f,c
  2408  001A26  EC8C  F013         	call	___awmod	;wreg free
  2409  001A2A  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2410  001A2E  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2411  001A32  ECAA  F014         	call	___wmul	;wreg free
  2412  001A36  0E50               	movlw	low __powers_
  2413  001A38  240F               	addwf	?___wmul,w,c
  2414  001A3A  6EF6               	movwf	tblptrl,c
  2415  001A3C  0E10               	movlw	high __powers_
  2416  001A3E  2010               	addwfc	?___wmul+1,w,c
  2417  001A40  6EF7               	movwf	tblptrh,c
  2418  001A42                     	if	0	;There are less than 3 active tblptr bytes
  2419  001A42                     	endif
  2420  001A42  0009               	tblrd		*+
  2421  001A44  CFF5 F01F          	movff	tablat,___ftmul@f2
  2422  001A48  0009               	tblrd		*+
  2423  001A4A  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2424  001A4E  000A               	tblrd		*-
  2425  001A50  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2426  001A54  ECED  F010         	call	___ftmul	;wreg free
  2427  001A58                     L5:
  2428  001A58  C01C  F02B         	movff	?___ftmul,?_scale
  2429  001A5C  C01D  F02C         	movff	?___ftmul+1,?_scale+1
  2430  001A60  C01E  F02D         	movff	?___ftmul+2,?_scale+2
  2431  001A64  D013               	goto	l116
  2432  001A66  D000               	goto	l2051
  2433  001A68                     l2051:
  2434                           
  2435                           ;doprnt.c: 440: return _powers_[scl];
  2436  001A68  5031               	movf	scale@scl,w,c
  2437  001A6A  0D03               	mullw	3
  2438  001A6C  0E50               	movlw	low __powers_
  2439  001A6E  24F3               	addwf	prodl,w,c
  2440  001A70  6EF6               	movwf	tblptrl,c
  2441  001A72  0E10               	movlw	high __powers_
  2442  001A74                     L4:
  2443  001A74  20F4               	addwfc	prodh,w,c
  2444  001A76  6EF7               	movwf	tblptrh,c
  2445  001A78                     	if	0	;There are less than 3 active tblptr bytes
  2446  001A78                     	endif
  2447  001A78  0009               	tblrd		*+
  2448  001A7A  CFF5 F02B          	movff	tablat,?_scale
  2449  001A7E  0009               	tblrd		*+
  2450  001A80  CFF5 F02C          	movff	tablat,?_scale+1
  2451  001A84  000A               	tblrd		*-
  2452  001A86  CFF5 F02D          	movff	tablat,?_scale+2
  2453  001A8A  D000               	goto	l116
  2454  001A8C                     l116:
  2455  001A8C  0012               	return		;funcret
  2456  001A8E                     __end_of_scale:
  2457                           	opt stack 0
  2458                           tblptru	equ	0xFF8
  2459                           tblptrh	equ	0xFF7
  2460                           tblptrl	equ	0xFF6
  2461                           tablat	equ	0xFF5
  2462                           prodh	equ	0xFF4
  2463                           prodl	equ	0xFF3
  2464                           postinc0	equ	0xFEE
  2465                           wreg	equ	0xFE8
  2466                           postdec1	equ	0xFE5
  2467                           fsr1l	equ	0xFE1
  2468                           indf2	equ	0xFDF
  2469                           postinc2	equ	0xFDE
  2470                           postdec2	equ	0xFDD
  2471                           fsr2h	equ	0xFDA
  2472                           fsr2l	equ	0xFD9
  2473                           status	equ	0xFD8
  2474                           
  2475 ;; *************** function _putch *****************
  2476 ;; Defined at:
  2477 ;;		line 35 in file "lab6pa.c"
  2478 ;; Parameters:    Size  Location     Type
  2479 ;;  c               1    wreg     unsigned char 
  2480 ;; Auto vars:     Size  Location     Type
  2481 ;;  c               1    0[COMRAM] unsigned char 
  2482 ;; Return value:  Size  Location     Type
  2483 ;;		None               void
  2484 ;; Registers used:
  2485 ;;		wreg
  2486 ;; Tracked objects:
  2487 ;;		On entry : 0/0
  2488 ;;		On exit  : 0/0
  2489 ;;		Unchanged: 0/0
  2490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2492 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2494 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2495 ;;Total ram usage:        1 bytes
  2496 ;; Hardware stack levels used:    1
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_printf
  2501 ;; This function uses a non-reentrant model
  2502 ;;
  2503                           
  2504                           	psect	text5
  2505  002A5A                     __ptext5:
  2506                           	opt stack 0
  2507  002A5A                     _putch:
  2508                           	opt stack 29
  2509                           
  2510                           ;incstack = 0
  2511                           ;putch@c stored from wreg
  2512  002A5A  6E01               	movwf	putch@c,c
  2513                           
  2514                           ;lab6pa.c: 37: while (!TRMT);
  2515  002A5C  D000               	goto	l60
  2516  002A5E                     l60:
  2517  002A5E  A2AC               	btfss	4012,1,c	;volatile
  2518  002A60  D7FE               	goto	l60
  2519                           
  2520                           ;lab6pa.c: 38: TXREG = c;
  2521  002A62  C001  FFAD         	movff	putch@c,4013	;volatile
  2522  002A66  0012               	return		;funcret
  2523  002A68                     __end_of_putch:
  2524                           	opt stack 0
  2525                           tblptru	equ	0xFF8
  2526                           tblptrh	equ	0xFF7
  2527                           tblptrl	equ	0xFF6
  2528                           tablat	equ	0xFF5
  2529                           prodh	equ	0xFF4
  2530                           prodl	equ	0xFF3
  2531                           postinc0	equ	0xFEE
  2532                           wreg	equ	0xFE8
  2533                           postdec1	equ	0xFE5
  2534                           fsr1l	equ	0xFE1
  2535                           indf2	equ	0xFDF
  2536                           postinc2	equ	0xFDE
  2537                           postdec2	equ	0xFDD
  2538                           fsr2h	equ	0xFDA
  2539                           fsr2l	equ	0xFD9
  2540                           status	equ	0xFD8
  2541                           
  2542 ;; *************** function _fround *****************
  2543 ;; Defined at:
  2544 ;;		line 409 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\doprnt.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;  prec            1    wreg     unsigned char 
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;  prec            1   51[COMRAM] unsigned char 
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  3   42[COMRAM] unsigned char 
  2551 ;; Registers used:
  2552 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2558 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;Total ram usage:       10 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:    2
  2565 ;; This function calls:
  2566 ;;		___awdiv
  2567 ;;		___awmod
  2568 ;;		___ftmul
  2569 ;;		___wmul
  2570 ;; This function is called by:
  2571 ;;		_printf
  2572 ;; This function uses a non-reentrant model
  2573 ;;
  2574                           
  2575                           	psect	text6
  2576  001A8E                     __ptext6:
  2577                           	opt stack 0
  2578  001A8E                     _fround:
  2579                           	opt stack 27
  2580                           
  2581                           ;incstack = 0
  2582                           ;fround@prec stored from wreg
  2583  001A8E  6E34               	movwf	fround@prec,c
  2584                           
  2585                           ;doprnt.c: 413: if(prec>=110)
  2586  001A90  0E6D               	movlw	109
  2587  001A92  6434               	cpfsgt	fround@prec,c
  2588  001A94  D09B               	goto	l2005
  2589                           
  2590                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2591  001A96  0E00               	movlw	0
  2592  001A98  6E12               	movwf	___wmul@multiplicand+1,c
  2593  001A9A  0E03               	movlw	3
  2594  001A9C  6E11               	movwf	___wmul@multiplicand,c
  2595  001A9E  0E00               	movlw	0
  2596  001AA0  6E0A               	movwf	___awdiv@divisor+1,c
  2597  001AA2  0E0A               	movlw	10
  2598  001AA4  6E09               	movwf	___awdiv@divisor,c
  2599  001AA6  0E00               	movlw	0
  2600  001AA8  6E04               	movwf	___awmod@divisor+1,c
  2601  001AAA  0E64               	movlw	100
  2602  001AAC  6E03               	movwf	___awmod@divisor,c
  2603  001AAE  C034  F001         	movff	fround@prec,___awmod@dividend
  2604  001AB2  6A02               	clrf	___awmod@dividend+1,c
  2605  001AB4  EC8C  F013         	call	___awmod	;wreg free
  2606  001AB8  C001  F007         	movff	?___awmod,___awdiv@dividend
  2607  001ABC  C002  F008         	movff	?___awmod+1,___awdiv@dividend+1
  2608  001AC0  ECB0  F012         	call	___awdiv	;wreg free
  2609  001AC4  0E09               	movlw	9
  2610  001AC6  2407               	addwf	?___awdiv,w,c
  2611  001AC8  6E0F               	movwf	___wmul@multiplier,c
  2612  001ACA  0E00               	movlw	0
  2613  001ACC  2008               	addwfc	?___awdiv+1,w,c
  2614  001ACE  6E10               	movwf	___wmul@multiplier+1,c
  2615  001AD0  ECAA  F014         	call	___wmul	;wreg free
  2616  001AD4  0E29               	movlw	low __npowers_
  2617  001AD6  240F               	addwf	?___wmul,w,c
  2618  001AD8  6EF6               	movwf	tblptrl,c
  2619  001ADA  0E10               	movlw	high __npowers_
  2620  001ADC  2010               	addwfc	?___wmul+1,w,c
  2621  001ADE  6EF7               	movwf	tblptrh,c
  2622  001AE0                     	if	0	;There are less than 3 active tblptr bytes
  2623  001AE0                     	endif
  2624  001AE0  0009               	tblrd		*+
  2625  001AE2  CFF5 F01F          	movff	tablat,___ftmul@f2
  2626  001AE6  0009               	tblrd		*+
  2627  001AE8  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2628  001AEC  000A               	tblrd		*-
  2629  001AEE  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2630  001AF2  0E00               	movlw	0
  2631  001AF4  6E0A               	movwf	___awdiv@divisor+1,c
  2632  001AF6  0E64               	movlw	100
  2633  001AF8  6E09               	movwf	___awdiv@divisor,c
  2634  001AFA  C034  F007         	movff	fround@prec,___awdiv@dividend
  2635  001AFE  6A08               	clrf	___awdiv@dividend+1,c
  2636  001B00  ECB0  F012         	call	___awdiv	;wreg free
  2637  001B04  0E12               	movlw	18
  2638  001B06  2407               	addwf	?___awdiv,w,c
  2639  001B08  6E0F               	movwf	___wmul@multiplier,c
  2640  001B0A  0E00               	movlw	0
  2641  001B0C  2008               	addwfc	?___awdiv+1,w,c
  2642  001B0E  6E10               	movwf	___wmul@multiplier+1,c
  2643  001B10  0E00               	movlw	0
  2644  001B12  6E12               	movwf	___wmul@multiplicand+1,c
  2645  001B14  0E03               	movlw	3
  2646  001B16  6E11               	movwf	___wmul@multiplicand,c
  2647  001B18  ECAA  F014         	call	___wmul	;wreg free
  2648  001B1C  0E29               	movlw	low __npowers_
  2649  001B1E  240F               	addwf	?___wmul,w,c
  2650  001B20  6EF6               	movwf	tblptrl,c
  2651  001B22  0E10               	movlw	high __npowers_
  2652  001B24  2010               	addwfc	?___wmul+1,w,c
  2653  001B26  6EF7               	movwf	tblptrh,c
  2654  001B28                     	if	0	;There are less than 3 active tblptr bytes
  2655  001B28                     	endif
  2656  001B28  0009               	tblrd		*+
  2657  001B2A  CFF5 F01C          	movff	tablat,___ftmul@f1
  2658  001B2E  0009               	tblrd		*+
  2659  001B30  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2660  001B34  000A               	tblrd		*-
  2661  001B36  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2662  001B3A  ECED  F010         	call	___ftmul	;wreg free
  2663  001B3E  C01C  F031         	movff	?___ftmul,_fround$1092
  2664  001B42  C01D  F032         	movff	?___ftmul+1,_fround$1092+1
  2665  001B46  C01E  F033         	movff	?___ftmul+2,_fround$1092+2
  2666                           
  2667                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2668  001B4A  0E00               	movlw	0
  2669  001B4C  6E12               	movwf	___wmul@multiplicand+1,c
  2670  001B4E  0E03               	movlw	3
  2671  001B50  6E11               	movwf	___wmul@multiplicand,c
  2672  001B52  0E00               	movlw	0
  2673  001B54  6E04               	movwf	___awmod@divisor+1,c
  2674  001B56  0E0A               	movlw	10
  2675  001B58  6E03               	movwf	___awmod@divisor,c
  2676  001B5A  C034  F001         	movff	fround@prec,___awmod@dividend
  2677  001B5E  6A02               	clrf	___awmod@dividend+1,c
  2678  001B60  EC8C  F013         	call	___awmod	;wreg free
  2679  001B64  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2680  001B68  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2681  001B6C  ECAA  F014         	call	___wmul	;wreg free
  2682  001B70  0E29               	movlw	low __npowers_
  2683  001B72  240F               	addwf	?___wmul,w,c
  2684  001B74  6EF6               	movwf	tblptrl,c
  2685  001B76  0E10               	movlw	high __npowers_
  2686  001B78  2010               	addwfc	?___wmul+1,w,c
  2687  001B7A  6EF7               	movwf	tblptrh,c
  2688  001B7C                     	if	0	;There are less than 3 active tblptr bytes
  2689  001B7C                     	endif
  2690  001B7C  0009               	tblrd		*+
  2691  001B7E  CFF5 F01F          	movff	tablat,___ftmul@f2
  2692  001B82  0009               	tblrd		*+
  2693  001B84  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2694  001B88  000A               	tblrd		*-
  2695  001B8A  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2696  001B8E  C031  F01C         	movff	_fround$1092,___ftmul@f1
  2697  001B92  C032  F01D         	movff	_fround$1092+1,___ftmul@f1+1
  2698  001B96  C033  F01E         	movff	_fround$1092+2,___ftmul@f1+2
  2699  001B9A  ECED  F010         	call	___ftmul	;wreg free
  2700  001B9E  C01C  F02E         	movff	?___ftmul,_fround$1093
  2701  001BA2  C01D  F02F         	movff	?___ftmul+1,_fround$1093+1
  2702  001BA6  C01E  F030         	movff	?___ftmul+2,_fround$1093+2
  2703                           
  2704                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  2705  001BAA  C02E  F01C         	movff	_fround$1093,___ftmul@f1
  2706  001BAE  C02F  F01D         	movff	_fround$1093+1,___ftmul@f1+1
  2707  001BB2  C030  F01E         	movff	_fround$1093+2,___ftmul@f1+2
  2708  001BB6  0E00               	movlw	0
  2709  001BB8  6E1F               	movwf	___ftmul@f2,c
  2710  001BBA  0E00               	movlw	0
  2711  001BBC  6E20               	movwf	___ftmul@f2+1,c
  2712  001BBE  0E3F               	movlw	63
  2713  001BC0  6E21               	movwf	___ftmul@f2+2,c
  2714  001BC2  ECED  F010         	call	___ftmul	;wreg free
  2715  001BC6  D07D               	goto	L7
  2716  001BC8  D083               	goto	l109
  2717  001BCA  D062               	goto	l2013
  2718  001BCC                     l2005:
  2719                           
  2720                           ;doprnt.c: 415: else if(prec > 10)
  2721  001BCC  0E0A               	movlw	10
  2722  001BCE  6434               	cpfsgt	fround@prec,c
  2723  001BD0  D05F               	goto	l2013
  2724                           
  2725                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2726  001BD2  0E00               	movlw	0
  2727  001BD4  6E12               	movwf	___wmul@multiplicand+1,c
  2728  001BD6  0E03               	movlw	3
  2729  001BD8  6E11               	movwf	___wmul@multiplicand,c
  2730  001BDA  0E00               	movlw	0
  2731  001BDC  6E04               	movwf	___awmod@divisor+1,c
  2732  001BDE  0E0A               	movlw	10
  2733  001BE0  6E03               	movwf	___awmod@divisor,c
  2734  001BE2  C034  F001         	movff	fround@prec,___awmod@dividend
  2735  001BE6  6A02               	clrf	___awmod@dividend+1,c
  2736  001BE8  EC8C  F013         	call	___awmod	;wreg free
  2737  001BEC  C001  F00F         	movff	?___awmod,___wmul@multiplier
  2738  001BF0  C002  F010         	movff	?___awmod+1,___wmul@multiplier+1
  2739  001BF4  ECAA  F014         	call	___wmul	;wreg free
  2740  001BF8  0E29               	movlw	low __npowers_
  2741  001BFA  240F               	addwf	?___wmul,w,c
  2742  001BFC  6EF6               	movwf	tblptrl,c
  2743  001BFE  0E10               	movlw	high __npowers_
  2744  001C00  2010               	addwfc	?___wmul+1,w,c
  2745  001C02  6EF7               	movwf	tblptrh,c
  2746  001C04                     	if	0	;There are less than 3 active tblptr bytes
  2747  001C04                     	endif
  2748  001C04  0009               	tblrd		*+
  2749  001C06  CFF5 F01F          	movff	tablat,___ftmul@f2
  2750  001C0A  0009               	tblrd		*+
  2751  001C0C  CFF5 F020          	movff	tablat,___ftmul@f2+1
  2752  001C10  000A               	tblrd		*-
  2753  001C12  CFF5 F021          	movff	tablat,___ftmul@f2+2
  2754  001C16  0E00               	movlw	0
  2755  001C18  6E0A               	movwf	___awdiv@divisor+1,c
  2756  001C1A  0E0A               	movlw	10
  2757  001C1C  6E09               	movwf	___awdiv@divisor,c
  2758  001C1E  C034  F007         	movff	fround@prec,___awdiv@dividend
  2759  001C22  6A08               	clrf	___awdiv@dividend+1,c
  2760  001C24  ECB0  F012         	call	___awdiv	;wreg free
  2761  001C28  0E09               	movlw	9
  2762  001C2A  2407               	addwf	?___awdiv,w,c
  2763  001C2C  6E0F               	movwf	___wmul@multiplier,c
  2764  001C2E  0E00               	movlw	0
  2765  001C30  2008               	addwfc	?___awdiv+1,w,c
  2766  001C32  6E10               	movwf	___wmul@multiplier+1,c
  2767  001C34  0E00               	movlw	0
  2768  001C36  6E12               	movwf	___wmul@multiplicand+1,c
  2769  001C38  0E03               	movlw	3
  2770  001C3A  6E11               	movwf	___wmul@multiplicand,c
  2771  001C3C  ECAA  F014         	call	___wmul	;wreg free
  2772  001C40  0E29               	movlw	low __npowers_
  2773  001C42  240F               	addwf	?___wmul,w,c
  2774  001C44  6EF6               	movwf	tblptrl,c
  2775  001C46  0E10               	movlw	high __npowers_
  2776  001C48  2010               	addwfc	?___wmul+1,w,c
  2777  001C4A  6EF7               	movwf	tblptrh,c
  2778  001C4C                     	if	0	;There are less than 3 active tblptr bytes
  2779  001C4C                     	endif
  2780  001C4C  0009               	tblrd		*+
  2781  001C4E  CFF5 F01C          	movff	tablat,___ftmul@f1
  2782  001C52  0009               	tblrd		*+
  2783  001C54  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2784  001C58  000A               	tblrd		*-
  2785  001C5A  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2786  001C5E  ECED  F010         	call	___ftmul	;wreg free
  2787  001C62  C01C  F031         	movff	?___ftmul,_fround$1092
  2788  001C66  C01D  F032         	movff	?___ftmul+1,_fround$1092+1
  2789  001C6A  C01E  F033         	movff	?___ftmul+2,_fround$1092+2
  2790                           
  2791                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  2792  001C6E  C031  F01C         	movff	_fround$1092,___ftmul@f1
  2793  001C72  C032  F01D         	movff	_fround$1092+1,___ftmul@f1+1
  2794  001C76  C033  F01E         	movff	_fround$1092+2,___ftmul@f1+2
  2795  001C7A  0E00               	movlw	0
  2796  001C7C  6E1F               	movwf	___ftmul@f2,c
  2797  001C7E  0E00               	movlw	0
  2798  001C80  6E20               	movwf	___ftmul@f2+1,c
  2799  001C82  0E3F               	movlw	63
  2800  001C84  6E21               	movwf	___ftmul@f2+2,c
  2801  001C86  ECED  F010         	call	___ftmul	;wreg free
  2802  001C8A  D01B               	goto	L7
  2803  001C8C  D021               	goto	l109
  2804  001C8E  D000               	goto	l2013
  2805  001C90                     l2013:
  2806                           
  2807                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  2808  001C90  5034               	movf	fround@prec,w,c
  2809  001C92  0D03               	mullw	3
  2810  001C94  0E29               	movlw	low __npowers_
  2811  001C96  24F3               	addwf	prodl,w,c
  2812  001C98  6EF6               	movwf	tblptrl,c
  2813  001C9A  0E10               	movlw	high __npowers_
  2814  001C9C  20F4               	addwfc	prodh,w,c
  2815  001C9E  6EF7               	movwf	tblptrh,c
  2816  001CA0                     	if	0	;There are less than 3 active tblptr bytes
  2817  001CA0                     	endif
  2818  001CA0  0009               	tblrd		*+
  2819  001CA2  CFF5 F01C          	movff	tablat,___ftmul@f1
  2820  001CA6  0009               	tblrd		*+
  2821  001CA8  CFF5 F01D          	movff	tablat,___ftmul@f1+1
  2822  001CAC  000A               	tblrd		*-
  2823  001CAE  CFF5 F01E          	movff	tablat,___ftmul@f1+2
  2824  001CB2  0E00               	movlw	0
  2825  001CB4  6E1F               	movwf	___ftmul@f2,c
  2826  001CB6  0E00               	movlw	0
  2827  001CB8  6E20               	movwf	___ftmul@f2+1,c
  2828  001CBA  0E3F               	movlw	63
  2829  001CBC  6E21               	movwf	___ftmul@f2+2,c
  2830  001CBE  ECED  F010         	call	___ftmul	;wreg free
  2831  001CC2                     L7:
  2832  001CC2  C01C  F02B         	movff	?___ftmul,?_fround
  2833  001CC6  C01D  F02C         	movff	?___ftmul+1,?_fround+1
  2834  001CCA  C01E  F02D         	movff	?___ftmul+2,?_fround+2
  2835  001CCE  D000               	goto	l109
  2836  001CD0                     l109:
  2837  001CD0  0012               	return		;funcret
  2838  001CD2                     __end_of_fround:
  2839                           	opt stack 0
  2840                           tblptru	equ	0xFF8
  2841                           tblptrh	equ	0xFF7
  2842                           tblptrl	equ	0xFF6
  2843                           tablat	equ	0xFF5
  2844                           prodh	equ	0xFF4
  2845                           prodl	equ	0xFF3
  2846                           postinc0	equ	0xFEE
  2847                           wreg	equ	0xFE8
  2848                           postdec1	equ	0xFE5
  2849                           fsr1l	equ	0xFE1
  2850                           indf2	equ	0xFDF
  2851                           postinc2	equ	0xFDE
  2852                           postdec2	equ	0xFDD
  2853                           fsr2h	equ	0xFDA
  2854                           fsr2l	equ	0xFD9
  2855                           status	equ	0xFD8
  2856                           
  2857 ;; *************** function ___wmul *****************
  2858 ;; Defined at:
  2859 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\Umul16.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;  multiplier      2   14[COMRAM] unsigned int 
  2862 ;;  multiplicand    2   16[COMRAM] unsigned int 
  2863 ;; Auto vars:     Size  Location     Type
  2864 ;;  product         2   18[COMRAM] unsigned int 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  2   14[COMRAM] unsigned int 
  2867 ;; Registers used:
  2868 ;;		wreg, status,2, status,0, prodl, prodh
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2874 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2878 ;;Total ram usage:        6 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; This function calls:
  2881 ;;		Nothing
  2882 ;; This function is called by:
  2883 ;;		_fround
  2884 ;;		_scale
  2885 ;;		_printf
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text7
  2890  002954                     __ptext7:
  2891                           	opt stack 0
  2892  002954                     ___wmul:
  2893                           	opt stack 28
  2894                           
  2895                           ;incstack = 0
  2896  002954  500F               	movf	___wmul@multiplier,w,c
  2897  002956  0211               	mulwf	___wmul@multiplicand,c
  2898  002958  CFF3 F013          	movff	prodl,___wmul@product
  2899  00295C  CFF4 F014          	movff	prodh,___wmul@product+1
  2900  002960  500F               	movf	___wmul@multiplier,w,c
  2901  002962  0212               	mulwf	___wmul@multiplicand+1,c
  2902  002964  50F3               	movf	prodl,w,c
  2903  002966  2614               	addwf	___wmul@product+1,f,c
  2904  002968  5010               	movf	___wmul@multiplier+1,w,c
  2905  00296A  0211               	mulwf	___wmul@multiplicand,c
  2906  00296C  50F3               	movf	prodl,w,c
  2907  00296E  2614               	addwf	___wmul@product+1,f,c
  2908  002970  C013  F00F         	movff	___wmul@product,?___wmul
  2909  002974  C014  F010         	movff	___wmul@product+1,?___wmul+1
  2910  002978  D000               	goto	l208
  2911  00297A                     l208:
  2912  00297A  0012               	return		;funcret
  2913  00297C                     __end_of___wmul:
  2914                           	opt stack 0
  2915                           tblptru	equ	0xFF8
  2916                           tblptrh	equ	0xFF7
  2917                           tblptrl	equ	0xFF6
  2918                           tablat	equ	0xFF5
  2919                           prodh	equ	0xFF4
  2920                           prodl	equ	0xFF3
  2921                           postinc0	equ	0xFEE
  2922                           wreg	equ	0xFE8
  2923                           postdec1	equ	0xFE5
  2924                           fsr1l	equ	0xFE1
  2925                           indf2	equ	0xFDF
  2926                           postinc2	equ	0xFDE
  2927                           postdec2	equ	0xFDD
  2928                           fsr2h	equ	0xFDA
  2929                           fsr2l	equ	0xFD9
  2930                           status	equ	0xFD8
  2931                           
  2932 ;; *************** function ___ftmul *****************
  2933 ;; Defined at:
  2934 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftmul.c"
  2935 ;; Parameters:    Size  Location     Type
  2936 ;;  f1              3   27[COMRAM] float 
  2937 ;;  f2              3   30[COMRAM] float 
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;  f3_as_produc    3   37[COMRAM] unsigned um
  2940 ;;  sign            1   41[COMRAM] unsigned char 
  2941 ;;  cntr            1   40[COMRAM] unsigned char 
  2942 ;;  exp             1   36[COMRAM] unsigned char 
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  3   27[COMRAM] float 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0, cstack
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2952 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2953 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2954 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2955 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2956 ;;Total ram usage:       15 bytes
  2957 ;; Hardware stack levels used:    1
  2958 ;; Hardware stack levels required when called:    1
  2959 ;; This function calls:
  2960 ;;		___ftpack
  2961 ;; This function is called by:
  2962 ;;		_main
  2963 ;;		_fround
  2964 ;;		_scale
  2965 ;;		_printf
  2966 ;; This function uses a non-reentrant model
  2967 ;;
  2968                           
  2969                           	psect	text8
  2970  0021DA                     __ptext8:
  2971                           	opt stack 0
  2972  0021DA                     ___ftmul:
  2973                           	opt stack 27
  2974                           
  2975                           ;incstack = 0
  2976  0021DA  C01E  F022         	movff	___ftmul@f1+2,??___ftmul
  2977  0021DE  6A23               	clrf	(??___ftmul+1)& (0+255),c
  2978  0021E0  6A24               	clrf	(??___ftmul+2)& (0+255),c
  2979  0021E2  341D               	rlcf	___ftmul@f1+1,w,c
  2980  0021E4  3622               	rlcf	??___ftmul& (0+255),f,c
  2981  0021E6  E301               	bnc	u1651
  2982  0021E8  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  2983  0021EA                     u1651:
  2984  0021EA  5022               	movf	??___ftmul,w,c
  2985  0021EC  6E25               	movwf	___ftmul@exp,c
  2986  0021EE  5025               	movf	___ftmul@exp,w,c
  2987  0021F0  A4D8               	btfss	status,2,c
  2988  0021F2  D002               	goto	l1819
  2989  0021F4  D00E               	goto	l1821
  2990  0021F6  D06C               	goto	l637
  2991  0021F8                     l1819:
  2992  0021F8  C021  F022         	movff	___ftmul@f2+2,??___ftmul
  2993  0021FC  6A23               	clrf	(??___ftmul+1)& (0+255),c
  2994  0021FE  6A24               	clrf	(??___ftmul+2)& (0+255),c
  2995  002200  3420               	rlcf	___ftmul@f2+1,w,c
  2996  002202  3622               	rlcf	??___ftmul& (0+255),f,c
  2997  002204  E301               	bnc	u1671
  2998  002206  8023               	bsf	(??___ftmul+1)& (0+255),0,c
  2999  002208                     u1671:
  3000  002208  5022               	movf	??___ftmul,w,c
  3001  00220A  6E2A               	movwf	___ftmul@sign,c
  3002  00220C  502A               	movf	___ftmul@sign,w,c
  3003  00220E  A4D8               	btfss	status,2,c
  3004  002210  D007               	goto	l1825
  3005  002212                     l1821:
  3006  002212  0E00               	movlw	0
  3007  002214  6E1C               	movwf	?___ftmul,c
  3008  002216  0E00               	movlw	0
  3009  002218  6E1D               	movwf	?___ftmul+1,c
  3010  00221A  0E00               	movlw	0
  3011  00221C  6E1E               	movwf	?___ftmul+2,c
  3012  00221E  D058               	goto	l637
  3013  002220                     l1825:
  3014  002220  502A               	movf	___ftmul@sign,w,c
  3015  002222  0F7B               	addlw	123
  3016  002224  2625               	addwf	___ftmul@exp,f,c
  3017  002226  C01E  F02A         	movff	___ftmul@f1+2,___ftmul@sign
  3018  00222A  5021               	movf	___ftmul@f2+2,w,c
  3019  00222C  1A2A               	xorwf	___ftmul@sign,f,c
  3020  00222E  0E80               	movlw	128
  3021  002230  162A               	andwf	___ftmul@sign,f,c
  3022  002232  8E1D               	bsf	___ftmul@f1+1,7,c
  3023  002234  8E20               	bsf	___ftmul@f2+1,7,c
  3024  002236  0EFF               	movlw	255
  3025  002238  161F               	andwf	___ftmul@f2,f,c
  3026  00223A  0EFF               	movlw	255
  3027  00223C  1620               	andwf	___ftmul@f2+1,f,c
  3028  00223E  0E00               	movlw	0
  3029  002240  1621               	andwf	___ftmul@f2+2,f,c
  3030  002242  0E00               	movlw	0
  3031  002244  6E26               	movwf	___ftmul@f3_as_product,c
  3032  002246  0E00               	movlw	0
  3033  002248  6E27               	movwf	___ftmul@f3_as_product+1,c
  3034  00224A  0E00               	movlw	0
  3035  00224C  6E28               	movwf	___ftmul@f3_as_product+2,c
  3036  00224E  0E07               	movlw	7
  3037  002250  6E29               	movwf	___ftmul@cntr,c
  3038  002252  D000               	goto	l1839
  3039  002254                     l1839:
  3040  002254  A01C               	btfss	___ftmul@f1,0,c
  3041  002256  D007               	goto	l1843
  3042  002258  501F               	movf	___ftmul@f2,w,c
  3043  00225A  2626               	addwf	___ftmul@f3_as_product,f,c
  3044  00225C  5020               	movf	___ftmul@f2+1,w,c
  3045  00225E  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  3046  002260  5021               	movf	___ftmul@f2+2,w,c
  3047  002262  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  3048  002264  D000               	goto	l1843
  3049  002266                     l1843:
  3050  002266  90D8               	bcf	status,0,c
  3051  002268  321E               	rrcf	___ftmul@f1+2,f,c
  3052  00226A  321D               	rrcf	___ftmul@f1+1,f,c
  3053  00226C  321C               	rrcf	___ftmul@f1,f,c
  3054  00226E  90D8               	bcf	status,0,c
  3055  002270  361F               	rlcf	___ftmul@f2,f,c
  3056  002272  3620               	rlcf	___ftmul@f2+1,f,c
  3057  002274  3621               	rlcf	___ftmul@f2+2,f,c
  3058  002276  2E29               	decfsz	___ftmul@cntr,f,c
  3059  002278  D7ED               	goto	l1839
  3060  00227A  D000               	goto	l1847
  3061  00227C                     l1847:
  3062  00227C  0E09               	movlw	9
  3063  00227E  6E29               	movwf	___ftmul@cntr,c
  3064  002280  D000               	goto	l1849
  3065  002282                     l1849:
  3066  002282  A01C               	btfss	___ftmul@f1,0,c
  3067  002284  D007               	goto	l1853
  3068  002286  501F               	movf	___ftmul@f2,w,c
  3069  002288  2626               	addwf	___ftmul@f3_as_product,f,c
  3070  00228A  5020               	movf	___ftmul@f2+1,w,c
  3071  00228C  2227               	addwfc	___ftmul@f3_as_product+1,f,c
  3072  00228E  5021               	movf	___ftmul@f2+2,w,c
  3073  002290  2228               	addwfc	___ftmul@f3_as_product+2,f,c
  3074  002292  D000               	goto	l1853
  3075  002294                     l1853:
  3076  002294  90D8               	bcf	status,0,c
  3077  002296  321E               	rrcf	___ftmul@f1+2,f,c
  3078  002298  321D               	rrcf	___ftmul@f1+1,f,c
  3079  00229A  321C               	rrcf	___ftmul@f1,f,c
  3080  00229C  90D8               	bcf	status,0,c
  3081  00229E  3228               	rrcf	___ftmul@f3_as_product+2,f,c
  3082  0022A0  3227               	rrcf	___ftmul@f3_as_product+1,f,c
  3083  0022A2  3226               	rrcf	___ftmul@f3_as_product,f,c
  3084  0022A4  2E29               	decfsz	___ftmul@cntr,f,c
  3085  0022A6  D7ED               	goto	l1849
  3086  0022A8  D000               	goto	l1857
  3087  0022AA                     l1857:
  3088  0022AA  C026  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  3089  0022AE  C027  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  3090  0022B2  C028  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  3091  0022B6  C025  F004         	movff	___ftmul@exp,___ftpack@exp
  3092  0022BA  C02A  F005         	movff	___ftmul@sign,___ftpack@sign
  3093  0022BE  EC4D  F012         	call	___ftpack	;wreg free
  3094  0022C2  C001  F01C         	movff	?___ftpack,?___ftmul
  3095  0022C6  C002  F01D         	movff	?___ftpack+1,?___ftmul+1
  3096  0022CA  C003  F01E         	movff	?___ftpack+2,?___ftmul+2
  3097  0022CE  D000               	goto	l637
  3098  0022D0                     l637:
  3099  0022D0  0012               	return		;funcret
  3100  0022D2                     __end_of___ftmul:
  3101                           	opt stack 0
  3102                           tblptru	equ	0xFF8
  3103                           tblptrh	equ	0xFF7
  3104                           tblptrl	equ	0xFF6
  3105                           tablat	equ	0xFF5
  3106                           prodh	equ	0xFF4
  3107                           prodl	equ	0xFF3
  3108                           postinc0	equ	0xFEE
  3109                           wreg	equ	0xFE8
  3110                           postdec1	equ	0xFE5
  3111                           fsr1l	equ	0xFE1
  3112                           indf2	equ	0xFDF
  3113                           postinc2	equ	0xFDE
  3114                           postdec2	equ	0xFDD
  3115                           fsr2h	equ	0xFDA
  3116                           fsr2l	equ	0xFD9
  3117                           status	equ	0xFD8
  3118                           
  3119 ;; *************** function ___awmod *****************
  3120 ;; Defined at:
  3121 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awmod.c"
  3122 ;; Parameters:    Size  Location     Type
  3123 ;;  dividend        2    0[COMRAM] int 
  3124 ;;  divisor         2    2[COMRAM] int 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  sign            1    5[COMRAM] unsigned char 
  3127 ;;  counter         1    4[COMRAM] unsigned char 
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  2    0[COMRAM] int 
  3130 ;; Registers used:
  3131 ;;		wreg, status,2, status,0
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3137 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3138 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;Total ram usage:        6 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; This function calls:
  3144 ;;		Nothing
  3145 ;; This function is called by:
  3146 ;;		_fround
  3147 ;;		_scale
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text9
  3152  002718                     __ptext9:
  3153                           	opt stack 0
  3154  002718                     ___awmod:
  3155                           	opt stack 28
  3156                           
  3157                           ;incstack = 0
  3158  002718  0E00               	movlw	0
  3159  00271A  6E06               	movwf	___awmod@sign,c
  3160  00271C  AE02               	btfss	___awmod@dividend+1,7,c
  3161  00271E  D007               	goto	l1913
  3162  002720  6C01               	negf	___awmod@dividend,c
  3163  002722  1E02               	comf	___awmod@dividend+1,f,c
  3164  002724  B0D8               	btfsc	status,0,c
  3165  002726  2A02               	incf	___awmod@dividend+1,f,c
  3166  002728  0E01               	movlw	1
  3167  00272A  6E06               	movwf	___awmod@sign,c
  3168  00272C  D000               	goto	l1913
  3169  00272E                     l1913:
  3170  00272E  AE04               	btfss	___awmod@divisor+1,7,c
  3171  002730  D005               	goto	l1917
  3172  002732  6C03               	negf	___awmod@divisor,c
  3173  002734  1E04               	comf	___awmod@divisor+1,f,c
  3174  002736  B0D8               	btfsc	status,0,c
  3175  002738  2A04               	incf	___awmod@divisor+1,f,c
  3176  00273A  D000               	goto	l1917
  3177  00273C                     l1917:
  3178  00273C  5003               	movf	___awmod@divisor,w,c
  3179  00273E  1004               	iorwf	___awmod@divisor+1,w,c
  3180  002740  B4D8               	btfsc	status,2,c
  3181  002742  D01D               	goto	l1933
  3182  002744  0E01               	movlw	1
  3183  002746  6E05               	movwf	___awmod@counter,c
  3184  002748  D005               	goto	l1923
  3185  00274A                     l1921:
  3186  00274A  90D8               	bcf	status,0,c
  3187  00274C  3603               	rlcf	___awmod@divisor,f,c
  3188  00274E  3604               	rlcf	___awmod@divisor+1,f,c
  3189  002750  2A05               	incf	___awmod@counter,f,c
  3190  002752  D000               	goto	l1923
  3191  002754                     l1923:
  3192  002754  BE04               	btfsc	___awmod@divisor+1,7,c
  3193  002756  D002               	goto	l1925
  3194  002758  D7F8               	goto	l1921
  3195  00275A  D000               	goto	l1925
  3196  00275C                     l1925:
  3197  00275C  5003               	movf	___awmod@divisor,w,c
  3198  00275E  5C01               	subwf	___awmod@dividend,w,c
  3199  002760  5004               	movf	___awmod@divisor+1,w,c
  3200  002762  5802               	subwfb	___awmod@dividend+1,w,c
  3201  002764  A0D8               	btfss	status,0,c
  3202  002766  D005               	goto	l1929
  3203  002768  5003               	movf	___awmod@divisor,w,c
  3204  00276A  5E01               	subwf	___awmod@dividend,f,c
  3205  00276C  5004               	movf	___awmod@divisor+1,w,c
  3206  00276E  5A02               	subwfb	___awmod@dividend+1,f,c
  3207  002770  D000               	goto	l1929
  3208  002772                     l1929:
  3209  002772  90D8               	bcf	status,0,c
  3210  002774  3204               	rrcf	___awmod@divisor+1,f,c
  3211  002776  3203               	rrcf	___awmod@divisor,f,c
  3212  002778  2E05               	decfsz	___awmod@counter,f,c
  3213  00277A  D7F0               	goto	l1925
  3214  00277C  D000               	goto	l1933
  3215  00277E                     l1933:
  3216  00277E  5006               	movf	___awmod@sign,w,c
  3217  002780  B4D8               	btfsc	status,2,c
  3218  002782  D005               	goto	l1937
  3219  002784  6C01               	negf	___awmod@dividend,c
  3220  002786  1E02               	comf	___awmod@dividend+1,f,c
  3221  002788  B0D8               	btfsc	status,0,c
  3222  00278A  2A02               	incf	___awmod@dividend+1,f,c
  3223  00278C  D000               	goto	l1937
  3224  00278E                     l1937:
  3225  00278E  C001  F001         	movff	___awmod@dividend,?___awmod
  3226  002792  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  3227  002796  D000               	goto	l414
  3228  002798                     l414:
  3229  002798  0012               	return		;funcret
  3230  00279A                     __end_of___awmod:
  3231                           	opt stack 0
  3232                           tblptru	equ	0xFF8
  3233                           tblptrh	equ	0xFF7
  3234                           tblptrl	equ	0xFF6
  3235                           tablat	equ	0xFF5
  3236                           prodh	equ	0xFF4
  3237                           prodl	equ	0xFF3
  3238                           postinc0	equ	0xFEE
  3239                           wreg	equ	0xFE8
  3240                           postdec1	equ	0xFE5
  3241                           fsr1l	equ	0xFE1
  3242                           indf2	equ	0xFDF
  3243                           postinc2	equ	0xFDE
  3244                           postdec2	equ	0xFDD
  3245                           fsr2h	equ	0xFDA
  3246                           fsr2l	equ	0xFD9
  3247                           status	equ	0xFD8
  3248                           
  3249 ;; *************** function ___awdiv *****************
  3250 ;; Defined at:
  3251 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\awdiv.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;  dividend        2    6[COMRAM] int 
  3254 ;;  divisor         2    8[COMRAM] int 
  3255 ;; Auto vars:     Size  Location     Type
  3256 ;;  quotient        2   12[COMRAM] int 
  3257 ;;  sign            1   11[COMRAM] unsigned char 
  3258 ;;  counter         1   10[COMRAM] unsigned char 
  3259 ;; Return value:  Size  Location     Type
  3260 ;;                  2    6[COMRAM] int 
  3261 ;; Registers used:
  3262 ;;		wreg, status,2, status,0
  3263 ;; Tracked objects:
  3264 ;;		On entry : 0/0
  3265 ;;		On exit  : 0/0
  3266 ;;		Unchanged: 0/0
  3267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3268 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3269 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3271 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3272 ;;Total ram usage:        8 bytes
  3273 ;; Hardware stack levels used:    1
  3274 ;; This function calls:
  3275 ;;		Nothing
  3276 ;; This function is called by:
  3277 ;;		_fround
  3278 ;;		_scale
  3279 ;;		_printf
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text10
  3284  002560                     __ptext10:
  3285                           	opt stack 0
  3286  002560                     ___awdiv:
  3287                           	opt stack 28
  3288                           
  3289                           ;incstack = 0
  3290  002560  0E00               	movlw	0
  3291  002562  6E0C               	movwf	___awdiv@sign,c
  3292  002564  AE0A               	btfss	___awdiv@divisor+1,7,c
  3293  002566  D007               	goto	l1869
  3294  002568  6C09               	negf	___awdiv@divisor,c
  3295  00256A  1E0A               	comf	___awdiv@divisor+1,f,c
  3296  00256C  B0D8               	btfsc	status,0,c
  3297  00256E  2A0A               	incf	___awdiv@divisor+1,f,c
  3298  002570  0E01               	movlw	1
  3299  002572  6E0C               	movwf	___awdiv@sign,c
  3300  002574  D000               	goto	l1869
  3301  002576                     l1869:
  3302  002576  AE08               	btfss	___awdiv@dividend+1,7,c
  3303  002578  D007               	goto	l1875
  3304  00257A  6C07               	negf	___awdiv@dividend,c
  3305  00257C  1E08               	comf	___awdiv@dividend+1,f,c
  3306  00257E  B0D8               	btfsc	status,0,c
  3307  002580  2A08               	incf	___awdiv@dividend+1,f,c
  3308  002582  0E01               	movlw	1
  3309  002584  1A0C               	xorwf	___awdiv@sign,f,c
  3310  002586  D000               	goto	l1875
  3311  002588                     l1875:
  3312  002588  0E00               	movlw	0
  3313  00258A  6E0E               	movwf	___awdiv@quotient+1,c
  3314  00258C  0E00               	movlw	0
  3315  00258E  6E0D               	movwf	___awdiv@quotient,c
  3316  002590  5009               	movf	___awdiv@divisor,w,c
  3317  002592  100A               	iorwf	___awdiv@divisor+1,w,c
  3318  002594  B4D8               	btfsc	status,2,c
  3319  002596  D021               	goto	l1897
  3320  002598  0E01               	movlw	1
  3321  00259A  6E0B               	movwf	___awdiv@counter,c
  3322  00259C  D005               	goto	l1883
  3323  00259E                     l1881:
  3324  00259E  90D8               	bcf	status,0,c
  3325  0025A0  3609               	rlcf	___awdiv@divisor,f,c
  3326  0025A2  360A               	rlcf	___awdiv@divisor+1,f,c
  3327  0025A4  2A0B               	incf	___awdiv@counter,f,c
  3328  0025A6  D000               	goto	l1883
  3329  0025A8                     l1883:
  3330  0025A8  BE0A               	btfsc	___awdiv@divisor+1,7,c
  3331  0025AA  D002               	goto	l1885
  3332  0025AC  D7F8               	goto	l1881
  3333  0025AE  D000               	goto	l1885
  3334  0025B0                     l1885:
  3335  0025B0  90D8               	bcf	status,0,c
  3336  0025B2  360D               	rlcf	___awdiv@quotient,f,c
  3337  0025B4  360E               	rlcf	___awdiv@quotient+1,f,c
  3338  0025B6  5009               	movf	___awdiv@divisor,w,c
  3339  0025B8  5C07               	subwf	___awdiv@dividend,w,c
  3340  0025BA  500A               	movf	___awdiv@divisor+1,w,c
  3341  0025BC  5808               	subwfb	___awdiv@dividend+1,w,c
  3342  0025BE  A0D8               	btfss	status,0,c
  3343  0025C0  D006               	goto	l1893
  3344  0025C2  5009               	movf	___awdiv@divisor,w,c
  3345  0025C4  5E07               	subwf	___awdiv@dividend,f,c
  3346  0025C6  500A               	movf	___awdiv@divisor+1,w,c
  3347  0025C8  5A08               	subwfb	___awdiv@dividend+1,f,c
  3348  0025CA  800D               	bsf	___awdiv@quotient,0,c
  3349  0025CC  D000               	goto	l1893
  3350  0025CE                     l1893:
  3351  0025CE  90D8               	bcf	status,0,c
  3352  0025D0  320A               	rrcf	___awdiv@divisor+1,f,c
  3353  0025D2  3209               	rrcf	___awdiv@divisor,f,c
  3354  0025D4  2E0B               	decfsz	___awdiv@counter,f,c
  3355  0025D6  D7EC               	goto	l1885
  3356  0025D8  D000               	goto	l1897
  3357  0025DA                     l1897:
  3358  0025DA  500C               	movf	___awdiv@sign,w,c
  3359  0025DC  B4D8               	btfsc	status,2,c
  3360  0025DE  D005               	goto	l1901
  3361  0025E0  6C0D               	negf	___awdiv@quotient,c
  3362  0025E2  1E0E               	comf	___awdiv@quotient+1,f,c
  3363  0025E4  B0D8               	btfsc	status,0,c
  3364  0025E6  2A0E               	incf	___awdiv@quotient+1,f,c
  3365  0025E8  D000               	goto	l1901
  3366  0025EA                     l1901:
  3367  0025EA  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  3368  0025EE  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  3369  0025F2  D000               	goto	l401
  3370  0025F4                     l401:
  3371  0025F4  0012               	return		;funcret
  3372  0025F6                     __end_of___awdiv:
  3373                           	opt stack 0
  3374                           tblptru	equ	0xFF8
  3375                           tblptrh	equ	0xFF7
  3376                           tblptrl	equ	0xFF6
  3377                           tablat	equ	0xFF5
  3378                           prodh	equ	0xFF4
  3379                           prodl	equ	0xFF3
  3380                           postinc0	equ	0xFEE
  3381                           wreg	equ	0xFE8
  3382                           postdec1	equ	0xFE5
  3383                           fsr1l	equ	0xFE1
  3384                           indf2	equ	0xFDF
  3385                           postinc2	equ	0xFDE
  3386                           postdec2	equ	0xFDD
  3387                           fsr2h	equ	0xFDA
  3388                           fsr2l	equ	0xFD9
  3389                           status	equ	0xFD8
  3390                           
  3391 ;; *************** function __tdiv_to_l_ *****************
  3392 ;; Defined at:
  3393 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdivl.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  f1              3    0[COMRAM] float 
  3396 ;;  f2              3    3[COMRAM] float 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  quot            4    9[COMRAM] unsigned long 
  3399 ;;  exp1            1   14[COMRAM] unsigned char 
  3400 ;;  cntr            1   13[COMRAM] unsigned char 
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  4    0[COMRAM] unsigned long 
  3403 ;; Registers used:
  3404 ;;		wreg, status,2, status,0
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3410 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3411 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;Total ram usage:       15 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; This function calls:
  3417 ;;		Nothing
  3418 ;; This function is called by:
  3419 ;;		_printf
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           	psect	text11
  3424  001FC0                     __ptext11:
  3425                           	opt stack 0
  3426  001FC0                     __tdiv_to_l_:
  3427                           	opt stack 29
  3428                           
  3429                           ;incstack = 0
  3430  001FC0  C003  F007         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  3431  001FC4  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3432  001FC6  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3433  001FC8  3402               	rlcf	__tdiv_to_l_@f1+1,w,c
  3434  001FCA  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3435  001FCC  E301               	bnc	u2011
  3436  001FCE  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3437  001FD0                     u2011:
  3438  001FD0  5007               	movf	??__tdiv_to_l_,w,c
  3439  001FD2  6E0F               	movwf	__tdiv_to_l_@exp1,c
  3440  001FD4  500F               	movf	__tdiv_to_l_@exp1,w,c
  3441  001FD6  A4D8               	btfss	status,2,c
  3442  001FD8  D002               	goto	l2061
  3443  001FDA  D05D               	goto	l2103
  3444  001FDC  D078               	goto	l613
  3445  001FDE                     l2061:
  3446  001FDE  C006  F007         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  3447  001FE2  6A08               	clrf	(??__tdiv_to_l_+1)& (0+255),c
  3448  001FE4  6A09               	clrf	(??__tdiv_to_l_+2)& (0+255),c
  3449  001FE6  3405               	rlcf	__tdiv_to_l_@f2+1,w,c
  3450  001FE8  3607               	rlcf	??__tdiv_to_l_& (0+255),f,c
  3451  001FEA  E301               	bnc	u2031
  3452  001FEC  8008               	bsf	(??__tdiv_to_l_+1)& (0+255),0,c
  3453  001FEE                     u2031:
  3454  001FEE  5007               	movf	??__tdiv_to_l_,w,c
  3455  001FF0  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3456  001FF2  500E               	movf	__tdiv_to_l_@cntr,w,c
  3457  001FF4  A4D8               	btfss	status,2,c
  3458  001FF6  D002               	goto	l2067
  3459  001FF8  D04E               	goto	l2103
  3460  001FFA  D069               	goto	l613
  3461  001FFC                     l2067:
  3462  001FFC  8E02               	bsf	__tdiv_to_l_@f1+1,7,c
  3463  001FFE  0EFF               	movlw	255
  3464  002000  1601               	andwf	__tdiv_to_l_@f1,f,c
  3465  002002  0EFF               	movlw	255
  3466  002004  1602               	andwf	__tdiv_to_l_@f1+1,f,c
  3467  002006  0E00               	movlw	0
  3468  002008  1603               	andwf	__tdiv_to_l_@f1+2,f,c
  3469  00200A  8E05               	bsf	__tdiv_to_l_@f2+1,7,c
  3470  00200C  0EFF               	movlw	255
  3471  00200E  1604               	andwf	__tdiv_to_l_@f2,f,c
  3472  002010  0EFF               	movlw	255
  3473  002012  1605               	andwf	__tdiv_to_l_@f2+1,f,c
  3474  002014  0E00               	movlw	0
  3475  002016  1606               	andwf	__tdiv_to_l_@f2+2,f,c
  3476  002018  0E00               	movlw	0
  3477  00201A  6E0A               	movwf	__tdiv_to_l_@quot,c
  3478  00201C  0E00               	movlw	0
  3479  00201E  6E0B               	movwf	__tdiv_to_l_@quot+1,c
  3480  002020  0E00               	movlw	0
  3481  002022  6E0C               	movwf	__tdiv_to_l_@quot+2,c
  3482  002024  0E00               	movlw	0
  3483  002026  6E0D               	movwf	__tdiv_to_l_@quot+3,c
  3484  002028  0E7F               	movlw	127
  3485  00202A  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3486  00202C  500E               	movf	__tdiv_to_l_@cntr,w,c
  3487  00202E  0F98               	addlw	152
  3488  002030  5E0F               	subwf	__tdiv_to_l_@exp1,f,c
  3489  002032  0E18               	movlw	24
  3490  002034  6E0E               	movwf	__tdiv_to_l_@cntr,c
  3491  002036                     l615:
  3492  002036  90D8               	bcf	status,0,c
  3493  002038  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3494  00203A  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3495  00203C  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3496  00203E  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3497  002040  5004               	movf	__tdiv_to_l_@f2,w,c
  3498  002042  5C01               	subwf	__tdiv_to_l_@f1,w,c
  3499  002044  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3500  002046  5802               	subwfb	__tdiv_to_l_@f1+1,w,c
  3501  002048  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3502  00204A  5803               	subwfb	__tdiv_to_l_@f1+2,w,c
  3503  00204C  A0D8               	btfss	status,0,c
  3504  00204E  D007               	goto	l616
  3505  002050  5004               	movf	__tdiv_to_l_@f2,w,c
  3506  002052  5E01               	subwf	__tdiv_to_l_@f1,f,c
  3507  002054  5005               	movf	__tdiv_to_l_@f2+1,w,c
  3508  002056  5A02               	subwfb	__tdiv_to_l_@f1+1,f,c
  3509  002058  5006               	movf	__tdiv_to_l_@f2+2,w,c
  3510  00205A  5A03               	subwfb	__tdiv_to_l_@f1+2,f,c
  3511  00205C  800A               	bsf	__tdiv_to_l_@quot,0,c
  3512  00205E                     l616:
  3513  00205E  90D8               	bcf	status,0,c
  3514  002060  3601               	rlcf	__tdiv_to_l_@f1,f,c
  3515  002062  3602               	rlcf	__tdiv_to_l_@f1+1,f,c
  3516  002064  3603               	rlcf	__tdiv_to_l_@f1+2,f,c
  3517  002066  2E0E               	decfsz	__tdiv_to_l_@cntr,f,c
  3518  002068  D7E6               	goto	l615
  3519  00206A  D000               	goto	l2089
  3520  00206C                     l2089:
  3521  00206C  AE0F               	btfss	__tdiv_to_l_@exp1,7,c
  3522  00206E  D010               	goto	l2101
  3523  002070  500F               	movf	__tdiv_to_l_@exp1,w,c
  3524  002072  0A80               	xorlw	128
  3525  002074  0F97               	addlw	151
  3526  002076  B0D8               	btfsc	status,0,c
  3527  002078  D003               	goto	l2097
  3528  00207A  D00D               	goto	l2103
  3529  00207C  D028               	goto	l613
  3530  00207E  D000               	goto	l2097
  3531  002080                     l2097:
  3532  002080  90D8               	bcf	status,0,c
  3533  002082  320D               	rrcf	__tdiv_to_l_@quot+3,f,c
  3534  002084  320C               	rrcf	__tdiv_to_l_@quot+2,f,c
  3535  002086  320B               	rrcf	__tdiv_to_l_@quot+1,f,c
  3536  002088  320A               	rrcf	__tdiv_to_l_@quot,f,c
  3537  00208A  3E0F               	incfsz	__tdiv_to_l_@exp1,f,c
  3538  00208C  D7F9               	goto	l2097
  3539  00208E  D017               	goto	l622
  3540  002090                     l2101:
  3541  002090  0E17               	movlw	23
  3542  002092  640F               	cpfsgt	__tdiv_to_l_@exp1,c
  3543  002094  D011               	goto	l2109
  3544  002096                     l2103:
  3545  002096  0E00               	movlw	0
  3546  002098  6E01               	movwf	?__tdiv_to_l_,c
  3547  00209A  0E00               	movlw	0
  3548  00209C  6E02               	movwf	?__tdiv_to_l_+1,c
  3549  00209E  0E00               	movlw	0
  3550  0020A0  6E03               	movwf	?__tdiv_to_l_+2,c
  3551  0020A2  0E00               	movlw	0
  3552  0020A4  6E04               	movwf	?__tdiv_to_l_+3,c
  3553  0020A6  D013               	goto	l613
  3554  0020A8  D007               	goto	l2109
  3555  0020AA                     l2107:
  3556  0020AA  90D8               	bcf	status,0,c
  3557  0020AC  360A               	rlcf	__tdiv_to_l_@quot,f,c
  3558  0020AE  360B               	rlcf	__tdiv_to_l_@quot+1,f,c
  3559  0020B0  360C               	rlcf	__tdiv_to_l_@quot+2,f,c
  3560  0020B2  360D               	rlcf	__tdiv_to_l_@quot+3,f,c
  3561  0020B4  060F               	decf	__tdiv_to_l_@exp1,f,c
  3562  0020B6  D000               	goto	l2109
  3563  0020B8                     l2109:
  3564  0020B8  500F               	movf	__tdiv_to_l_@exp1,w,c
  3565  0020BA  A4D8               	btfss	status,2,c
  3566  0020BC  D7F6               	goto	l2107
  3567  0020BE                     l622:
  3568  0020BE  C00A  F001         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  3569  0020C2  C00B  F002         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  3570  0020C6  C00C  F003         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  3571  0020CA  C00D  F004         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  3572  0020CE                     l613:
  3573  0020CE  0012               	return		;funcret
  3574  0020D0                     __end_of__tdiv_to_l_:
  3575                           	opt stack 0
  3576                           tblptru	equ	0xFF8
  3577                           tblptrh	equ	0xFF7
  3578                           tblptrl	equ	0xFF6
  3579                           tablat	equ	0xFF5
  3580                           prodh	equ	0xFF4
  3581                           prodl	equ	0xFF3
  3582                           postinc0	equ	0xFEE
  3583                           wreg	equ	0xFE8
  3584                           postdec1	equ	0xFE5
  3585                           fsr1l	equ	0xFE1
  3586                           indf2	equ	0xFDF
  3587                           postinc2	equ	0xFDE
  3588                           postdec2	equ	0xFDD
  3589                           fsr2h	equ	0xFDA
  3590                           fsr2l	equ	0xFD9
  3591                           status	equ	0xFD8
  3592                           
  3593 ;; *************** function __div_to_l_ *****************
  3594 ;; Defined at:
  3595 ;;		line 60 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fldivl.c"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  f1              3    0[COMRAM] unsigned long 
  3598 ;;  f2              3    3[COMRAM] unsigned long 
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  quot            4    6[COMRAM] unsigned long 
  3601 ;;  exp1            1   11[COMRAM] unsigned char 
  3602 ;;  cntr            1   10[COMRAM] unsigned char 
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  4    0[COMRAM] unsigned long 
  3605 ;; Registers used:
  3606 ;;		wreg, status,2, status,0
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3612 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;Total ram usage:       12 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; This function calls:
  3619 ;;		Nothing
  3620 ;; This function is called by:
  3621 ;;		_printf
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text12
  3626  0020D0                     __ptext12:
  3627                           	opt stack 0
  3628  0020D0                     __div_to_l_:
  3629                           	opt stack 29
  3630                           
  3631                           ;incstack = 0
  3632  0020D0  3403               	rlcf	__div_to_l_@f1+2,w,c
  3633  0020D2  3404               	rlcf	__div_to_l_@f1+3,w,c
  3634  0020D4  6E0C               	movwf	__div_to_l_@exp1,c
  3635  0020D6  500C               	movf	__div_to_l_@exp1,w,c
  3636  0020D8  A4D8               	btfss	status,2,c
  3637  0020DA  D002               	goto	l2117
  3638  0020DC  D061               	goto	l2163
  3639  0020DE  D07C               	goto	l492
  3640  0020E0                     l2117:
  3641  0020E0  3406               	rlcf	__div_to_l_@f2+2,w,c
  3642  0020E2  3407               	rlcf	__div_to_l_@f2+3,w,c
  3643  0020E4  6E0B               	movwf	__div_to_l_@cntr,c
  3644  0020E6  500B               	movf	__div_to_l_@cntr,w,c
  3645  0020E8  A4D8               	btfss	status,2,c
  3646  0020EA  D002               	goto	l2123
  3647  0020EC  D059               	goto	l2163
  3648  0020EE  D074               	goto	l492
  3649  0020F0                     l2123:
  3650  0020F0  8E03               	bsf	__div_to_l_@f1+2,7,c
  3651  0020F2  0EFF               	movlw	255
  3652  0020F4  1601               	andwf	__div_to_l_@f1,f,c
  3653  0020F6  0EFF               	movlw	255
  3654  0020F8  1602               	andwf	__div_to_l_@f1+1,f,c
  3655  0020FA  0EFF               	movlw	255
  3656  0020FC  1603               	andwf	__div_to_l_@f1+2,f,c
  3657  0020FE  0E00               	movlw	0
  3658  002100  1604               	andwf	__div_to_l_@f1+3,f,c
  3659  002102  8E06               	bsf	__div_to_l_@f2+2,7,c
  3660  002104  0EFF               	movlw	255
  3661  002106  1604               	andwf	__div_to_l_@f2,f,c
  3662  002108  0EFF               	movlw	255
  3663  00210A  1605               	andwf	__div_to_l_@f2+1,f,c
  3664  00210C  0EFF               	movlw	255
  3665  00210E  1606               	andwf	__div_to_l_@f2+2,f,c
  3666  002110  0E00               	movlw	0
  3667  002112  1607               	andwf	__div_to_l_@f2+3,f,c
  3668  002114  0E00               	movlw	0
  3669  002116  6E07               	movwf	__div_to_l_@quot,c
  3670  002118  0E00               	movlw	0
  3671  00211A  6E08               	movwf	__div_to_l_@quot+1,c
  3672  00211C  0E00               	movlw	0
  3673  00211E  6E09               	movwf	__div_to_l_@quot+2,c
  3674  002120  0E00               	movlw	0
  3675  002122  6E0A               	movwf	__div_to_l_@quot+3,c
  3676  002124  0E7F               	movlw	127
  3677  002126  5E0C               	subwf	__div_to_l_@exp1,f,c
  3678  002128  500B               	movf	__div_to_l_@cntr,w,c
  3679  00212A  0FA0               	addlw	160
  3680  00212C  5E0C               	subwf	__div_to_l_@exp1,f,c
  3681  00212E  0E20               	movlw	32
  3682  002130  6E0B               	movwf	__div_to_l_@cntr,c
  3683  002132  D000               	goto	l2137
  3684  002134                     l2137:
  3685  002134  90D8               	bcf	status,0,c
  3686  002136  3607               	rlcf	__div_to_l_@quot,f,c
  3687  002138  3608               	rlcf	__div_to_l_@quot+1,f,c
  3688  00213A  3609               	rlcf	__div_to_l_@quot+2,f,c
  3689  00213C  360A               	rlcf	__div_to_l_@quot+3,f,c
  3690  00213E  5004               	movf	__div_to_l_@f2,w,c
  3691  002140  5C01               	subwf	__div_to_l_@f1,w,c
  3692  002142  5005               	movf	__div_to_l_@f2+1,w,c
  3693  002144  5802               	subwfb	__div_to_l_@f1+1,w,c
  3694  002146  5006               	movf	__div_to_l_@f2+2,w,c
  3695  002148  5803               	subwfb	__div_to_l_@f1+2,w,c
  3696  00214A  5007               	movf	__div_to_l_@f2+3,w,c
  3697  00214C  5804               	subwfb	__div_to_l_@f1+3,w,c
  3698  00214E  A0D8               	btfss	status,0,c
  3699  002150  D00A               	goto	l2145
  3700  002152  5004               	movf	__div_to_l_@f2,w,c
  3701  002154  5E01               	subwf	__div_to_l_@f1,f,c
  3702  002156  5005               	movf	__div_to_l_@f2+1,w,c
  3703  002158  5A02               	subwfb	__div_to_l_@f1+1,f,c
  3704  00215A  5006               	movf	__div_to_l_@f2+2,w,c
  3705  00215C  5A03               	subwfb	__div_to_l_@f1+2,f,c
  3706  00215E  5007               	movf	__div_to_l_@f2+3,w,c
  3707  002160  5A04               	subwfb	__div_to_l_@f1+3,f,c
  3708  002162  8007               	bsf	__div_to_l_@quot,0,c
  3709  002164  D000               	goto	l2145
  3710  002166                     l2145:
  3711  002166  90D8               	bcf	status,0,c
  3712  002168  3601               	rlcf	__div_to_l_@f1,f,c
  3713  00216A  3602               	rlcf	__div_to_l_@f1+1,f,c
  3714  00216C  3603               	rlcf	__div_to_l_@f1+2,f,c
  3715  00216E  3604               	rlcf	__div_to_l_@f1+3,f,c
  3716  002170  2E0B               	decfsz	__div_to_l_@cntr,f,c
  3717  002172  D7E0               	goto	l2137
  3718  002174  D000               	goto	l2149
  3719  002176                     l2149:
  3720  002176  AE0C               	btfss	__div_to_l_@exp1,7,c
  3721  002178  D010               	goto	l2161
  3722  00217A  500C               	movf	__div_to_l_@exp1,w,c
  3723  00217C  0A80               	xorlw	128
  3724  00217E  0F9F               	addlw	159
  3725  002180  B0D8               	btfsc	status,0,c
  3726  002182  D003               	goto	l2157
  3727  002184  D00D               	goto	l2163
  3728  002186  D028               	goto	l492
  3729  002188  D000               	goto	l2157
  3730  00218A                     l2157:
  3731  00218A  90D8               	bcf	status,0,c
  3732  00218C  320A               	rrcf	__div_to_l_@quot+3,f,c
  3733  00218E  3209               	rrcf	__div_to_l_@quot+2,f,c
  3734  002190  3208               	rrcf	__div_to_l_@quot+1,f,c
  3735  002192  3207               	rrcf	__div_to_l_@quot,f,c
  3736  002194  3E0C               	incfsz	__div_to_l_@exp1,f,c
  3737  002196  D7F9               	goto	l2157
  3738  002198  D017               	goto	l501
  3739  00219A                     l2161:
  3740  00219A  0E1F               	movlw	31
  3741  00219C  640C               	cpfsgt	__div_to_l_@exp1,c
  3742  00219E  D011               	goto	l2169
  3743  0021A0                     l2163:
  3744  0021A0  0E00               	movlw	0
  3745  0021A2  6E01               	movwf	?__div_to_l_,c
  3746  0021A4  0E00               	movlw	0
  3747  0021A6  6E02               	movwf	?__div_to_l_+1,c
  3748  0021A8  0E00               	movlw	0
  3749  0021AA  6E03               	movwf	?__div_to_l_+2,c
  3750  0021AC  0E00               	movlw	0
  3751  0021AE  6E04               	movwf	?__div_to_l_+3,c
  3752  0021B0  D013               	goto	l492
  3753  0021B2  D007               	goto	l2169
  3754  0021B4                     l2167:
  3755  0021B4  90D8               	bcf	status,0,c
  3756  0021B6  3607               	rlcf	__div_to_l_@quot,f,c
  3757  0021B8  3608               	rlcf	__div_to_l_@quot+1,f,c
  3758  0021BA  3609               	rlcf	__div_to_l_@quot+2,f,c
  3759  0021BC  360A               	rlcf	__div_to_l_@quot+3,f,c
  3760  0021BE  060C               	decf	__div_to_l_@exp1,f,c
  3761  0021C0  D000               	goto	l2169
  3762  0021C2                     l2169:
  3763  0021C2  500C               	movf	__div_to_l_@exp1,w,c
  3764  0021C4  A4D8               	btfss	status,2,c
  3765  0021C6  D7F6               	goto	l2167
  3766  0021C8                     l501:
  3767  0021C8  C007  F001         	movff	__div_to_l_@quot,?__div_to_l_
  3768  0021CC  C008  F002         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  3769  0021D0  C009  F003         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  3770  0021D4  C00A  F004         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  3771  0021D8                     l492:
  3772  0021D8  0012               	return		;funcret
  3773  0021DA                     __end_of__div_to_l_:
  3774                           	opt stack 0
  3775                           tblptru	equ	0xFF8
  3776                           tblptrh	equ	0xFF7
  3777                           tblptrl	equ	0xFF6
  3778                           tablat	equ	0xFF5
  3779                           prodh	equ	0xFF4
  3780                           prodl	equ	0xFF3
  3781                           postinc0	equ	0xFEE
  3782                           wreg	equ	0xFE8
  3783                           postdec1	equ	0xFE5
  3784                           fsr1l	equ	0xFE1
  3785                           indf2	equ	0xFDF
  3786                           postinc2	equ	0xFDE
  3787                           postdec2	equ	0xFDD
  3788                           fsr2h	equ	0xFDA
  3789                           fsr2l	equ	0xFD9
  3790                           status	equ	0xFD8
  3791                           
  3792 ;; *************** function ___lltoft *****************
  3793 ;; Defined at:
  3794 ;;		line 35 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lltoft.c"
  3795 ;; Parameters:    Size  Location     Type
  3796 ;;  c               4    8[COMRAM] unsigned long 
  3797 ;; Auto vars:     Size  Location     Type
  3798 ;;  exp             1   16[COMRAM] unsigned char 
  3799 ;; Return value:  Size  Location     Type
  3800 ;;                  3    8[COMRAM] float 
  3801 ;; Registers used:
  3802 ;;		wreg, status,2, status,0, cstack
  3803 ;; Tracked objects:
  3804 ;;		On entry : 0/0
  3805 ;;		On exit  : 0/0
  3806 ;;		Unchanged: 0/0
  3807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3808 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3809 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3810 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3811 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3812 ;;Total ram usage:        9 bytes
  3813 ;; Hardware stack levels used:    1
  3814 ;; Hardware stack levels required when called:    1
  3815 ;; This function calls:
  3816 ;;		___ftpack
  3817 ;; This function is called by:
  3818 ;;		_printf
  3819 ;; This function uses a non-reentrant model
  3820 ;;
  3821                           
  3822                           	psect	text13
  3823  00287A                     __ptext13:
  3824                           	opt stack 0
  3825  00287A                     ___lltoft:
  3826                           	opt stack 28
  3827                           
  3828                           ;incstack = 0
  3829  00287A  0E8E               	movlw	142
  3830  00287C  6E11               	movwf	___lltoft@exp,c
  3831  00287E  D007               	goto	l2289
  3832  002880                     l2287:
  3833  002880  90D8               	bcf	status,0,c
  3834  002882  320C               	rrcf	___lltoft@c+3,f,c
  3835  002884  320B               	rrcf	___lltoft@c+2,f,c
  3836  002886  320A               	rrcf	___lltoft@c+1,f,c
  3837  002888  3209               	rrcf	___lltoft@c,f,c
  3838  00288A  2A11               	incf	___lltoft@exp,f,c
  3839  00288C  D000               	goto	l2289
  3840  00288E                     l2289:
  3841  00288E  0E00               	movlw	0
  3842  002890  1409               	andwf	___lltoft@c,w,c
  3843  002892  6E0D               	movwf	??___lltoft& (0+255),c
  3844  002894  0E00               	movlw	0
  3845  002896  140A               	andwf	___lltoft@c+1,w,c
  3846  002898  6E0E               	movwf	(??___lltoft+1)& (0+255),c
  3847  00289A  0E00               	movlw	0
  3848  00289C  140B               	andwf	___lltoft@c+2,w,c
  3849  00289E  6E0F               	movwf	(??___lltoft+2)& (0+255),c
  3850  0028A0  0EFF               	movlw	255
  3851  0028A2  140C               	andwf	___lltoft@c+3,w,c
  3852  0028A4  6E10               	movwf	(??___lltoft+3)& (0+255),c
  3853  0028A6  500D               	movf	??___lltoft,w,c
  3854  0028A8  100E               	iorwf	??___lltoft+1,w,c
  3855  0028AA  100F               	iorwf	??___lltoft+2,w,c
  3856  0028AC  1010               	iorwf	??___lltoft+3,w,c
  3857  0028AE  A4D8               	btfss	status,2,c
  3858  0028B0  D7E7               	goto	l2287
  3859  0028B2  C009  F001         	movff	___lltoft@c,___ftpack@arg
  3860  0028B6  C00A  F002         	movff	___lltoft@c+1,___ftpack@arg+1
  3861  0028BA  C00B  F003         	movff	___lltoft@c+2,___ftpack@arg+2
  3862  0028BE  C011  F004         	movff	___lltoft@exp,___ftpack@exp
  3863  0028C2  0E00               	movlw	0
  3864  0028C4  6E05               	movwf	___ftpack@sign,c
  3865  0028C6  EC4D  F012         	call	___ftpack	;wreg free
  3866  0028CA  C001  F009         	movff	?___ftpack,?___lltoft
  3867  0028CE  C002  F00A         	movff	?___ftpack+1,?___lltoft+1
  3868  0028D2  C003  F00B         	movff	?___ftpack+2,?___lltoft+2
  3869  0028D6  D000               	goto	l727
  3870  0028D8                     l727:
  3871  0028D8  0012               	return		;funcret
  3872  0028DA                     __end_of___lltoft:
  3873                           	opt stack 0
  3874                           tblptru	equ	0xFF8
  3875                           tblptrh	equ	0xFF7
  3876                           tblptrl	equ	0xFF6
  3877                           tablat	equ	0xFF5
  3878                           prodh	equ	0xFF4
  3879                           prodl	equ	0xFF3
  3880                           postinc0	equ	0xFEE
  3881                           wreg	equ	0xFE8
  3882                           postdec1	equ	0xFE5
  3883                           fsr1l	equ	0xFE1
  3884                           indf2	equ	0xFDF
  3885                           postinc2	equ	0xFDE
  3886                           postdec2	equ	0xFDD
  3887                           fsr2h	equ	0xFDA
  3888                           fsr2l	equ	0xFD9
  3889                           status	equ	0xFD8
  3890                           
  3891 ;; *************** function ___llmod *****************
  3892 ;; Defined at:
  3893 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\llmod.c"
  3894 ;; Parameters:    Size  Location     Type
  3895 ;;  dividend        4    0[COMRAM] unsigned long 
  3896 ;;  divisor         4    4[COMRAM] unsigned long 
  3897 ;; Auto vars:     Size  Location     Type
  3898 ;;  counter         1    8[COMRAM] unsigned char 
  3899 ;; Return value:  Size  Location     Type
  3900 ;;                  4    0[COMRAM] unsigned long 
  3901 ;; Registers used:
  3902 ;;		wreg, status,2, status,0
  3903 ;; Tracked objects:
  3904 ;;		On entry : 0/0
  3905 ;;		On exit  : 0/0
  3906 ;;		Unchanged: 0/0
  3907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3908 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3909 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3912 ;;Total ram usage:        9 bytes
  3913 ;; Hardware stack levels used:    1
  3914 ;; This function calls:
  3915 ;;		Nothing
  3916 ;; This function is called by:
  3917 ;;		_printf
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text14
  3922  00279A                     __ptext14:
  3923                           	opt stack 0
  3924  00279A                     ___llmod:
  3925                           	opt stack 29
  3926                           
  3927                           ;incstack = 0
  3928  00279A  5005               	movf	___llmod@divisor,w,c
  3929  00279C  1006               	iorwf	___llmod@divisor+1,w,c
  3930  00279E  1007               	iorwf	___llmod@divisor+2,w,c
  3931  0027A0  1008               	iorwf	___llmod@divisor+3,w,c
  3932  0027A2  B4D8               	btfsc	status,2,c
  3933  0027A4  D029               	goto	l707
  3934  0027A6  0E01               	movlw	1
  3935  0027A8  6E09               	movwf	___llmod@counter,c
  3936  0027AA  D007               	goto	l2275
  3937  0027AC                     l2273:
  3938  0027AC  90D8               	bcf	status,0,c
  3939  0027AE  3605               	rlcf	___llmod@divisor,f,c
  3940  0027B0  3606               	rlcf	___llmod@divisor+1,f,c
  3941  0027B2  3607               	rlcf	___llmod@divisor+2,f,c
  3942  0027B4  3608               	rlcf	___llmod@divisor+3,f,c
  3943  0027B6  2A09               	incf	___llmod@counter,f,c
  3944  0027B8  D000               	goto	l2275
  3945  0027BA                     l2275:
  3946  0027BA  BE08               	btfsc	___llmod@divisor+3,7,c
  3947  0027BC  D002               	goto	l2277
  3948  0027BE  D7F6               	goto	l2273
  3949  0027C0  D000               	goto	l2277
  3950  0027C2                     l2277:
  3951  0027C2  5005               	movf	___llmod@divisor,w,c
  3952  0027C4  5C01               	subwf	___llmod@dividend,w,c
  3953  0027C6  5006               	movf	___llmod@divisor+1,w,c
  3954  0027C8  5802               	subwfb	___llmod@dividend+1,w,c
  3955  0027CA  5007               	movf	___llmod@divisor+2,w,c
  3956  0027CC  5803               	subwfb	___llmod@dividend+2,w,c
  3957  0027CE  5008               	movf	___llmod@divisor+3,w,c
  3958  0027D0  5804               	subwfb	___llmod@dividend+3,w,c
  3959  0027D2  A0D8               	btfss	status,0,c
  3960  0027D4  D009               	goto	l2281
  3961  0027D6  5005               	movf	___llmod@divisor,w,c
  3962  0027D8  5E01               	subwf	___llmod@dividend,f,c
  3963  0027DA  5006               	movf	___llmod@divisor+1,w,c
  3964  0027DC  5A02               	subwfb	___llmod@dividend+1,f,c
  3965  0027DE  5007               	movf	___llmod@divisor+2,w,c
  3966  0027E0  5A03               	subwfb	___llmod@dividend+2,f,c
  3967  0027E2  5008               	movf	___llmod@divisor+3,w,c
  3968  0027E4  5A04               	subwfb	___llmod@dividend+3,f,c
  3969  0027E6  D000               	goto	l2281
  3970  0027E8                     l2281:
  3971  0027E8  90D8               	bcf	status,0,c
  3972  0027EA  3208               	rrcf	___llmod@divisor+3,f,c
  3973  0027EC  3207               	rrcf	___llmod@divisor+2,f,c
  3974  0027EE  3206               	rrcf	___llmod@divisor+1,f,c
  3975  0027F0  3205               	rrcf	___llmod@divisor,f,c
  3976  0027F2  2E09               	decfsz	___llmod@counter,f,c
  3977  0027F4  D7E6               	goto	l2277
  3978  0027F6  D000               	goto	l707
  3979  0027F8                     l707:
  3980  0027F8  C001  F001         	movff	___llmod@dividend,?___llmod
  3981  0027FC  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
  3982  002800  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
  3983  002804  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
  3984  002808  0012               	return		;funcret
  3985  00280A                     __end_of___llmod:
  3986                           	opt stack 0
  3987                           tblptru	equ	0xFF8
  3988                           tblptrh	equ	0xFF7
  3989                           tblptrl	equ	0xFF6
  3990                           tablat	equ	0xFF5
  3991                           prodh	equ	0xFF4
  3992                           prodl	equ	0xFF3
  3993                           postinc0	equ	0xFEE
  3994                           wreg	equ	0xFE8
  3995                           postdec1	equ	0xFE5
  3996                           fsr1l	equ	0xFE1
  3997                           indf2	equ	0xFDF
  3998                           postinc2	equ	0xFDE
  3999                           postdec2	equ	0xFDD
  4000                           fsr2h	equ	0xFDA
  4001                           fsr2l	equ	0xFD9
  4002                           status	equ	0xFD8
  4003                           
  4004 ;; *************** function ___lldiv *****************
  4005 ;; Defined at:
  4006 ;;		line 8 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lldiv.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;  dividend        4    0[COMRAM] unsigned long 
  4009 ;;  divisor         4    4[COMRAM] unsigned long 
  4010 ;; Auto vars:     Size  Location     Type
  4011 ;;  quotient        4    8[COMRAM] unsigned long 
  4012 ;;  counter         1   12[COMRAM] unsigned char 
  4013 ;; Return value:  Size  Location     Type
  4014 ;;                  4    0[COMRAM] unsigned long 
  4015 ;; Registers used:
  4016 ;;		wreg, status,2, status,0
  4017 ;; Tracked objects:
  4018 ;;		On entry : 0/0
  4019 ;;		On exit  : 0/0
  4020 ;;		Unchanged: 0/0
  4021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4022 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4023 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4025 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4026 ;;Total ram usage:       13 bytes
  4027 ;; Hardware stack levels used:    1
  4028 ;; This function calls:
  4029 ;;		Nothing
  4030 ;; This function is called by:
  4031 ;;		_printf
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           	psect	text15
  4036  00268C                     __ptext15:
  4037                           	opt stack 0
  4038  00268C                     ___lldiv:
  4039                           	opt stack 29
  4040                           
  4041                           ;incstack = 0
  4042  00268C  0E00               	movlw	0
  4043  00268E  6E09               	movwf	___lldiv@quotient,c
  4044  002690  0E00               	movlw	0
  4045  002692  6E0A               	movwf	___lldiv@quotient+1,c
  4046  002694  0E00               	movlw	0
  4047  002696  6E0B               	movwf	___lldiv@quotient+2,c
  4048  002698  0E00               	movlw	0
  4049  00269A  6E0C               	movwf	___lldiv@quotient+3,c
  4050  00269C  5005               	movf	___lldiv@divisor,w,c
  4051  00269E  1006               	iorwf	___lldiv@divisor+1,w,c
  4052  0026A0  1007               	iorwf	___lldiv@divisor+2,w,c
  4053  0026A2  1008               	iorwf	___lldiv@divisor+3,w,c
  4054  0026A4  B4D8               	btfsc	status,2,c
  4055  0026A6  D02F               	goto	l697
  4056  0026A8  0E01               	movlw	1
  4057  0026AA  6E0D               	movwf	___lldiv@counter,c
  4058  0026AC  D007               	goto	l2255
  4059  0026AE                     l2253:
  4060  0026AE  90D8               	bcf	status,0,c
  4061  0026B0  3605               	rlcf	___lldiv@divisor,f,c
  4062  0026B2  3606               	rlcf	___lldiv@divisor+1,f,c
  4063  0026B4  3607               	rlcf	___lldiv@divisor+2,f,c
  4064  0026B6  3608               	rlcf	___lldiv@divisor+3,f,c
  4065  0026B8  2A0D               	incf	___lldiv@counter,f,c
  4066  0026BA  D000               	goto	l2255
  4067  0026BC                     l2255:
  4068  0026BC  BE08               	btfsc	___lldiv@divisor+3,7,c
  4069  0026BE  D002               	goto	l2257
  4070  0026C0  D7F6               	goto	l2253
  4071  0026C2  D000               	goto	l2257
  4072  0026C4                     l2257:
  4073  0026C4  90D8               	bcf	status,0,c
  4074  0026C6  3609               	rlcf	___lldiv@quotient,f,c
  4075  0026C8  360A               	rlcf	___lldiv@quotient+1,f,c
  4076  0026CA  360B               	rlcf	___lldiv@quotient+2,f,c
  4077  0026CC  360C               	rlcf	___lldiv@quotient+3,f,c
  4078  0026CE  5005               	movf	___lldiv@divisor,w,c
  4079  0026D0  5C01               	subwf	___lldiv@dividend,w,c
  4080  0026D2  5006               	movf	___lldiv@divisor+1,w,c
  4081  0026D4  5802               	subwfb	___lldiv@dividend+1,w,c
  4082  0026D6  5007               	movf	___lldiv@divisor+2,w,c
  4083  0026D8  5803               	subwfb	___lldiv@dividend+2,w,c
  4084  0026DA  5008               	movf	___lldiv@divisor+3,w,c
  4085  0026DC  5804               	subwfb	___lldiv@dividend+3,w,c
  4086  0026DE  A0D8               	btfss	status,0,c
  4087  0026E0  D00A               	goto	l2265
  4088  0026E2  5005               	movf	___lldiv@divisor,w,c
  4089  0026E4  5E01               	subwf	___lldiv@dividend,f,c
  4090  0026E6  5006               	movf	___lldiv@divisor+1,w,c
  4091  0026E8  5A02               	subwfb	___lldiv@dividend+1,f,c
  4092  0026EA  5007               	movf	___lldiv@divisor+2,w,c
  4093  0026EC  5A03               	subwfb	___lldiv@dividend+2,f,c
  4094  0026EE  5008               	movf	___lldiv@divisor+3,w,c
  4095  0026F0  5A04               	subwfb	___lldiv@dividend+3,f,c
  4096  0026F2  8009               	bsf	___lldiv@quotient,0,c
  4097  0026F4  D000               	goto	l2265
  4098  0026F6                     l2265:
  4099  0026F6  90D8               	bcf	status,0,c
  4100  0026F8  3208               	rrcf	___lldiv@divisor+3,f,c
  4101  0026FA  3207               	rrcf	___lldiv@divisor+2,f,c
  4102  0026FC  3206               	rrcf	___lldiv@divisor+1,f,c
  4103  0026FE  3205               	rrcf	___lldiv@divisor,f,c
  4104  002700  2E0D               	decfsz	___lldiv@counter,f,c
  4105  002702  D7E0               	goto	l2257
  4106  002704  D000               	goto	l697
  4107  002706                     l697:
  4108  002706  C009  F001         	movff	___lldiv@quotient,?___lldiv
  4109  00270A  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  4110  00270E  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  4111  002712  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  4112  002716  0012               	return		;funcret
  4113  002718                     __end_of___lldiv:
  4114                           	opt stack 0
  4115                           tblptru	equ	0xFF8
  4116                           tblptrh	equ	0xFF7
  4117                           tblptrl	equ	0xFF6
  4118                           tablat	equ	0xFF5
  4119                           prodh	equ	0xFF4
  4120                           prodl	equ	0xFF3
  4121                           postinc0	equ	0xFEE
  4122                           wreg	equ	0xFE8
  4123                           postdec1	equ	0xFE5
  4124                           fsr1l	equ	0xFE1
  4125                           indf2	equ	0xFDF
  4126                           postinc2	equ	0xFDE
  4127                           postdec2	equ	0xFDD
  4128                           fsr2h	equ	0xFDA
  4129                           fsr2l	equ	0xFD9
  4130                           status	equ	0xFD8
  4131                           
  4132 ;; *************** function ___fttol *****************
  4133 ;; Defined at:
  4134 ;;		line 44 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\fttol.c"
  4135 ;; Parameters:    Size  Location     Type
  4136 ;;  f1              3   49[COMRAM] float 
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  lval            4   59[COMRAM] unsigned long 
  4139 ;;  exp1            1   63[COMRAM] unsigned char 
  4140 ;;  sign1           1   58[COMRAM] unsigned char 
  4141 ;; Return value:  Size  Location     Type
  4142 ;;                  4   49[COMRAM] long 
  4143 ;; Registers used:
  4144 ;;		wreg, status,2, status,0
  4145 ;; Tracked objects:
  4146 ;;		On entry : 0/0
  4147 ;;		On exit  : 0/0
  4148 ;;		Unchanged: 0/0
  4149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4150 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4151 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4152 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4153 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;Total ram usage:       15 bytes
  4155 ;; Hardware stack levels used:    1
  4156 ;; This function calls:
  4157 ;;		Nothing
  4158 ;; This function is called by:
  4159 ;;		_main
  4160 ;;		_printf
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           	psect	text16
  4165  0022D2                     __ptext16:
  4166                           	opt stack 0
  4167  0022D2                     ___fttol:
  4168                           	opt stack 29
  4169                           
  4170                           ;incstack = 0
  4171  0022D2  C034  F036         	movff	___fttol@f1+2,??___fttol
  4172  0022D6  6A37               	clrf	(??___fttol+1)& (0+255),c
  4173  0022D8  6A38               	clrf	(??___fttol+2)& (0+255),c
  4174  0022DA  3433               	rlcf	___fttol@f1+1,w,c
  4175  0022DC  3636               	rlcf	??___fttol& (0+255),f,c
  4176  0022DE  E301               	bnc	u2221
  4177  0022E0  8037               	bsf	(??___fttol+1)& (0+255),0,c
  4178  0022E2                     u2221:
  4179  0022E2  5036               	movf	??___fttol,w,c
  4180  0022E4  6E40               	movwf	___fttol@exp1,c
  4181  0022E6  5040               	movf	___fttol@exp1,w,c
  4182  0022E8  A4D8               	btfss	status,2,c
  4183  0022EA  D002               	goto	l2207
  4184  0022EC  D039               	goto	l2231
  4185  0022EE  D063               	goto	l658
  4186  0022F0                     l2207:
  4187  0022F0  0E17               	movlw	23
  4188  0022F2  6E36               	movwf	??___fttol& (0+255),c
  4189  0022F4  C032  F037         	movff	___fttol@f1,??___fttol+1
  4190  0022F8  C033  F038         	movff	___fttol@f1+1,??___fttol+2
  4191  0022FC  C034  F039         	movff	___fttol@f1+2,??___fttol+3
  4192  002300  2836               	incf	??___fttol,w,c
  4193  002302  6E3A               	movwf	(??___fttol+4)& (0+255),c
  4194  002304  D004               	goto	u2240
  4195  002306                     u2245:
  4196  002306  90D8               	bcf	status,0,c
  4197  002308  3239               	rrcf	??___fttol+3,f,c
  4198  00230A  3238               	rrcf	??___fttol+2,f,c
  4199  00230C  3237               	rrcf	??___fttol+1,f,c
  4200  00230E                     u2240:
  4201  00230E  2E3A               	decfsz	(??___fttol+4)& (0+255),f,c
  4202  002310  D7FA               	goto	u2245
  4203  002312  5037               	movf	??___fttol+1,w,c
  4204  002314  6E3B               	movwf	___fttol@sign1,c
  4205  002316  8E33               	bsf	___fttol@f1+1,7,c
  4206  002318  0EFF               	movlw	255
  4207  00231A  1632               	andwf	___fttol@f1,f,c
  4208  00231C  0EFF               	movlw	255
  4209  00231E  1633               	andwf	___fttol@f1+1,f,c
  4210  002320  0E00               	movlw	0
  4211  002322  1634               	andwf	___fttol@f1+2,f,c
  4212  002324  5032               	movf	___fttol@f1,w,c
  4213  002326  6E3C               	movwf	___fttol@lval,c
  4214  002328  5033               	movf	___fttol@f1+1,w,c
  4215  00232A  6E3D               	movwf	___fttol@lval+1,c
  4216  00232C  5034               	movf	___fttol@f1+2,w,c
  4217  00232E  6E3E               	movwf	___fttol@lval+2,c
  4218  002330  6A3F               	clrf	___fttol@lval+3,c
  4219  002332  0E8E               	movlw	142
  4220  002334  5E40               	subwf	___fttol@exp1,f,c
  4221  002336  AE40               	btfss	___fttol@exp1,7,c
  4222  002338  D010               	goto	l2229
  4223  00233A  5040               	movf	___fttol@exp1,w,c
  4224  00233C  0A80               	xorlw	128
  4225  00233E  0F8F               	addlw	143
  4226  002340  B0D8               	btfsc	status,0,c
  4227  002342  D003               	goto	l2225
  4228  002344  D00D               	goto	l2231
  4229  002346  D037               	goto	l658
  4230  002348  D000               	goto	l2225
  4231  00234A                     l2225:
  4232  00234A  90D8               	bcf	status,0,c
  4233  00234C  323F               	rrcf	___fttol@lval+3,f,c
  4234  00234E  323E               	rrcf	___fttol@lval+2,f,c
  4235  002350  323D               	rrcf	___fttol@lval+1,f,c
  4236  002352  323C               	rrcf	___fttol@lval,f,c
  4237  002354  3E40               	incfsz	___fttol@exp1,f,c
  4238  002356  D7F9               	goto	l2225
  4239  002358  D019               	goto	l2239
  4240  00235A                     l2229:
  4241  00235A  0E17               	movlw	23
  4242  00235C  6440               	cpfsgt	___fttol@exp1,c
  4243  00235E  D011               	goto	l2237
  4244  002360                     l2231:
  4245  002360  0E00               	movlw	0
  4246  002362  6E32               	movwf	?___fttol,c
  4247  002364  0E00               	movlw	0
  4248  002366  6E33               	movwf	?___fttol+1,c
  4249  002368  0E00               	movlw	0
  4250  00236A  6E34               	movwf	?___fttol+2,c
  4251  00236C  0E00               	movlw	0
  4252  00236E  6E35               	movwf	?___fttol+3,c
  4253  002370  D022               	goto	l658
  4254  002372  D007               	goto	l2237
  4255  002374                     l2235:
  4256  002374  90D8               	bcf	status,0,c
  4257  002376  363C               	rlcf	___fttol@lval,f,c
  4258  002378  363D               	rlcf	___fttol@lval+1,f,c
  4259  00237A  363E               	rlcf	___fttol@lval+2,f,c
  4260  00237C  363F               	rlcf	___fttol@lval+3,f,c
  4261  00237E  0640               	decf	___fttol@exp1,f,c
  4262  002380  D000               	goto	l2237
  4263  002382                     l2237:
  4264  002382  5040               	movf	___fttol@exp1,w,c
  4265  002384  B4D8               	btfsc	status,2,c
  4266  002386  D002               	goto	l2239
  4267  002388  D7F5               	goto	l2235
  4268  00238A  D000               	goto	l2239
  4269  00238C                     l2239:
  4270  00238C  503B               	movf	___fttol@sign1,w,c
  4271  00238E  B4D8               	btfsc	status,2,c
  4272  002390  D009               	goto	l2243
  4273  002392  1E3F               	comf	___fttol@lval+3,f,c
  4274  002394  1E3E               	comf	___fttol@lval+2,f,c
  4275  002396  1E3D               	comf	___fttol@lval+1,f,c
  4276  002398  6C3C               	negf	___fttol@lval,c
  4277  00239A  0E00               	movlw	0
  4278  00239C  223D               	addwfc	___fttol@lval+1,f,c
  4279  00239E  223E               	addwfc	___fttol@lval+2,f,c
  4280  0023A0  223F               	addwfc	___fttol@lval+3,f,c
  4281  0023A2  D000               	goto	l2243
  4282  0023A4                     l2243:
  4283  0023A4  C03C  F032         	movff	___fttol@lval,?___fttol
  4284  0023A8  C03D  F033         	movff	___fttol@lval+1,?___fttol+1
  4285  0023AC  C03E  F034         	movff	___fttol@lval+2,?___fttol+2
  4286  0023B0  C03F  F035         	movff	___fttol@lval+3,?___fttol+3
  4287  0023B4  D000               	goto	l658
  4288  0023B6                     l658:
  4289  0023B6  0012               	return		;funcret
  4290  0023B8                     __end_of___fttol:
  4291                           	opt stack 0
  4292                           tblptru	equ	0xFF8
  4293                           tblptrh	equ	0xFF7
  4294                           tblptrl	equ	0xFF6
  4295                           tablat	equ	0xFF5
  4296                           prodh	equ	0xFF4
  4297                           prodl	equ	0xFF3
  4298                           postinc0	equ	0xFEE
  4299                           wreg	equ	0xFE8
  4300                           postdec1	equ	0xFE5
  4301                           fsr1l	equ	0xFE1
  4302                           indf2	equ	0xFDF
  4303                           postinc2	equ	0xFDE
  4304                           postdec2	equ	0xFDD
  4305                           fsr2h	equ	0xFDA
  4306                           fsr2l	equ	0xFD9
  4307                           status	equ	0xFD8
  4308                           
  4309 ;; *************** function ___ftsub *****************
  4310 ;; Defined at:
  4311 ;;		line 20 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftsub.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  f1              3   27[COMRAM] float 
  4314 ;;  f2              3   30[COMRAM] float 
  4315 ;; Auto vars:     Size  Location     Type
  4316 ;;		None
  4317 ;; Return value:  Size  Location     Type
  4318 ;;                  3   27[COMRAM] float 
  4319 ;; Registers used:
  4320 ;;		wreg, status,2, status,0, cstack
  4321 ;; Tracked objects:
  4322 ;;		On entry : 0/0
  4323 ;;		On exit  : 0/0
  4324 ;;		Unchanged: 0/0
  4325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4326 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4329 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4330 ;;Total ram usage:        6 bytes
  4331 ;; Hardware stack levels used:    1
  4332 ;; Hardware stack levels required when called:    2
  4333 ;; This function calls:
  4334 ;;		___ftadd
  4335 ;; This function is called by:
  4336 ;;		_printf
  4337 ;; This function uses a non-reentrant model
  4338 ;;
  4339                           
  4340                           	psect	text17
  4341  0028DA                     __ptext17:
  4342                           	opt stack 0
  4343  0028DA                     ___ftsub:
  4344                           	opt stack 27
  4345                           
  4346                           ;incstack = 0
  4347  0028DA  501F               	movf	___ftsub@f2,w,c
  4348  0028DC  1020               	iorwf	___ftsub@f2+1,w,c
  4349  0028DE  1021               	iorwf	___ftsub@f2+2,w,c
  4350  0028E0  B4D8               	btfsc	status,2,c
  4351  0028E2  D007               	goto	l2175
  4352  0028E4  0E00               	movlw	0
  4353  0028E6  1A1F               	xorwf	___ftsub@f2,f,c
  4354  0028E8  0E00               	movlw	0
  4355  0028EA  1A20               	xorwf	___ftsub@f2+1,f,c
  4356  0028EC  0E80               	movlw	128
  4357  0028EE  1A21               	xorwf	___ftsub@f2+2,f,c
  4358  0028F0  D000               	goto	l2175
  4359  0028F2                     l2175:
  4360  0028F2  C01C  F010         	movff	___ftsub@f1,___ftadd@f1
  4361  0028F6  C01D  F011         	movff	___ftsub@f1+1,___ftadd@f1+1
  4362  0028FA  C01E  F012         	movff	___ftsub@f1+2,___ftadd@f1+2
  4363  0028FE  C01F  F013         	movff	___ftsub@f2,___ftadd@f2
  4364  002902  C020  F014         	movff	___ftsub@f2+1,___ftadd@f2+1
  4365  002906  C021  F015         	movff	___ftsub@f2+2,___ftadd@f2+2
  4366  00290A  EC69  F00E         	call	___ftadd	;wreg free
  4367  00290E  C010  F01C         	movff	?___ftadd,?___ftsub
  4368  002912  C011  F01D         	movff	?___ftadd+1,?___ftsub+1
  4369  002916  C012  F01E         	movff	?___ftadd+2,?___ftsub+2
  4370  00291A  D000               	goto	l654
  4371  00291C                     l654:
  4372  00291C  0012               	return		;funcret
  4373  00291E                     __end_of___ftsub:
  4374                           	opt stack 0
  4375                           tblptru	equ	0xFF8
  4376                           tblptrh	equ	0xFF7
  4377                           tblptrl	equ	0xFF6
  4378                           tablat	equ	0xFF5
  4379                           prodh	equ	0xFF4
  4380                           prodl	equ	0xFF3
  4381                           postinc0	equ	0xFEE
  4382                           wreg	equ	0xFE8
  4383                           postdec1	equ	0xFE5
  4384                           fsr1l	equ	0xFE1
  4385                           indf2	equ	0xFDF
  4386                           postinc2	equ	0xFDE
  4387                           postdec2	equ	0xFDD
  4388                           fsr2h	equ	0xFDA
  4389                           fsr2l	equ	0xFD9
  4390                           status	equ	0xFD8
  4391                           
  4392 ;; *************** function ___ftadd *****************
  4393 ;; Defined at:
  4394 ;;		line 86 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftadd.c"
  4395 ;; Parameters:    Size  Location     Type
  4396 ;;  f1              3   15[COMRAM] float 
  4397 ;;  f2              3   18[COMRAM] float 
  4398 ;; Auto vars:     Size  Location     Type
  4399 ;;  exp1            1   26[COMRAM] unsigned char 
  4400 ;;  exp2            1   25[COMRAM] unsigned char 
  4401 ;;  sign            1   24[COMRAM] unsigned char 
  4402 ;; Return value:  Size  Location     Type
  4403 ;;                  3   15[COMRAM] float 
  4404 ;; Registers used:
  4405 ;;		wreg, status,2, status,0, cstack
  4406 ;; Tracked objects:
  4407 ;;		On entry : 0/0
  4408 ;;		On exit  : 0/0
  4409 ;;		Unchanged: 0/0
  4410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4411 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;Total ram usage:       12 bytes
  4416 ;; Hardware stack levels used:    1
  4417 ;; Hardware stack levels required when called:    1
  4418 ;; This function calls:
  4419 ;;		___ftpack
  4420 ;; This function is called by:
  4421 ;;		_main
  4422 ;;		_printf
  4423 ;;		___ftsub
  4424 ;; This function uses a non-reentrant model
  4425 ;;
  4426                           
  4427                           	psect	text18
  4428  001CD2                     __ptext18:
  4429                           	opt stack 0
  4430  001CD2                     ___ftadd:
  4431                           	opt stack 27
  4432                           
  4433                           ;incstack = 0
  4434  001CD2  C012  F016         	movff	___ftadd@f1+2,??___ftadd
  4435  001CD6  6A17               	clrf	(??___ftadd+1)& (0+255),c
  4436  001CD8  6A18               	clrf	(??___ftadd+2)& (0+255),c
  4437  001CDA  3411               	rlcf	___ftadd@f1+1,w,c
  4438  001CDC  3616               	rlcf	??___ftadd& (0+255),f,c
  4439  001CDE  E301               	bnc	u1441
  4440  001CE0  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  4441  001CE2                     u1441:
  4442  001CE2  5016               	movf	??___ftadd,w,c
  4443  001CE4  6E1B               	movwf	___ftadd@exp1,c
  4444  001CE6  C015  F016         	movff	___ftadd@f2+2,??___ftadd
  4445  001CEA  6A17               	clrf	(??___ftadd+1)& (0+255),c
  4446  001CEC  6A18               	clrf	(??___ftadd+2)& (0+255),c
  4447  001CEE  3414               	rlcf	___ftadd@f2+1,w,c
  4448  001CF0  3616               	rlcf	??___ftadd& (0+255),f,c
  4449  001CF2  E301               	bnc	u1451
  4450  001CF4  8017               	bsf	(??___ftadd+1)& (0+255),0,c
  4451  001CF6                     u1451:
  4452  001CF6  5016               	movf	??___ftadd,w,c
  4453  001CF8  6E1A               	movwf	___ftadd@exp2,c
  4454  001CFA  501B               	movf	___ftadd@exp1,w,c
  4455  001CFC  B4D8               	btfsc	status,2,c
  4456  001CFE  D00B               	goto	l573
  4457  001D00  501A               	movf	___ftadd@exp2,w,c
  4458  001D02  5C1B               	subwf	___ftadd@exp1,w,c
  4459  001D04  B0D8               	btfsc	status,0,c
  4460  001D06  D00E               	goto	l1751
  4461  001D08  501B               	movf	___ftadd@exp1,w,c
  4462  001D0A  0800               	sublw	0
  4463  001D0C  241A               	addwf	___ftadd@exp2,w,c
  4464  001D0E  6E16               	movwf	??___ftadd& (0+255),c
  4465  001D10  0E18               	movlw	24
  4466  001D12  6416               	cpfsgt	??___ftadd,c
  4467  001D14  D007               	goto	l1751
  4468  001D16                     l573:
  4469  001D16  C013  F010         	movff	___ftadd@f2,?___ftadd
  4470  001D1A  C014  F011         	movff	___ftadd@f2+1,?___ftadd+1
  4471  001D1E  C015  F012         	movff	___ftadd@f2+2,?___ftadd+2
  4472  001D22  D0B8               	goto	l574
  4473  001D24                     l1751:
  4474  001D24  501A               	movf	___ftadd@exp2,w,c
  4475  001D26  B4D8               	btfsc	status,2,c
  4476  001D28  D00B               	goto	l577
  4477  001D2A  501B               	movf	___ftadd@exp1,w,c
  4478  001D2C  5C1A               	subwf	___ftadd@exp2,w,c
  4479  001D2E  B0D8               	btfsc	status,0,c
  4480  001D30  D00E               	goto	l1757
  4481  001D32  501A               	movf	___ftadd@exp2,w,c
  4482  001D34  0800               	sublw	0
  4483  001D36  241B               	addwf	___ftadd@exp1,w,c
  4484  001D38  6E16               	movwf	??___ftadd& (0+255),c
  4485  001D3A  0E18               	movlw	24
  4486  001D3C  6416               	cpfsgt	??___ftadd,c
  4487  001D3E  D007               	goto	l1757
  4488  001D40                     l577:
  4489  001D40  C010  F010         	movff	___ftadd@f1,?___ftadd
  4490  001D44  C011  F011         	movff	___ftadd@f1+1,?___ftadd+1
  4491  001D48  C012  F012         	movff	___ftadd@f1+2,?___ftadd+2
  4492  001D4C  D0A3               	goto	l574
  4493  001D4E                     l1757:
  4494  001D4E  0E06               	movlw	6
  4495  001D50  6E19               	movwf	___ftadd@sign,c
  4496  001D52  AE12               	btfss	___ftadd@f1+2,7,c
  4497  001D54  D002               	goto	l1763
  4498  001D56  8E19               	bsf	___ftadd@sign,7,c
  4499  001D58  D000               	goto	l1763
  4500  001D5A                     l1763:
  4501  001D5A  BE15               	btfsc	___ftadd@f2+2,7,c
  4502  001D5C  8C19               	bsf	___ftadd@sign,6,c
  4503  001D5E  8E11               	bsf	___ftadd@f1+1,7,c
  4504  001D60  0EFF               	movlw	255
  4505  001D62  1610               	andwf	___ftadd@f1,f,c
  4506  001D64  0EFF               	movlw	255
  4507  001D66  1611               	andwf	___ftadd@f1+1,f,c
  4508  001D68  0E00               	movlw	0
  4509  001D6A  1612               	andwf	___ftadd@f1+2,f,c
  4510  001D6C  8E14               	bsf	___ftadd@f2+1,7,c
  4511  001D6E  0EFF               	movlw	255
  4512  001D70  1613               	andwf	___ftadd@f2,f,c
  4513  001D72  0EFF               	movlw	255
  4514  001D74  1614               	andwf	___ftadd@f2+1,f,c
  4515  001D76  0E00               	movlw	0
  4516  001D78  1615               	andwf	___ftadd@f2+2,f,c
  4517  001D7A  501A               	movf	___ftadd@exp2,w,c
  4518  001D7C  5C1B               	subwf	___ftadd@exp1,w,c
  4519  001D7E  B0D8               	btfsc	status,0,c
  4520  001D80  D01E               	goto	l1783
  4521  001D82                     l1773:
  4522  001D82  90D8               	bcf	status,0,c
  4523  001D84  3613               	rlcf	___ftadd@f2,f,c
  4524  001D86  3614               	rlcf	___ftadd@f2+1,f,c
  4525  001D88  3615               	rlcf	___ftadd@f2+2,f,c
  4526  001D8A  061A               	decf	___ftadd@exp2,f,c
  4527  001D8C  501B               	movf	___ftadd@exp1,w,c
  4528  001D8E  181A               	xorwf	___ftadd@exp2,w,c
  4529  001D90  B4D8               	btfsc	status,2,c
  4530  001D92  D00F               	goto	l1781
  4531  001D94  0619               	decf	___ftadd@sign,f,c
  4532  001D96  C019  F016         	movff	___ftadd@sign,??___ftadd
  4533  001D9A  0E07               	movlw	7
  4534  001D9C  1616               	andwf	??___ftadd,f,c
  4535  001D9E  B4D8               	btfsc	status,2,c
  4536  001DA0  D008               	goto	l1781
  4537  001DA2  D7EF               	goto	l1773
  4538  001DA4  D006               	goto	l1781
  4539  001DA6                     l1779:
  4540  001DA6  90D8               	bcf	status,0,c
  4541  001DA8  3212               	rrcf	___ftadd@f1+2,f,c
  4542  001DAA  3211               	rrcf	___ftadd@f1+1,f,c
  4543  001DAC  3210               	rrcf	___ftadd@f1,f,c
  4544  001DAE  2A1B               	incf	___ftadd@exp1,f,c
  4545  001DB0  D000               	goto	l1781
  4546  001DB2                     l1781:
  4547  001DB2  501A               	movf	___ftadd@exp2,w,c
  4548  001DB4  181B               	xorwf	___ftadd@exp1,w,c
  4549  001DB6  B4D8               	btfsc	status,2,c
  4550  001DB8  D024               	goto	l588
  4551  001DBA  D7F5               	goto	l1779
  4552  001DBC  D022               	goto	l588
  4553  001DBE                     l1783:
  4554  001DBE  501B               	movf	___ftadd@exp1,w,c
  4555  001DC0  5C1A               	subwf	___ftadd@exp2,w,c
  4556  001DC2  B0D8               	btfsc	status,0,c
  4557  001DC4  D01E               	goto	l588
  4558  001DC6                     l1785:
  4559  001DC6  90D8               	bcf	status,0,c
  4560  001DC8  3610               	rlcf	___ftadd@f1,f,c
  4561  001DCA  3611               	rlcf	___ftadd@f1+1,f,c
  4562  001DCC  3612               	rlcf	___ftadd@f1+2,f,c
  4563  001DCE  061B               	decf	___ftadd@exp1,f,c
  4564  001DD0  501B               	movf	___ftadd@exp1,w,c
  4565  001DD2  181A               	xorwf	___ftadd@exp2,w,c
  4566  001DD4  B4D8               	btfsc	status,2,c
  4567  001DD6  D00F               	goto	l1793
  4568  001DD8  0619               	decf	___ftadd@sign,f,c
  4569  001DDA  C019  F016         	movff	___ftadd@sign,??___ftadd
  4570  001DDE  0E07               	movlw	7
  4571  001DE0  1616               	andwf	??___ftadd,f,c
  4572  001DE2  B4D8               	btfsc	status,2,c
  4573  001DE4  D008               	goto	l1793
  4574  001DE6  D7EF               	goto	l1785
  4575  001DE8  D006               	goto	l1793
  4576  001DEA                     l1791:
  4577  001DEA  90D8               	bcf	status,0,c
  4578  001DEC  3215               	rrcf	___ftadd@f2+2,f,c
  4579  001DEE  3214               	rrcf	___ftadd@f2+1,f,c
  4580  001DF0  3213               	rrcf	___ftadd@f2,f,c
  4581  001DF2  2A1A               	incf	___ftadd@exp2,f,c
  4582  001DF4  D000               	goto	l1793
  4583  001DF6                     l1793:
  4584  001DF6  501A               	movf	___ftadd@exp2,w,c
  4585  001DF8  181B               	xorwf	___ftadd@exp1,w,c
  4586  001DFA  B4D8               	btfsc	status,2,c
  4587  001DFC  D002               	goto	l588
  4588  001DFE  D7F5               	goto	l1791
  4589  001E00  D000               	goto	l588
  4590  001E02                     l588:
  4591  001E02  AE19               	btfss	___ftadd@sign,7,c
  4592  001E04  D00C               	goto	l597
  4593  001E06  0EFF               	movlw	255
  4594  001E08  1A10               	xorwf	___ftadd@f1,f,c
  4595  001E0A  0EFF               	movlw	255
  4596  001E0C  1A11               	xorwf	___ftadd@f1+1,f,c
  4597  001E0E  0EFF               	movlw	255
  4598  001E10  1A12               	xorwf	___ftadd@f1+2,f,c
  4599  001E12  0E01               	movlw	1
  4600  001E14  2610               	addwf	___ftadd@f1,f,c
  4601  001E16  0E00               	movlw	0
  4602  001E18  2211               	addwfc	___ftadd@f1+1,f,c
  4603  001E1A  0E00               	movlw	0
  4604  001E1C  2212               	addwfc	___ftadd@f1+2,f,c
  4605  001E1E                     l597:
  4606  001E1E  AC19               	btfss	___ftadd@sign,6,c
  4607  001E20  D00D               	goto	l1799
  4608  001E22  0EFF               	movlw	255
  4609  001E24  1A13               	xorwf	___ftadd@f2,f,c
  4610  001E26  0EFF               	movlw	255
  4611  001E28  1A14               	xorwf	___ftadd@f2+1,f,c
  4612  001E2A  0EFF               	movlw	255
  4613  001E2C  1A15               	xorwf	___ftadd@f2+2,f,c
  4614  001E2E  0E01               	movlw	1
  4615  001E30  2613               	addwf	___ftadd@f2,f,c
  4616  001E32  0E00               	movlw	0
  4617  001E34  2214               	addwfc	___ftadd@f2+1,f,c
  4618  001E36  0E00               	movlw	0
  4619  001E38  2215               	addwfc	___ftadd@f2+2,f,c
  4620  001E3A  D000               	goto	l1799
  4621  001E3C                     l1799:
  4622  001E3C  0E00               	movlw	0
  4623  001E3E  6E19               	movwf	___ftadd@sign,c
  4624  001E40  5010               	movf	___ftadd@f1,w,c
  4625  001E42  2613               	addwf	___ftadd@f2,f,c
  4626  001E44  5011               	movf	___ftadd@f1+1,w,c
  4627  001E46  2214               	addwfc	___ftadd@f2+1,f,c
  4628  001E48  5012               	movf	___ftadd@f1+2,w,c
  4629  001E4A  2215               	addwfc	___ftadd@f2+2,f,c
  4630  001E4C  AE15               	btfss	___ftadd@f2+2,7,c
  4631  001E4E  D00F               	goto	l1809
  4632  001E50  0EFF               	movlw	255
  4633  001E52  1A13               	xorwf	___ftadd@f2,f,c
  4634  001E54  0EFF               	movlw	255
  4635  001E56  1A14               	xorwf	___ftadd@f2+1,f,c
  4636  001E58  0EFF               	movlw	255
  4637  001E5A  1A15               	xorwf	___ftadd@f2+2,f,c
  4638  001E5C  0E01               	movlw	1
  4639  001E5E  2613               	addwf	___ftadd@f2,f,c
  4640  001E60  0E00               	movlw	0
  4641  001E62  2214               	addwfc	___ftadd@f2+1,f,c
  4642  001E64  0E00               	movlw	0
  4643  001E66  2215               	addwfc	___ftadd@f2+2,f,c
  4644  001E68  0E01               	movlw	1
  4645  001E6A  6E19               	movwf	___ftadd@sign,c
  4646  001E6C  D000               	goto	l1809
  4647  001E6E                     l1809:
  4648  001E6E  C013  F001         	movff	___ftadd@f2,___ftpack@arg
  4649  001E72  C014  F002         	movff	___ftadd@f2+1,___ftpack@arg+1
  4650  001E76  C015  F003         	movff	___ftadd@f2+2,___ftpack@arg+2
  4651  001E7A  C01B  F004         	movff	___ftadd@exp1,___ftpack@exp
  4652  001E7E  C019  F005         	movff	___ftadd@sign,___ftpack@sign
  4653  001E82  EC4D  F012         	call	___ftpack	;wreg free
  4654  001E86  C001  F010         	movff	?___ftpack,?___ftadd
  4655  001E8A  C002  F011         	movff	?___ftpack+1,?___ftadd+1
  4656  001E8E  C003  F012         	movff	?___ftpack+2,?___ftadd+2
  4657  001E92  D000               	goto	l574
  4658  001E94                     l574:
  4659  001E94  0012               	return		;funcret
  4660  001E96                     __end_of___ftadd:
  4661                           	opt stack 0
  4662                           tblptru	equ	0xFF8
  4663                           tblptrh	equ	0xFF7
  4664                           tblptrl	equ	0xFF6
  4665                           tablat	equ	0xFF5
  4666                           prodh	equ	0xFF4
  4667                           prodl	equ	0xFF3
  4668                           postinc0	equ	0xFEE
  4669                           wreg	equ	0xFE8
  4670                           postdec1	equ	0xFE5
  4671                           fsr1l	equ	0xFE1
  4672                           indf2	equ	0xFDF
  4673                           postinc2	equ	0xFDE
  4674                           postdec2	equ	0xFDD
  4675                           fsr2h	equ	0xFDA
  4676                           fsr2l	equ	0xFD9
  4677                           status	equ	0xFD8
  4678                           
  4679 ;; *************** function ___ftneg *****************
  4680 ;; Defined at:
  4681 ;;		line 15 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftneg.c"
  4682 ;; Parameters:    Size  Location     Type
  4683 ;;  f1              3   12[COMRAM] float 
  4684 ;; Auto vars:     Size  Location     Type
  4685 ;;		None
  4686 ;; Return value:  Size  Location     Type
  4687 ;;                  3   12[COMRAM] float 
  4688 ;; Registers used:
  4689 ;;		wreg, status,2, status,0
  4690 ;; Tracked objects:
  4691 ;;		On entry : 0/0
  4692 ;;		On exit  : 0/0
  4693 ;;		Unchanged: 0/0
  4694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4695 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4698 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4699 ;;Total ram usage:        3 bytes
  4700 ;; Hardware stack levels used:    1
  4701 ;; This function calls:
  4702 ;;		Nothing
  4703 ;; This function is called by:
  4704 ;;		_main
  4705 ;;		_printf
  4706 ;; This function uses a non-reentrant model
  4707 ;;
  4708                           
  4709                           	psect	text19
  4710  0029EE                     __ptext19:
  4711                           	opt stack 0
  4712  0029EE                     ___ftneg:
  4713                           	opt stack 29
  4714                           
  4715                           ;incstack = 0
  4716  0029EE  500D               	movf	___ftneg@f1,w,c
  4717  0029F0  100E               	iorwf	___ftneg@f1+1,w,c
  4718  0029F2  100F               	iorwf	___ftneg@f1+2,w,c
  4719  0029F4  B4D8               	btfsc	status,2,c
  4720  0029F6  D006               	goto	l647
  4721  0029F8  0E00               	movlw	0
  4722  0029FA  1A0D               	xorwf	___ftneg@f1,f,c
  4723  0029FC  0E00               	movlw	0
  4724  0029FE  1A0E               	xorwf	___ftneg@f1+1,f,c
  4725  002A00  0E80               	movlw	128
  4726  002A02  1A0F               	xorwf	___ftneg@f1+2,f,c
  4727  002A04                     l647:
  4728  002A04  C00D  F00D         	movff	___ftneg@f1,?___ftneg
  4729  002A08  C00E  F00E         	movff	___ftneg@f1+1,?___ftneg+1
  4730  002A0C  C00F  F00F         	movff	___ftneg@f1+2,?___ftneg+2
  4731  002A10  0012               	return		;funcret
  4732  002A12                     __end_of___ftneg:
  4733                           	opt stack 0
  4734                           tblptru	equ	0xFF8
  4735                           tblptrh	equ	0xFF7
  4736                           tblptrl	equ	0xFF6
  4737                           tablat	equ	0xFF5
  4738                           prodh	equ	0xFF4
  4739                           prodl	equ	0xFF3
  4740                           postinc0	equ	0xFEE
  4741                           wreg	equ	0xFE8
  4742                           postdec1	equ	0xFE5
  4743                           fsr1l	equ	0xFE1
  4744                           indf2	equ	0xFDF
  4745                           postinc2	equ	0xFDE
  4746                           postdec2	equ	0xFDD
  4747                           fsr2h	equ	0xFDA
  4748                           fsr2l	equ	0xFD9
  4749                           status	equ	0xFD8
  4750                           
  4751 ;; *************** function ___ftge *****************
  4752 ;; Defined at:
  4753 ;;		line 4 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftge.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  ff1             3    0[COMRAM] float 
  4756 ;;  ff2             3    3[COMRAM] float 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;		None
  4759 ;; Return value:  Size  Location     Type
  4760 ;;		None               void
  4761 ;; Registers used:
  4762 ;;		wreg, status,2, status,0
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4768 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;Total ram usage:        9 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; This function calls:
  4775 ;;		Nothing
  4776 ;; This function is called by:
  4777 ;;		_printf
  4778 ;; This function uses a non-reentrant model
  4779 ;;
  4780                           
  4781                           	psect	text20
  4782  0025F6                     __ptext20:
  4783                           	opt stack 0
  4784  0025F6                     ___ftge:
  4785                           	opt stack 29
  4786                           
  4787                           ;incstack = 0
  4788  0025F6  AE03               	btfss	___ftge@ff1+2,7,c
  4789  0025F8  D017               	goto	l2183
  4790  0025FA  C001  F007         	movff	___ftge@ff1,??___ftge
  4791  0025FE  C002  F008         	movff	___ftge@ff1+1,??___ftge+1
  4792  002602  C003  F009         	movff	___ftge@ff1+2,??___ftge+2
  4793  002606  1E07               	comf	??___ftge,f,c
  4794  002608  1E08               	comf	??___ftge+1,f,c
  4795  00260A  1E09               	comf	??___ftge+2,f,c
  4796  00260C  2A07               	incf	??___ftge,f,c
  4797  00260E  0E00               	movlw	0
  4798  002610  2208               	addwfc	??___ftge+1,f,c
  4799  002612  2209               	addwfc	??___ftge+2,f,c
  4800  002614  0E00               	movlw	0
  4801  002616  2407               	addwf	??___ftge,w,c
  4802  002618  6E01               	movwf	___ftge@ff1,c
  4803  00261A  0E00               	movlw	0
  4804  00261C  2008               	addwfc	??___ftge+1,w,c
  4805  00261E  6E02               	movwf	___ftge@ff1+1,c
  4806  002620  0E80               	movlw	128
  4807  002622  2009               	addwfc	??___ftge+2,w,c
  4808  002624  6E03               	movwf	___ftge@ff1+2,c
  4809  002626  D000               	goto	l2183
  4810  002628                     l2183:
  4811  002628  AE06               	btfss	___ftge@ff2+2,7,c
  4812  00262A  D017               	goto	l2187
  4813  00262C  C004  F007         	movff	___ftge@ff2,??___ftge
  4814  002630  C005  F008         	movff	___ftge@ff2+1,??___ftge+1
  4815  002634  C006  F009         	movff	___ftge@ff2+2,??___ftge+2
  4816  002638  1E07               	comf	??___ftge,f,c
  4817  00263A  1E08               	comf	??___ftge+1,f,c
  4818  00263C  1E09               	comf	??___ftge+2,f,c
  4819  00263E  2A07               	incf	??___ftge,f,c
  4820  002640  0E00               	movlw	0
  4821  002642  2208               	addwfc	??___ftge+1,f,c
  4822  002644  2209               	addwfc	??___ftge+2,f,c
  4823  002646  0E00               	movlw	0
  4824  002648  2407               	addwf	??___ftge,w,c
  4825  00264A  6E04               	movwf	___ftge@ff2,c
  4826  00264C  0E00               	movlw	0
  4827  00264E  2008               	addwfc	??___ftge+1,w,c
  4828  002650  6E05               	movwf	___ftge@ff2+1,c
  4829  002652  0E80               	movlw	128
  4830  002654  2009               	addwfc	??___ftge+2,w,c
  4831  002656  6E06               	movwf	___ftge@ff2+2,c
  4832  002658  D000               	goto	l2187
  4833  00265A                     l2187:
  4834  00265A  0E00               	movlw	0
  4835  00265C  1A01               	xorwf	___ftge@ff1,f,c
  4836  00265E  0E00               	movlw	0
  4837  002660  1A02               	xorwf	___ftge@ff1+1,f,c
  4838  002662  0E80               	movlw	128
  4839  002664  1A03               	xorwf	___ftge@ff1+2,f,c
  4840  002666  0E00               	movlw	0
  4841  002668  1A04               	xorwf	___ftge@ff2,f,c
  4842  00266A  0E00               	movlw	0
  4843  00266C  1A05               	xorwf	___ftge@ff2+1,f,c
  4844  00266E  0E80               	movlw	128
  4845  002670  1A06               	xorwf	___ftge@ff2+2,f,c
  4846  002672  5004               	movf	___ftge@ff2,w,c
  4847  002674  5C01               	subwf	___ftge@ff1,w,c
  4848  002676  5005               	movf	___ftge@ff2+1,w,c
  4849  002678  5802               	subwfb	___ftge@ff1+1,w,c
  4850  00267A  5006               	movf	___ftge@ff2+2,w,c
  4851  00267C  5803               	subwfb	___ftge@ff1+2,w,c
  4852  00267E  B0D8               	btfsc	status,0,c
  4853  002680  D002               	goto	l2193
  4854  002682  90D8               	bcf	status,0,c
  4855  002684  D002               	goto	l631
  4856  002686                     l2193:
  4857  002686  80D8               	bsf	status,0,c
  4858  002688  D000               	goto	l631
  4859  00268A                     l631:
  4860  00268A  0012               	return		;funcret
  4861  00268C                     __end_of___ftge:
  4862                           	opt stack 0
  4863                           tblptru	equ	0xFF8
  4864                           tblptrh	equ	0xFF7
  4865                           tblptrl	equ	0xFF6
  4866                           tablat	equ	0xFF5
  4867                           prodh	equ	0xFF4
  4868                           prodl	equ	0xFF3
  4869                           postinc0	equ	0xFEE
  4870                           wreg	equ	0xFE8
  4871                           postdec1	equ	0xFE5
  4872                           fsr1l	equ	0xFE1
  4873                           indf2	equ	0xFDF
  4874                           postinc2	equ	0xFDE
  4875                           postdec2	equ	0xFDD
  4876                           fsr2h	equ	0xFDA
  4877                           fsr2l	equ	0xFD9
  4878                           status	equ	0xFD8
  4879                           
  4880 ;; *************** function _init_UART *****************
  4881 ;; Defined at:
  4882 ;;		line 27 in file "lab6pa.c"
  4883 ;; Parameters:    Size  Location     Type
  4884 ;;		None
  4885 ;; Auto vars:     Size  Location     Type
  4886 ;;		None
  4887 ;; Return value:  Size  Location     Type
  4888 ;;		None               void
  4889 ;; Registers used:
  4890 ;;		wreg, status,2, cstack
  4891 ;; Tracked objects:
  4892 ;;		On entry : 0/0
  4893 ;;		On exit  : 0/0
  4894 ;;		Unchanged: 0/0
  4895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;Total ram usage:        0 bytes
  4901 ;; Hardware stack levels used:    1
  4902 ;; Hardware stack levels required when called:    1
  4903 ;; This function calls:
  4904 ;;		_OpenUSART
  4905 ;; This function is called by:
  4906 ;;		_main
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text21
  4911  002A32                     __ptext21:
  4912                           	opt stack 0
  4913  002A32                     _init_UART:
  4914                           	opt stack 29
  4915                           
  4916                           ;lab6pa.c: 29: OpenUSART (0b01111111 & 0b10111111 &
  4917                           ;lab6pa.c: 30: 0b11111110 & 0b11111101 & 0b11111111 &
  4918                           ;lab6pa.c: 31: 0b11111111, 25);
  4919                           
  4920                           ;incstack = 0
  4921  002A32  0E00               	movlw	0
  4922  002A34  6E02               	movwf	OpenUSART@spbrg+1,c
  4923  002A36  0E19               	movlw	25
  4924  002A38  6E01               	movwf	OpenUSART@spbrg,c
  4925  002A3A  0E3C               	movlw	60
  4926  002A3C  EC05  F014         	call	_OpenUSART
  4927                           
  4928                           ;lab6pa.c: 32: OSCCON = 0x60;
  4929  002A40  0E60               	movlw	96
  4930  002A42  6ED3               	movwf	4051,c	;volatile
  4931  002A44  0012               	return		;funcret
  4932  002A46                     __end_of_init_UART:
  4933                           	opt stack 0
  4934                           tblptru	equ	0xFF8
  4935                           tblptrh	equ	0xFF7
  4936                           tblptrl	equ	0xFF6
  4937                           tablat	equ	0xFF5
  4938                           prodh	equ	0xFF4
  4939                           prodl	equ	0xFF3
  4940                           postinc0	equ	0xFEE
  4941                           wreg	equ	0xFE8
  4942                           postdec1	equ	0xFE5
  4943                           fsr1l	equ	0xFE1
  4944                           indf2	equ	0xFDF
  4945                           postinc2	equ	0xFDE
  4946                           postdec2	equ	0xFDD
  4947                           fsr2h	equ	0xFDA
  4948                           fsr2l	equ	0xFD9
  4949                           status	equ	0xFD8
  4950                           
  4951 ;; *************** function _OpenUSART *****************
  4952 ;; Defined at:
  4953 ;;		line 73 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\pic18\plib\USART\uopen.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;  config          1    wreg     unsigned char 
  4956 ;;  spbrg           2    0[COMRAM] unsigned int 
  4957 ;; Auto vars:     Size  Location     Type
  4958 ;;  config          1    2[COMRAM] unsigned char 
  4959 ;; Return value:  Size  Location     Type
  4960 ;;		None               void
  4961 ;; Registers used:
  4962 ;;		wreg, status,2
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4968 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4969 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4971 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4972 ;;Total ram usage:        3 bytes
  4973 ;; Hardware stack levels used:    1
  4974 ;; This function calls:
  4975 ;;		Nothing
  4976 ;; This function is called by:
  4977 ;;		_init_UART
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           	psect	text22
  4982  00280A                     __ptext22:
  4983                           	opt stack 0
  4984  00280A                     _OpenUSART:
  4985                           	opt stack 29
  4986                           
  4987                           ;incstack = 0
  4988                           ;OpenUSART@config stored from wreg
  4989  00280A  6E03               	movwf	OpenUSART@config,c
  4990  00280C  0E00               	movlw	0
  4991  00280E  6EAC               	movwf	4012,c	;volatile
  4992  002810  0E00               	movlw	0
  4993  002812  6EAB               	movwf	4011,c	;volatile
  4994  002814  A003               	btfss	OpenUSART@config,0,c
  4995  002816  D002               	goto	l1947
  4996  002818  88AC               	bsf	4012,4,c	;volatile
  4997  00281A  D000               	goto	l1947
  4998  00281C                     l1947:
  4999  00281C  A203               	btfss	OpenUSART@config,1,c
  5000  00281E  D003               	goto	l1951
  5001  002820  8CAC               	bsf	4012,6,c	;volatile
  5002  002822  8CAB               	bsf	4011,6,c	;volatile
  5003  002824  D000               	goto	l1951
  5004  002826                     l1951:
  5005  002826  A403               	btfss	OpenUSART@config,2,c
  5006  002828  D002               	goto	l1955
  5007  00282A  8EAC               	bsf	4012,7,c	;volatile
  5008  00282C  D000               	goto	l1955
  5009  00282E                     l1955:
  5010  00282E  A603               	btfss	OpenUSART@config,3,c
  5011  002830  D002               	goto	l196
  5012  002832  88AB               	bsf	4011,4,c	;volatile
  5013  002834  D002               	goto	l1959
  5014  002836                     l196:
  5015  002836  8AAB               	bsf	4011,5,c	;volatile
  5016  002838  D000               	goto	l1959
  5017  00283A                     l1959:
  5018  00283A  B803               	btfsc	OpenUSART@config,4,c
  5019  00283C  84AC               	bsf	4012,2,c	;volatile
  5020  00283E  989E               	bcf	3998,4,c	;volatile
  5021  002840  AA03               	btfss	OpenUSART@config,5,c
  5022  002842  D002               	goto	l1967
  5023  002844  86AB               	bsf	4011,3,c	;volatile
  5024  002846  D000               	goto	l1967
  5025  002848                     l1967:
  5026  002848  AC03               	btfss	OpenUSART@config,6,c
  5027  00284A  D002               	goto	l200
  5028  00284C  8A9D               	bsf	3997,5,c	;volatile
  5029  00284E  D001               	goto	l201
  5030  002850                     l200:
  5031  002850  9A9D               	bcf	3997,5,c	;volatile
  5032  002852                     l201:
  5033  002852  9A9E               	bcf	3998,5,c	;volatile
  5034  002854  AE03               	btfss	OpenUSART@config,7,c
  5035  002856  D002               	goto	l202
  5036  002858  889D               	bsf	3997,4,c	;volatile
  5037  00285A  D001               	goto	l203
  5038  00285C                     l202:
  5039  00285C  989D               	bcf	3997,4,c	;volatile
  5040  00285E                     l203:
  5041  00285E  C001  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5042  002862  5002               	movf	OpenUSART@spbrg+1,w,c
  5043  002864  6EB0               	movwf	4016,c	;volatile
  5044  002866  8AAC               	bsf	4012,5,c	;volatile
  5045  002868  8EAB               	bsf	4011,7,c	;volatile
  5046  00286A  9C94               	bcf	3988,6,c	;volatile
  5047  00286C  8E94               	bsf	3988,7,c	;volatile
  5048  00286E  B8AC               	btfsc	4012,4,c	;volatile
  5049  002870  BEAC               	btfsc	4012,7,c	;volatile
  5050  002872  D002               	goto	l205
  5051  002874  8C94               	bsf	3988,6,c	;volatile
  5052  002876  D000               	goto	l205
  5053  002878                     l205:
  5054  002878  0012               	return		;funcret
  5055  00287A                     __end_of_OpenUSART:
  5056                           	opt stack 0
  5057                           tblptru	equ	0xFF8
  5058                           tblptrh	equ	0xFF7
  5059                           tblptrl	equ	0xFF6
  5060                           tablat	equ	0xFF5
  5061                           prodh	equ	0xFF4
  5062                           prodl	equ	0xFF3
  5063                           postinc0	equ	0xFEE
  5064                           wreg	equ	0xFE8
  5065                           postdec1	equ	0xFE5
  5066                           fsr1l	equ	0xFE1
  5067                           indf2	equ	0xFDF
  5068                           postinc2	equ	0xFDE
  5069                           postdec2	equ	0xFDD
  5070                           fsr2h	equ	0xFDA
  5071                           fsr2l	equ	0xFD9
  5072                           status	equ	0xFD8
  5073                           
  5074 ;; *************** function _get_full_ADC *****************
  5075 ;; Defined at:
  5076 ;;		line 91 in file "lab6pa.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;		None
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;  result          2    4[COMRAM] int 
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  2    0[COMRAM] unsigned int 
  5083 ;; Registers used:
  5084 ;;		wreg, status,2, status,0
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5090 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5092 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5093 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5094 ;;Total ram usage:        6 bytes
  5095 ;; Hardware stack levels used:    1
  5096 ;; This function calls:
  5097 ;;		Nothing
  5098 ;; This function is called by:
  5099 ;;		_main
  5100 ;; This function uses a non-reentrant model
  5101 ;;
  5102                           
  5103                           	psect	text23
  5104  00297C                     __ptext23:
  5105                           	opt stack 0
  5106  00297C                     _get_full_ADC:
  5107                           	opt stack 30
  5108                           
  5109                           ;lab6pa.c: 93: int result;
  5110                           ;lab6pa.c: 94: ADCON0bits.GO=1;
  5111                           
  5112                           ;incstack = 0
  5113  00297C  82C2               	bsf	4034,1,c	;volatile
  5114                           
  5115                           ;lab6pa.c: 95: while(ADCON0bits.DONE==1);
  5116  00297E  D000               	goto	l83
  5117  002980                     l83:
  5118  002980  B2C2               	btfsc	4034,1,c	;volatile
  5119  002982  D7FE               	goto	l83
  5120                           
  5121                           ;lab6pa.c: 96: result = (ADRESH * 0x100) + ADRESL;
  5122  002984  50C4               	movf	4036,w,c	;volatile
  5123  002986  6E04               	movwf	(??_get_full_ADC+1)& (0+255),c
  5124  002988  6A03               	clrf	??_get_full_ADC& (0+255),c
  5125  00298A  50C3               	movf	4035,w,c	;volatile
  5126  00298C  2403               	addwf	??_get_full_ADC,w,c
  5127  00298E  6E05               	movwf	get_full_ADC@result,c
  5128  002990  0E00               	movlw	0
  5129  002992  2004               	addwfc	??_get_full_ADC+1,w,c
  5130  002994  6E06               	movwf	get_full_ADC@result+1,c
  5131                           
  5132                           ;lab6pa.c: 98: return result;
  5133  002996  C005  F001         	movff	get_full_ADC@result,?_get_full_ADC
  5134  00299A  C006  F002         	movff	get_full_ADC@result+1,?_get_full_ADC+1
  5135  00299E  D000               	goto	l86
  5136  0029A0                     l86:
  5137  0029A0  0012               	return		;funcret
  5138  0029A2                     __end_of_get_full_ADC:
  5139                           	opt stack 0
  5140                           tblptru	equ	0xFF8
  5141                           tblptrh	equ	0xFF7
  5142                           tblptrl	equ	0xFF6
  5143                           tablat	equ	0xFF5
  5144                           prodh	equ	0xFF4
  5145                           prodl	equ	0xFF3
  5146                           postinc0	equ	0xFEE
  5147                           wreg	equ	0xFE8
  5148                           postdec1	equ	0xFE5
  5149                           fsr1l	equ	0xFE1
  5150                           indf2	equ	0xFDF
  5151                           postinc2	equ	0xFDE
  5152                           postdec2	equ	0xFDD
  5153                           fsr2h	equ	0xFDA
  5154                           fsr2l	equ	0xFD9
  5155                           status	equ	0xFD8
  5156                           
  5157 ;; *************** function ___lwtoft *****************
  5158 ;; Defined at:
  5159 ;;		line 28 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lwtoft.c"
  5160 ;; Parameters:    Size  Location     Type
  5161 ;;  c               2    8[COMRAM] unsigned int 
  5162 ;; Auto vars:     Size  Location     Type
  5163 ;;		None
  5164 ;; Return value:  Size  Location     Type
  5165 ;;                  3    8[COMRAM] float 
  5166 ;; Registers used:
  5167 ;;		wreg, status,2, status,0, cstack
  5168 ;; Tracked objects:
  5169 ;;		On entry : 0/0
  5170 ;;		On exit  : 0/0
  5171 ;;		Unchanged: 0/0
  5172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5173 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5176 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5177 ;;Total ram usage:        3 bytes
  5178 ;; Hardware stack levels used:    1
  5179 ;; Hardware stack levels required when called:    1
  5180 ;; This function calls:
  5181 ;;		___ftpack
  5182 ;; This function is called by:
  5183 ;;		_main
  5184 ;; This function uses a non-reentrant model
  5185 ;;
  5186                           
  5187                           	psect	text24
  5188  0029A2                     __ptext24:
  5189                           	opt stack 0
  5190  0029A2                     ___lwtoft:
  5191                           	opt stack 29
  5192                           
  5193                           ;incstack = 0
  5194  0029A2  C009  F001         	movff	___lwtoft@c,___ftpack@arg
  5195  0029A6  C00A  F002         	movff	___lwtoft@c+1,___ftpack@arg+1
  5196  0029AA  6A03               	clrf	___ftpack@arg+2,c
  5197  0029AC  0E8E               	movlw	142
  5198  0029AE  6E04               	movwf	___ftpack@exp,c
  5199  0029B0  0E00               	movlw	0
  5200  0029B2  6E05               	movwf	___ftpack@sign,c
  5201  0029B4  EC4D  F012         	call	___ftpack	;wreg free
  5202  0029B8  C001  F009         	movff	?___ftpack,?___lwtoft
  5203  0029BC  C002  F00A         	movff	?___ftpack+1,?___lwtoft+1
  5204  0029C0  C003  F00B         	movff	?___ftpack+2,?___lwtoft+2
  5205  0029C4  D000               	goto	l787
  5206  0029C6                     l787:
  5207  0029C6  0012               	return		;funcret
  5208  0029C8                     __end_of___lwtoft:
  5209                           	opt stack 0
  5210                           tblptru	equ	0xFF8
  5211                           tblptrh	equ	0xFF7
  5212                           tblptrl	equ	0xFF6
  5213                           tablat	equ	0xFF5
  5214                           prodh	equ	0xFF4
  5215                           prodl	equ	0xFF3
  5216                           postinc0	equ	0xFEE
  5217                           wreg	equ	0xFE8
  5218                           postdec1	equ	0xFE5
  5219                           fsr1l	equ	0xFE1
  5220                           indf2	equ	0xFDF
  5221                           postinc2	equ	0xFDE
  5222                           postdec2	equ	0xFDD
  5223                           fsr2h	equ	0xFDA
  5224                           fsr2l	equ	0xFD9
  5225                           status	equ	0xFD8
  5226                           
  5227 ;; *************** function ___lbtoft *****************
  5228 ;; Defined at:
  5229 ;;		line 27 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\lbtoft.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;  c               1    wreg     unsigned char 
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;  c               1   11[COMRAM] unsigned char 
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  3    8[COMRAM] float 
  5236 ;; Registers used:
  5237 ;;		wreg, status,2, status,0, cstack
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5243 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5244 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5246 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5247 ;;Total ram usage:        4 bytes
  5248 ;; Hardware stack levels used:    1
  5249 ;; Hardware stack levels required when called:    1
  5250 ;; This function calls:
  5251 ;;		___ftpack
  5252 ;; This function is called by:
  5253 ;;		_main
  5254 ;; This function uses a non-reentrant model
  5255 ;;
  5256                           
  5257                           	psect	text25
  5258  0029C8                     __ptext25:
  5259                           	opt stack 0
  5260  0029C8                     ___lbtoft:
  5261                           	opt stack 29
  5262                           
  5263                           ;incstack = 0
  5264                           ;___lbtoft@c stored from wreg
  5265  0029C8  6E0C               	movwf	___lbtoft@c,c
  5266  0029CA  500C               	movf	___lbtoft@c,w,c
  5267  0029CC  6E01               	movwf	___ftpack@arg,c
  5268  0029CE  6A02               	clrf	___ftpack@arg+1,c
  5269  0029D0  6A03               	clrf	___ftpack@arg+2,c
  5270  0029D2  0E8E               	movlw	142
  5271  0029D4  6E04               	movwf	___ftpack@exp,c
  5272  0029D6  0E00               	movlw	0
  5273  0029D8  6E05               	movwf	___ftpack@sign,c
  5274  0029DA  EC4D  F012         	call	___ftpack	;wreg free
  5275  0029DE  C001  F009         	movff	?___ftpack,?___lbtoft
  5276  0029E2  C002  F00A         	movff	?___ftpack+1,?___lbtoft+1
  5277  0029E6  C003  F00B         	movff	?___ftpack+2,?___lbtoft+2
  5278  0029EA  D000               	goto	l694
  5279  0029EC                     l694:
  5280  0029EC  0012               	return		;funcret
  5281  0029EE                     __end_of___lbtoft:
  5282                           	opt stack 0
  5283                           tblptru	equ	0xFF8
  5284                           tblptrh	equ	0xFF7
  5285                           tblptrl	equ	0xFF6
  5286                           tablat	equ	0xFF5
  5287                           prodh	equ	0xFF4
  5288                           prodl	equ	0xFF3
  5289                           postinc0	equ	0xFEE
  5290                           wreg	equ	0xFE8
  5291                           postdec1	equ	0xFE5
  5292                           fsr1l	equ	0xFE1
  5293                           indf2	equ	0xFDF
  5294                           postinc2	equ	0xFDE
  5295                           postdec2	equ	0xFDD
  5296                           fsr2h	equ	0xFDA
  5297                           fsr2l	equ	0xFD9
  5298                           status	equ	0xFD8
  5299                           
  5300 ;; *************** function ___ftdiv *****************
  5301 ;; Defined at:
  5302 ;;		line 54 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\ftdiv.c"
  5303 ;; Parameters:    Size  Location     Type
  5304 ;;  f1              3   11[COMRAM] float 
  5305 ;;  f2              3   14[COMRAM] float 
  5306 ;; Auto vars:     Size  Location     Type
  5307 ;;  f3              3   21[COMRAM] float 
  5308 ;;  sign            1   25[COMRAM] unsigned char 
  5309 ;;  exp             1   24[COMRAM] unsigned char 
  5310 ;;  cntr            1   20[COMRAM] unsigned char 
  5311 ;; Return value:  Size  Location     Type
  5312 ;;                  3   11[COMRAM] float 
  5313 ;; Registers used:
  5314 ;;		wreg, status,2, status,0, cstack
  5315 ;; Tracked objects:
  5316 ;;		On entry : 0/0
  5317 ;;		On exit  : 0/0
  5318 ;;		Unchanged: 0/0
  5319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5320 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5321 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5322 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5323 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5324 ;;Total ram usage:       15 bytes
  5325 ;; Hardware stack levels used:    1
  5326 ;; Hardware stack levels required when called:    1
  5327 ;; This function calls:
  5328 ;;		___ftpack
  5329 ;; This function is called by:
  5330 ;;		_main
  5331 ;; This function uses a non-reentrant model
  5332 ;;
  5333                           
  5334                           	psect	text26
  5335  0023B8                     __ptext26:
  5336                           	opt stack 0
  5337  0023B8                     ___ftdiv:
  5338                           	opt stack 29
  5339                           
  5340                           ;incstack = 0
  5341  0023B8  C00E  F012         	movff	___ftdiv@f1+2,??___ftdiv
  5342  0023BC  6A13               	clrf	(??___ftdiv+1)& (0+255),c
  5343  0023BE  6A14               	clrf	(??___ftdiv+2)& (0+255),c
  5344  0023C0  340D               	rlcf	___ftdiv@f1+1,w,c
  5345  0023C2  3612               	rlcf	??___ftdiv& (0+255),f,c
  5346  0023C4  E301               	bnc	u2641
  5347  0023C6  8013               	bsf	(??___ftdiv+1)& (0+255),0,c
  5348  0023C8                     u2641:
  5349  0023C8  5012               	movf	??___ftdiv,w,c
  5350  0023CA  6E19               	movwf	___ftdiv@exp,c
  5351  0023CC  5019               	movf	___ftdiv@exp,w,c
  5352  0023CE  A4D8               	btfss	status,2,c
  5353  0023D0  D002               	goto	l2465
  5354  0023D2  D00E               	goto	l2467
  5355  0023D4  D061               	goto	l605
  5356  0023D6                     l2465:
  5357  0023D6  C011  F012         	movff	___ftdiv@f2+2,??___ftdiv
  5358  0023DA  6A13               	clrf	(??___ftdiv+1)& (0+255),c
  5359  0023DC  6A14               	clrf	(??___ftdiv+2)& (0+255),c
  5360  0023DE  3410               	rlcf	___ftdiv@f2+1,w,c
  5361  0023E0  3612               	rlcf	??___ftdiv& (0+255),f,c
  5362  0023E2  E301               	bnc	u2661
  5363  0023E4  8013               	bsf	(??___ftdiv+1)& (0+255),0,c
  5364  0023E6                     u2661:
  5365  0023E6  5012               	movf	??___ftdiv,w,c
  5366  0023E8  6E1A               	movwf	___ftdiv@sign,c
  5367  0023EA  501A               	movf	___ftdiv@sign,w,c
  5368  0023EC  A4D8               	btfss	status,2,c
  5369  0023EE  D007               	goto	l2471
  5370  0023F0                     l2467:
  5371  0023F0  0E00               	movlw	0
  5372  0023F2  6E0C               	movwf	?___ftdiv,c
  5373  0023F4  0E00               	movlw	0
  5374  0023F6  6E0D               	movwf	?___ftdiv+1,c
  5375  0023F8  0E00               	movlw	0
  5376  0023FA  6E0E               	movwf	?___ftdiv+2,c
  5377  0023FC  D04D               	goto	l605
  5378  0023FE                     l2471:
  5379  0023FE  0E00               	movlw	0
  5380  002400  6E16               	movwf	___ftdiv@f3,c
  5381  002402  0E00               	movlw	0
  5382  002404  6E17               	movwf	___ftdiv@f3+1,c
  5383  002406  0E00               	movlw	0
  5384  002408  6E18               	movwf	___ftdiv@f3+2,c
  5385  00240A  501A               	movf	___ftdiv@sign,w,c
  5386  00240C  0F89               	addlw	137
  5387  00240E  5E19               	subwf	___ftdiv@exp,f,c
  5388  002410  C00E  F01A         	movff	___ftdiv@f1+2,___ftdiv@sign
  5389  002414  5011               	movf	___ftdiv@f2+2,w,c
  5390  002416  1A1A               	xorwf	___ftdiv@sign,f,c
  5391  002418  0E80               	movlw	128
  5392  00241A  161A               	andwf	___ftdiv@sign,f,c
  5393  00241C  8E0D               	bsf	___ftdiv@f1+1,7,c
  5394  00241E  0EFF               	movlw	255
  5395  002420  160C               	andwf	___ftdiv@f1,f,c
  5396  002422  0EFF               	movlw	255
  5397  002424  160D               	andwf	___ftdiv@f1+1,f,c
  5398  002426  0E00               	movlw	0
  5399  002428  160E               	andwf	___ftdiv@f1+2,f,c
  5400  00242A  8E10               	bsf	___ftdiv@f2+1,7,c
  5401  00242C  0EFF               	movlw	255
  5402  00242E  160F               	andwf	___ftdiv@f2,f,c
  5403  002430  0EFF               	movlw	255
  5404  002432  1610               	andwf	___ftdiv@f2+1,f,c
  5405  002434  0E00               	movlw	0
  5406  002436  1611               	andwf	___ftdiv@f2+2,f,c
  5407  002438  0E18               	movlw	24
  5408  00243A  6E15               	movwf	___ftdiv@cntr,c
  5409  00243C  D000               	goto	l2491
  5410  00243E                     l2491:
  5411  00243E  90D8               	bcf	status,0,c
  5412  002440  3616               	rlcf	___ftdiv@f3,f,c
  5413  002442  3617               	rlcf	___ftdiv@f3+1,f,c
  5414  002444  3618               	rlcf	___ftdiv@f3+2,f,c
  5415  002446  500F               	movf	___ftdiv@f2,w,c
  5416  002448  5C0C               	subwf	___ftdiv@f1,w,c
  5417  00244A  5010               	movf	___ftdiv@f2+1,w,c
  5418  00244C  580D               	subwfb	___ftdiv@f1+1,w,c
  5419  00244E  5011               	movf	___ftdiv@f2+2,w,c
  5420  002450  580E               	subwfb	___ftdiv@f1+2,w,c
  5421  002452  A0D8               	btfss	status,0,c
  5422  002454  D007               	goto	l608
  5423  002456  500F               	movf	___ftdiv@f2,w,c
  5424  002458  5E0C               	subwf	___ftdiv@f1,f,c
  5425  00245A  5010               	movf	___ftdiv@f2+1,w,c
  5426  00245C  5A0D               	subwfb	___ftdiv@f1+1,f,c
  5427  00245E  5011               	movf	___ftdiv@f2+2,w,c
  5428  002460  5A0E               	subwfb	___ftdiv@f1+2,f,c
  5429  002462  8016               	bsf	___ftdiv@f3,0,c
  5430  002464                     l608:
  5431  002464  90D8               	bcf	status,0,c
  5432  002466  360C               	rlcf	___ftdiv@f1,f,c
  5433  002468  360D               	rlcf	___ftdiv@f1+1,f,c
  5434  00246A  360E               	rlcf	___ftdiv@f1+2,f,c
  5435  00246C  2E15               	decfsz	___ftdiv@cntr,f,c
  5436  00246E  D7E7               	goto	l2491
  5437  002470  D000               	goto	l2501
  5438  002472                     l2501:
  5439  002472  C016  F001         	movff	___ftdiv@f3,___ftpack@arg
  5440  002476  C017  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  5441  00247A  C018  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  5442  00247E  C019  F004         	movff	___ftdiv@exp,___ftpack@exp
  5443  002482  C01A  F005         	movff	___ftdiv@sign,___ftpack@sign
  5444  002486  EC4D  F012         	call	___ftpack	;wreg free
  5445  00248A  C001  F00C         	movff	?___ftpack,?___ftdiv
  5446  00248E  C002  F00D         	movff	?___ftpack+1,?___ftdiv+1
  5447  002492  C003  F00E         	movff	?___ftpack+2,?___ftdiv+2
  5448  002496  D000               	goto	l605
  5449  002498                     l605:
  5450  002498  0012               	return		;funcret
  5451  00249A                     __end_of___ftdiv:
  5452                           	opt stack 0
  5453                           tblptru	equ	0xFF8
  5454                           tblptrh	equ	0xFF7
  5455                           tblptrl	equ	0xFF6
  5456                           tablat	equ	0xFF5
  5457                           prodh	equ	0xFF4
  5458                           prodl	equ	0xFF3
  5459                           postinc0	equ	0xFEE
  5460                           wreg	equ	0xFE8
  5461                           postdec1	equ	0xFE5
  5462                           fsr1l	equ	0xFE1
  5463                           indf2	equ	0xFDF
  5464                           postinc2	equ	0xFDE
  5465                           postdec2	equ	0xFDD
  5466                           fsr2h	equ	0xFDA
  5467                           fsr2l	equ	0xFD9
  5468                           status	equ	0xFD8
  5469                           
  5470 ;; *************** function ___ftpack *****************
  5471 ;; Defined at:
  5472 ;;		line 62 in file "D:\Program Files (x86)\Microchip\xc8\v1.34\sources\common\float.c"
  5473 ;; Parameters:    Size  Location     Type
  5474 ;;  arg             3    0[COMRAM] unsigned um
  5475 ;;  exp             1    3[COMRAM] unsigned char 
  5476 ;;  sign            1    4[COMRAM] unsigned char 
  5477 ;; Auto vars:     Size  Location     Type
  5478 ;;		None
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  3    0[COMRAM] float 
  5481 ;; Registers used:
  5482 ;;		wreg, status,2, status,0
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5488 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5490 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5491 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5492 ;;Total ram usage:        8 bytes
  5493 ;; Hardware stack levels used:    1
  5494 ;; This function calls:
  5495 ;;		Nothing
  5496 ;; This function is called by:
  5497 ;;		___ftadd
  5498 ;;		___ftdiv
  5499 ;;		___ftmul
  5500 ;;		___lbtoft
  5501 ;;		___lltoft
  5502 ;;		___lwtoft
  5503 ;; This function uses a non-reentrant model
  5504 ;;
  5505                           
  5506                           	psect	text27
  5507  00249A                     __ptext27:
  5508                           	opt stack 0
  5509  00249A                     ___ftpack:
  5510                           	opt stack 27
  5511                           
  5512                           ;incstack = 0
  5513  00249A  5004               	movf	___ftpack@exp,w,c
  5514  00249C  B4D8               	btfsc	status,2,c
  5515  00249E  D005               	goto	l1705
  5516  0024A0  5001               	movf	___ftpack@arg,w,c
  5517  0024A2  1002               	iorwf	___ftpack@arg+1,w,c
  5518  0024A4  1003               	iorwf	___ftpack@arg+2,w,c
  5519  0024A6  A4D8               	btfss	status,2,c
  5520  0024A8  D00E               	goto	l1711
  5521  0024AA                     l1705:
  5522  0024AA  0E00               	movlw	0
  5523  0024AC  6E01               	movwf	?___ftpack,c
  5524  0024AE  0E00               	movlw	0
  5525  0024B0  6E02               	movwf	?___ftpack+1,c
  5526  0024B2  0E00               	movlw	0
  5527  0024B4  6E03               	movwf	?___ftpack+2,c
  5528  0024B6  D053               	goto	l533
  5529  0024B8  D006               	goto	l1711
  5530  0024BA                     l1709:
  5531  0024BA  2A04               	incf	___ftpack@exp,f,c
  5532  0024BC  90D8               	bcf	status,0,c
  5533  0024BE  3203               	rrcf	___ftpack@arg+2,f,c
  5534  0024C0  3202               	rrcf	___ftpack@arg+1,f,c
  5535  0024C2  3201               	rrcf	___ftpack@arg,f,c
  5536  0024C4  D000               	goto	l1711
  5537  0024C6                     l1711:
  5538  0024C6  0E00               	movlw	0
  5539  0024C8  1401               	andwf	___ftpack@arg,w,c
  5540  0024CA  6E06               	movwf	??___ftpack& (0+255),c
  5541  0024CC  0E00               	movlw	0
  5542  0024CE  1402               	andwf	___ftpack@arg+1,w,c
  5543  0024D0  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5544  0024D2  0EFE               	movlw	254
  5545  0024D4  1403               	andwf	___ftpack@arg+2,w,c
  5546  0024D6  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5547  0024D8  5006               	movf	??___ftpack,w,c
  5548  0024DA  1007               	iorwf	??___ftpack+1,w,c
  5549  0024DC  1008               	iorwf	??___ftpack+2,w,c
  5550  0024DE  B4D8               	btfsc	status,2,c
  5551  0024E0  D00E               	goto	l1717
  5552  0024E2  D7EB               	goto	l1709
  5553  0024E4  D00C               	goto	l1717
  5554  0024E6                     l1713:
  5555  0024E6  2A04               	incf	___ftpack@exp,f,c
  5556  0024E8  0E01               	movlw	1
  5557  0024EA  2601               	addwf	___ftpack@arg,f,c
  5558  0024EC  0E00               	movlw	0
  5559  0024EE  2202               	addwfc	___ftpack@arg+1,f,c
  5560  0024F0  0E00               	movlw	0
  5561  0024F2  2203               	addwfc	___ftpack@arg+2,f,c
  5562  0024F4  90D8               	bcf	status,0,c
  5563  0024F6  3203               	rrcf	___ftpack@arg+2,f,c
  5564  0024F8  3202               	rrcf	___ftpack@arg+1,f,c
  5565  0024FA  3201               	rrcf	___ftpack@arg,f,c
  5566  0024FC  D000               	goto	l1717
  5567  0024FE                     l1717:
  5568  0024FE  0E00               	movlw	0
  5569  002500  1401               	andwf	___ftpack@arg,w,c
  5570  002502  6E06               	movwf	??___ftpack& (0+255),c
  5571  002504  0E00               	movlw	0
  5572  002506  1402               	andwf	___ftpack@arg+1,w,c
  5573  002508  6E07               	movwf	(??___ftpack+1)& (0+255),c
  5574  00250A  0EFF               	movlw	255
  5575  00250C  1403               	andwf	___ftpack@arg+2,w,c
  5576  00250E  6E08               	movwf	(??___ftpack+2)& (0+255),c
  5577  002510  5006               	movf	??___ftpack,w,c
  5578  002512  1007               	iorwf	??___ftpack+1,w,c
  5579  002514  1008               	iorwf	??___ftpack+2,w,c
  5580  002516  B4D8               	btfsc	status,2,c
  5581  002518  D008               	goto	l1721
  5582  00251A  D7E5               	goto	l1713
  5583  00251C  D006               	goto	l1721
  5584  00251E                     l1719:
  5585  00251E  0604               	decf	___ftpack@exp,f,c
  5586  002520  90D8               	bcf	status,0,c
  5587  002522  3601               	rlcf	___ftpack@arg,f,c
  5588  002524  3602               	rlcf	___ftpack@arg+1,f,c
  5589  002526  3603               	rlcf	___ftpack@arg+2,f,c
  5590  002528  D000               	goto	l1721
  5591  00252A                     l1721:
  5592  00252A  BE02               	btfsc	___ftpack@arg+1,7,c
  5593  00252C  D004               	goto	l544
  5594  00252E  0E02               	movlw	2
  5595  002530  6004               	cpfslt	___ftpack@exp,c
  5596  002532  D7F5               	goto	l1719
  5597  002534  D000               	goto	l544
  5598  002536                     l544:
  5599  002536  B004               	btfsc	___ftpack@exp,0,c
  5600  002538  D002               	goto	l1727
  5601  00253A  9E02               	bcf	___ftpack@arg+1,7,c
  5602  00253C  D000               	goto	l1727
  5603  00253E                     l1727:
  5604  00253E  90D8               	bcf	status,0,c
  5605  002540  3204               	rrcf	___ftpack@exp,f,c
  5606  002542  5004               	movf	___ftpack@exp,w,c
  5607  002544  1203               	iorwf	___ftpack@arg+2,f,c
  5608  002546  5005               	movf	___ftpack@sign,w,c
  5609  002548  B4D8               	btfsc	status,2,c
  5610  00254A  D002               	goto	l1733
  5611  00254C  8E03               	bsf	___ftpack@arg+2,7,c
  5612  00254E  D000               	goto	l1733
  5613  002550                     l1733:
  5614  002550  C001  F001         	movff	___ftpack@arg,?___ftpack
  5615  002554  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  5616  002558  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  5617  00255C  D000               	goto	l533
  5618  00255E                     l533:
  5619  00255E  0012               	return		;funcret
  5620  002560                     __end_of___ftpack:
  5621                           	opt stack 0
  5622                           tblptru	equ	0xFF8
  5623                           tblptrh	equ	0xFF7
  5624                           tblptrl	equ	0xFF6
  5625                           tablat	equ	0xFF5
  5626                           prodh	equ	0xFF4
  5627                           prodl	equ	0xFF3
  5628                           postinc0	equ	0xFEE
  5629                           wreg	equ	0xFE8
  5630                           postdec1	equ	0xFE5
  5631                           fsr1l	equ	0xFE1
  5632                           indf2	equ	0xFDF
  5633                           postinc2	equ	0xFDE
  5634                           postdec2	equ	0xFDD
  5635                           fsr2h	equ	0xFDA
  5636                           fsr2l	equ	0xFD9
  5637                           status	equ	0xFD8
  5638                           
  5639 ;; *************** function _Init_TRIS *****************
  5640 ;; Defined at:
  5641 ;;		line 101 in file "lab6pa.c"
  5642 ;; Parameters:    Size  Location     Type
  5643 ;;		None
  5644 ;; Auto vars:     Size  Location     Type
  5645 ;;		None
  5646 ;; Return value:  Size  Location     Type
  5647 ;;		None               void
  5648 ;; Registers used:
  5649 ;;		wreg, status,2
  5650 ;; Tracked objects:
  5651 ;;		On entry : 0/0
  5652 ;;		On exit  : 0/0
  5653 ;;		Unchanged: 0/0
  5654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5659 ;;Total ram usage:        0 bytes
  5660 ;; Hardware stack levels used:    1
  5661 ;; This function calls:
  5662 ;;		Nothing
  5663 ;; This function is called by:
  5664 ;;		_main
  5665 ;; This function uses a non-reentrant model
  5666 ;;
  5667                           
  5668                           	psect	text28
  5669  002A46                     __ptext28:
  5670                           	opt stack 0
  5671  002A46                     _Init_TRIS:
  5672                           	opt stack 30
  5673                           
  5674                           ;lab6pa.c: 103: TRISA =0xFF;
  5675                           
  5676                           ;incstack = 0
  5677  002A46  6892               	setf	3986,c	;volatile
  5678                           
  5679                           ;lab6pa.c: 104: TRISB =0x00;
  5680  002A48  0E00               	movlw	0
  5681  002A4A  6E93               	movwf	3987,c	;volatile
  5682                           
  5683                           ;lab6pa.c: 105: TRISC = 0x00;
  5684  002A4C  0E00               	movlw	0
  5685  002A4E  6E94               	movwf	3988,c	;volatile
  5686                           
  5687                           ;lab6pa.c: 106: TRISD = 0x00;
  5688  002A50  0E00               	movlw	0
  5689  002A52  6E95               	movwf	3989,c	;volatile
  5690                           
  5691                           ;lab6pa.c: 107: TRISE = 0x00;
  5692  002A54  0E00               	movlw	0
  5693  002A56  6E96               	movwf	3990,c	;volatile
  5694  002A58  0012               	return		;funcret
  5695  002A5A                     __end_of_Init_TRIS:
  5696                           	opt stack 0
  5697                           tblptru	equ	0xFF8
  5698                           tblptrh	equ	0xFF7
  5699                           tblptrl	equ	0xFF6
  5700                           tablat	equ	0xFF5
  5701                           prodh	equ	0xFF4
  5702                           prodl	equ	0xFF3
  5703                           postinc0	equ	0xFEE
  5704                           wreg	equ	0xFE8
  5705                           postdec1	equ	0xFE5
  5706                           fsr1l	equ	0xFE1
  5707                           indf2	equ	0xFDF
  5708                           postinc2	equ	0xFDE
  5709                           postdec2	equ	0xFDD
  5710                           fsr2h	equ	0xFDA
  5711                           fsr2l	equ	0xFD9
  5712                           status	equ	0xFD8
  5713                           
  5714 ;; *************** function _Init_ADC *****************
  5715 ;; Defined at:
  5716 ;;		line 82 in file "lab6pa.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;		None
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;		None
  5721 ;; Return value:  Size  Location     Type
  5722 ;;		None               void
  5723 ;; Registers used:
  5724 ;;		wreg, status,2
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5734 ;;Total ram usage:        0 bytes
  5735 ;; Hardware stack levels used:    1
  5736 ;; This function calls:
  5737 ;;		Nothing
  5738 ;; This function is called by:
  5739 ;;		_main
  5740 ;; This function uses a non-reentrant model
  5741 ;;
  5742                           
  5743                           	psect	text29
  5744  002A68                     __ptext29:
  5745                           	opt stack 0
  5746  002A68                     _Init_ADC:
  5747                           	opt stack 30
  5748                           
  5749                           ;lab6pa.c: 84: ADCON0=0x01;
  5750                           
  5751                           ;incstack = 0
  5752  002A68  0E01               	movlw	1
  5753  002A6A  6EC2               	movwf	4034,c	;volatile
  5754                           
  5755                           ;lab6pa.c: 85: ADCON1=0x1A ;
  5756  002A6C  0E1A               	movlw	26
  5757  002A6E  6EC1               	movwf	4033,c	;volatile
  5758                           
  5759                           ;lab6pa.c: 87: ADCON2=0xA9;
  5760  002A70  0EA9               	movlw	169
  5761  002A72  6EC0               	movwf	4032,c	;volatile
  5762  002A74  0012               	return		;funcret
  5763  002A76                     __end_of_Init_ADC:
  5764                           	opt stack 0
  5765                           tblptru	equ	0xFF8
  5766                           tblptrh	equ	0xFF7
  5767                           tblptrl	equ	0xFF6
  5768                           tablat	equ	0xFF5
  5769                           prodh	equ	0xFF4
  5770                           prodl	equ	0xFF3
  5771                           postinc0	equ	0xFEE
  5772                           wreg	equ	0xFE8
  5773                           postdec1	equ	0xFE5
  5774                           fsr1l	equ	0xFE1
  5775                           indf2	equ	0xFDF
  5776                           postinc2	equ	0xFDE
  5777                           postdec2	equ	0xFDD
  5778                           fsr2h	equ	0xFDA
  5779                           fsr2l	equ	0xFD9
  5780                           status	equ	0xFD8
  5781                           tblptru	equ	0xFF8
  5782                           tblptrh	equ	0xFF7
  5783                           tblptrl	equ	0xFF6
  5784                           tablat	equ	0xFF5
  5785                           prodh	equ	0xFF4
  5786                           prodl	equ	0xFF3
  5787                           postinc0	equ	0xFEE
  5788                           wreg	equ	0xFE8
  5789                           postdec1	equ	0xFE5
  5790                           fsr1l	equ	0xFE1
  5791                           indf2	equ	0xFDF
  5792                           postinc2	equ	0xFDE
  5793                           postdec2	equ	0xFDD
  5794                           fsr2h	equ	0xFDA
  5795                           fsr2l	equ	0xFD9
  5796                           status	equ	0xFD8
  5797                           
  5798                           	psect	rparam
  5799  0000                     tblptru	equ	0xFF8
  5800                           tblptrh	equ	0xFF7
  5801                           tblptrl	equ	0xFF6
  5802                           tablat	equ	0xFF5
  5803                           prodh	equ	0xFF4
  5804                           prodl	equ	0xFF3
  5805                           postinc0	equ	0xFEE
  5806                           wreg	equ	0xFE8
  5807                           postdec1	equ	0xFE5
  5808                           fsr1l	equ	0xFE1
  5809                           indf2	equ	0xFDF
  5810                           postinc2	equ	0xFDE
  5811                           postdec2	equ	0xFDD
  5812                           fsr2h	equ	0xFDA
  5813                           fsr2l	equ	0xFD9
  5814                           status	equ	0xFD8


Data Sizes:
    Strings     16
    Constant    118
    Data        10
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    102     120
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_1(CODE[16]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_printf
    _printf->___fttol
    _scale->___ftmul
    _fround->___ftmul
    ___wmul->___awdiv
    ___ftmul->___ftadd
    ___awdiv->___awmod
    ___lltoft->___ftpack
    ___fttol->_scale
    ___ftsub->___ftadd
    ___ftadd->___ftneg
    ___ftneg->___lbtoft
    _init_UART->_OpenUSART
    ___lwtoft->___ftpack
    ___lbtoft->___ftpack
    ___ftdiv->___lwtoft

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   50669
                                             98 COMRAM     4     4      0
                           _Init_ADC
                          _Init_TRIS
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft
                           ___lwtoft
                       _get_full_ADC
                          _init_UART
                             _printf
                      _select_ADC_CH
                         _wait_1_sec
 ---------------------------------------------------------------------------------
 (1) _wait_1_sec                                           2     2      0      30
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _select_ADC_CH                                        1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _printf                                              42    37      5   36870
                                             64 COMRAM    34    29      5
                            ___awdiv
                            ___ftadd
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                            ___lldiv
                            ___llmod
                           ___lltoft
                             ___wmul
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               10     7      3    8735
                                             42 COMRAM     7     4      3
                            ___awdiv
                            ___awmod
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13    10      3    8537
                                             42 COMRAM    10     7      3
                            ___awdiv
                            ___awmod
                            ___ftadd (ARG)
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4    1855
                                             14 COMRAM     6     2      4
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3781
                                             27 COMRAM    15     9      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___ftadd (ARG)
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    1250
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    1360
                                              6 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         15     9      6     409
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          12     6      6     552
                                              0 COMRAM    12     6      6
 ---------------------------------------------------------------------------------
 (2) ___lltoft                                             9     5      4    1907
                                              8 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     477
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     374
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     517
                                             49 COMRAM    15    11      4
                            ___ftadd (ARG)
                            ___ftmul (ARG)
                            ___ftneg (ARG)
                           ___lbtoft (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftsub                                              6     0      6    3276
                                             27 COMRAM     6     0      6
                            ___ftadd
                           ___lltoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftadd                                             12     6      6    3023
                                             15 COMRAM    12     6      6
                            ___ftneg (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftneg                                              3     0      3     151
                                             12 COMRAM     3     0      3
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (2) ___ftge                                               9     3      6     454
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (1) _init_UART                                            0     0      0     273
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            3     1      2     273
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (1) _get_full_ADC                                         6     4      2      23
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) ___lwtoft                                             3     0      3    1860
                                              8 COMRAM     3     0      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___lbtoft                                             4     1      3    1807
                                              8 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (1) ___ftdiv                                             15     9      6    2251
                                             11 COMRAM    15     9      6
                           ___ftpack
                           ___lwtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    1785
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _Init_TRIS                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Init_ADC                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Init_ADC
   _Init_TRIS
   ___ftadd
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
   ___ftdiv
     ___ftpack
     ___lwtoft (ARG)
       ___ftpack
   ___ftmul
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftpack (ARG)
     ___lbtoft (ARG)
       ___ftpack
     ___wmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
   ___ftneg
     ___lbtoft (ARG)
       ___ftpack
   ___fttol
     ___ftadd (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___lbtoft (ARG)
       ___ftpack
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   ___lbtoft
     ___ftpack
   ___lwtoft
     ___ftpack
   _get_full_ADC
   _init_UART
     _OpenUSART
   _printf
     ___awdiv
       ___awmod (ARG)
     ___ftadd
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftge
     ___ftmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     ___ftneg
       ___lbtoft (ARG)
         ___ftpack
     ___ftsub
       ___ftadd
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lltoft (ARG)
         ___ftpack
     ___fttol
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___ftneg (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft (ARG)
         ___ftpack
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___ftmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___ftadd (ARG)
             ___ftneg (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           ___wmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         ___wmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
     ___lldiv
     ___llmod
     ___lltoft
       ___ftpack
     ___wmul
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftadd (ARG)
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _putch
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___ftmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___ftadd (ARG)
           ___ftneg (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftneg (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___wmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
       ___wmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
   _select_ADC_CH
   _wait_1_sec

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     66      78       1       94.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      78      34        0.0%
DATA                 0      0      78       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.34 build -361300703 
Symbol Table                                                                                   Thu Oct 10 17:35:45 2024

                      _R 0071                       l60 2A5E                       l83 2980  
                     l68 2A30                       l86 29A0             ___awdiv@sign 000C  
    ___wmul@multiplicand 0011             ___ftadd@exp1 001B             ___ftadd@exp2 001A  
           ___ftadd@sign 0019                      l200 2850                      l201 2852  
                    l202 285C                      l203 285E                      l116 1A8C  
                    l205 2878                      l109 1CD0                      l208 297A  
                    l401 25F4                      l161 1508                      l172 16AC  
                    l501 21C8                      l414 2798                      l196 2836  
                    l533 255E                      l605 2498                      l613 20CE  
                    l622 20BE                      l631 268A                      l615 2036  
                    l544 2536                      l608 2464                      l616 205E  
                    l707 27F8                      l492 21D8                      l573 1D16  
                    l637 22D0                      l574 1E94                      l654 291C  
                    l647 2A04                      l727 28D8                      l577 1D40  
                    l658 23B6                      l588 1E02                      l597 1E1E  
                    l694 29EC                      l697 2706                      l787 29C6  
           ___awmod@sign 0006                      prod 000FF3                      wreg 000FE8  
           __CFG_LVP$OFF 000000             ___ftdiv@cntr 0015             ___ftdiv@sign 001A  
           __CFG_WDT$OFF 000000                     l2101 2090                     l2013 1C90  
                   l2005 1BCC                     l2103 2096                     l2033 1882  
                   l2123 20F0                     l2107 20AA                     l2051 1A68  
                   l2027 17DA                     l2117 20E0                     l2109 20B8  
                   l2061 1FDE                     l2045 19B6                     l2037 1892  
                   l2231 2360                     l2207 22F0                     l2225 234A  
                   l2161 219A                     l2145 2166                     l2137 2134  
                   l2321 10D8                     l2313 10A2                     l2243 23A4  
                   l2235 2374                     l2163 21A0                     l2067 1FFC  
                   l2411 1440                     l2403 1420                     l2315 10AE  
                   l2501 2472                     l2237 2382                     l2229 235A  
                   l2253 26AE                     l2157 218A                     l2149 2176  
                   l2309 1092                     l1445 2A1A                     l1711 24C6  
                   l2183 2628                     l2175 28F2                     l2239 238C  
                   l2255 26BC                     l2167 21B4                     l2423 14E4  
                   l2407 1424                     l2351 11BC                     l2335 112A  
                   l2319 10B6                     l1721 252A                     l1713 24E6  
                   l1705 24AA                     l2193 2686                     l2265 26F6  
                   l2257 26C4                     l2281 27E8                     l2273 27AC  
                   l2169 21C2                     l2097 2080                     l2089 206C  
                   l2425 14F2                     l2417 14CA                     l1449 2A28  
                   l2187 265A                     l2275 27BA                     l2451 1668  
                   l2435 1528                     l2419 14D6                     l2363 1246  
                   l1733 2550                     l1717 24FE                     l1709 24BA  
                   l2277 27C2                     l1901 25EA                     l1821 2212  
                   l2445 164E                     l2429 150E                     l2381 12FC  
                   l2365 1256                     l2453 1674                     l2517 1EAA  
                   l1727 253E                     l1719 251E                     l2471 23FE  
                   l1751 1D24                     l2287 2880                     l2447 165A  
                   l2439 1578                     l2375 12CE                     l2367 1286  
                   l2359 1220                     l2465 23D6                     l1809 1E6E  
                   l2289 288E                     l1921 274A                     l1913 272E  
                   l1825 2220                     l2393 13E0                     l2385 133E  
                   l2369 1296                     l2457 1690                     l2491 243E  
                   l2467 23F0                     l1763 1D5A                     l1923 2754  
                   l1843 2266                     l1819 21F8                     l2395 13E4  
                   l2387 136C                     l2379 12F2                     l1781 1DB2  
                   l1773 1D82                     l1757 1D4E                     l1925 275C  
                   l1933 277E                     l1917 273C                     l1853 2294  
                   l2389 137A                     l1951 2826                     l1791 1DEA  
                   l1783 1DBE                     l1847 227C                     l1839 2254  
                   l2399 13F0                     l1793 1DF6                     l1785 1DC6  
                   l1881 259E                     l1937 278E                     l1929 2772  
                   l1857 22AA                     l1849 2282                     l1955 282E  
                   l1947 281C                     l1779 1DA6                     l1883 25A8  
                   l1875 2588                     l1893 25CE                     l1885 25B0  
                   l1869 2576                     l1967 2848                     l1959 283A  
                   l1799 1E3C                     l1897 25DA                     STR_1 1077  
                   u2011 1FD0                     u2031 1FEE                     u2221 22E2  
                   u2240 230E                     u1441 1CE2                     u1451 1CF6  
                   u2420 1162                     u2245 2306                     u2425 1158  
                   u1651 21EA                     u1671 2208                     u2641 23C8  
           printf@tmpval 005B                     u2580 1502                     u2661 23E6  
                   _TRMT 007D61                     _main 1E96             ___ftpack@arg 0001  
           ___ftpack@exp 0004           ??_get_full_ADC 0003                     fsr2h 000FDA  
                   fsr1l 000FE1                     indf2 000FDF                     fsr2l 000FD9  
                   _volt 0074                     prodh 000FF4                     prodl 000FF3  
                   start 0000             ___ftmul@cntr 0029             ___param_bank 000010  
           ___ftmul@sign 002A             ___fttol@exp1 0040             ___fttol@lval 003C  
                  ?_main 0001          __end_of___awdiv 25F6          __end_of___ftadd 1E96  
        __end_of___awmod 279A          __end_of___ftdiv 249A          __end_of___ftneg 2A12  
        __end_of___lldiv 2718          __end_of___ftmul 22D2          ___awdiv@divisor 0009  
        __end_of___llmod 280A          __end_of___ftsub 291E          __end_of___fttol 23B8  
        ___awdiv@counter 000B                    _RCSTA 000FAB                    _SPBRG 000FAF  
                  _PORTB 000F81                    _PORTD 000F83                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96                    _TXREG 000FAD                    _TXSTA 000FAC  
           ___lltoft@exp 0011          __end_of_dpowers 1029                    _scale 16AE  
          ___ftpack@sign 0005                    main@L 0065                    main@U 0066  
                  _putch 2A5A           __CFG_BOREN$OFF 000000                    tablat 000FF5  
                  status 000FD8    __end_of_select_ADC_CH 2A82          __initialization 291E  
           __end_of_main 1FC0         __end_of_Init_ADC 2A76                   ??_main 0063  
          ___fttol@sign1 003B            __activetblptr 000002     __size_of__tdiv_to_l_ 0110  
                 _ADCON0 000FC2                   _ADCON1 000FC1                   _ADCON2 000FC0  
       ___llmod@dividend 0001                   ?_scale 002B                   _ADRESH 000FC4  
                 _ADRESL 000FC3         ___awdiv@dividend 0007                   ?_putch 0001  
       __end_of___ftpack 2560         __end_of___lbtoft 29EE         __end_of___lltoft 28DA  
       __end_of___lwtoft 29C8                   _OSCCON 000FD3       __size_of_Init_TRIS 0014  
                 _SPBRGH 000FB0         __end_of__powers_ 1077       __size_of_OpenUSART 0070  
                 ___ftge 25F6                   ___wmul 2954                ??___awdiv 000B  
              ??___ftadd 0016                ??___awmod 0005                ??___ftdiv 0012  
              ??___ftneg 0010                ??___lldiv 0009                ??___ftmul 0022  
              ??___llmod 0009                ??___ftsub 0022                ??___fttol 0036  
                 _fround 1A8E                   clear_0 2924         ___awdiv@quotient 000D  
        ___awmod@divisor 0003          ___awmod@counter 0005                   _printf 1088  
  ___ftmul@f3_as_product 0026     __end_of_get_full_ADC 29A2             __pdataCOMRAM 0067  
           __mediumconst 0000                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8                   putch@c 0001               __accesstop 0080  
__end_of__initialization 294A               ___ftadd@f1 0010               ___ftadd@f2 0013  
             ___ftge@ff1 0001               ___ftge@ff2 0004            ___rparam_used 000001  
             ___ftdiv@f1 000C               ___ftdiv@f2 000F               ___ftdiv@f3 0016  
             ___ftneg@f1 000D               ___lbtoft@c 000C               ___ftmul@f1 001C  
             ___ftmul@f2 001F               ___ftsub@f1 001C               ___ftsub@f2 001F  
             ___fttol@f1 0032           __pcstackCOMRAM 0001               ___lltoft@c 0009  
          __end_of_scale 1A8E            __end_of_putch 2A68        __end_of_Init_TRIS 2A5A  
             ___lwtoft@c 0009               __div_to_l_ 20D0        __end_of_OpenUSART 287A  
        __div_to_l_@exp1 000C          __div_to_l_@cntr 000B                  ??_scale 002E  
        __div_to_l_@quot 0007                  ??_putch 0001                ?_Init_ADC 0001  
     __size_of_init_UART 0014            __div_to_l_@f1 0001            __div_to_l_@f2 0004  
                ?___ftge 0001                  ?___wmul 000F                  ?_fround 002B  
              ?___ftpack 0001                ?___lbtoft 0009                  ?_printf 0041  
              ?___lltoft 0009                ?___lwtoft 0009               ??_Init_ADC 0001  
      __end_of__npowers_ 1050                  __Hparam 0000               _scale$1094 002E  
                __Lparam 0000          __size_of___ftge 0096                  ___awdiv 2560  
                ___ftadd 1CD2                  ___awmod 2718                  ___ftdiv 23B8  
                ___ftneg 29EE                  ___lldiv 268C          __size_of___wmul 0028  
                ___ftmul 21DA                  ___llmod 279A                  ___ftsub 28DA  
                ___fttol 22D2              wait_1_sec@j 0001    __size_of_get_full_ADC 0026  
           __psmallconst 1000                  __pcinit 291E               ??___ftpack 0006  
             ??___lbtoft 000C          __size_of_fround 0244                  __ramtop 1000  
             ??___lltoft 000D                  __ptext0 1E96                  __ptext1 2A12  
                __ptext2 2A76                  __ptext3 1088                  __ptext4 16AE  
                __ptext5 2A5A                  __ptext6 1A8E                  __ptext7 2954  
                __ptext8 21DA                  __ptext9 2718          __size_of_printf 0626  
      __end_of_init_UART 2A46               ??___lwtoft 000C              ?__div_to_l_ 0001  
                _dpowers 1001         ___awmod@dividend 0001     end_of_initialization 294A  
          __Lmediumconst 0000             _get_full_ADC 297C               _wait_1_sec 2A12  
        ___lldiv@divisor 0005          ___lldiv@counter 000D                _RCSTAbits 000FAB  
                printf@c 0062                  printf@f 0041                  postdec1 000FE5  
                postdec2 000FDD                  postinc0 000FEE                  postinc2 000FDE  
         __tdiv_to_l_@f1 0001           __tdiv_to_l_@f2 0004            ??__tdiv_to_l_ 0007  
              _PORTDbits 000F83   __size_of_select_ADC_CH 000C                _TRISCbits 000F94  
            ___ftdiv@exp 0019                _TXSTAbits 000FAC       get_full_ADC@result 0005  
    __size_of__div_to_l_ 010A              ___ftmul@exp 0025           __end_of___ftge 268C  
         __end_of___wmul 297C            __pidataCOMRAM 2A82           __end_of_fround 1CD2  
         __end_of_printf 16AE      start_initialization 291E                _Init_TRIS 2A46  
    __end_of__tdiv_to_l_ 20D0                _OpenUSART 280A          ___llmod@divisor 0005  
       __CFG_OSC$INTIO67 000000        __size_of_Init_ADC 000E          ___llmod@counter 0009  
          _select_ADC_CH 2A76              ?_wait_1_sec 0001                 ??___ftge 0007  
               ??___wmul 0013                 ??_fround 002E                 ??_printf 0046  
             fround@prec 0034        __size_of___ftpack 00C6        __size_of___lbtoft 0026  
      __size_of___lltoft 0060              __pbssCOMRAM 0071        __size_of___lwtoft 0026  
             ?_Init_TRIS 0001               ?_OpenUSART 0001           ?_select_ADC_CH 0001  
               ?___awdiv 0007                 ?___ftadd 0010                 ?___awmod 0001  
               ?___ftdiv 000C                 ?___ftneg 000D                 ?___lldiv 0001  
               ?___ftmul 001C                 ?___llmod 0001                 ?___ftsub 001C  
              __npowers_ 1029                 ?___fttol 0032              __tdiv_to_l_ 1FC0  
           ??__div_to_l_ 0007              __smallconst 1000      __size_of_wait_1_sec 0020  
              _init_UART 2A32           __size_of_scale 03E0           __size_of_putch 000E  
               _LED_7seg 0067           ___wmul@product 0013                 _PIE1bits 000F9D  
               _PIR1bits 000F9E       __end_of__div_to_l_ 21DA               _ADCON0bits 000FC2  
      ___wmul@multiplier 000F               printf@flag 0051               printf@fval 005F  
             printf@prec 0053              ??_Init_TRIS 0001               ?_init_UART 0001  
              copy_data0 293E          ??_select_ADC_CH 0001                 _Init_ADC 2A68  
            ??_OpenUSART 0003          OpenUSART@config 0003                 __Hrparam 0000  
               __Lrparam 0000         __size_of___awdiv 0096         __size_of___ftadd 01C4  
       __size_of___awmod 0082         __size_of___ftdiv 00E2         __size_of___ftneg 0024  
       __size_of___lldiv 008C         __size_of___ftmul 00F8         __size_of___llmod 0070  
       __size_of___ftsub 0044         __size_of___fttol 00E6                 ___ftpack 249A  
               ___lbtoft 29C8              _fround$1092 0031              _fround$1093 002E  
               ___lltoft 287A                 ___lwtoft 29A2                 __ptext10 2560  
               __ptext11 1FC0                 __ptext20 25F6                 __ptext12 20D0  
               __ptext21 2A32                 __ptext13 287A                 __ptext22 280A  
               __ptext14 279A                 __ptext23 297C                 __ptext15 268C  
               __ptext24 29A2                 __ptext16 22D2                 __ptext25 29C8  
               __ptext17 28DA                 __ptext26 23B8                 __ptext18 1CD2  
               __ptext27 249A                 __ptext19 29EE                 __ptext28 2A46  
               __ptext29 2A68                 __powers_ 1050            __size_of_main 012A  
           ??_wait_1_sec 0001                 _num_step 0077                printf@exp 0059  
              printf@val 0055           OpenUSART@spbrg 0001              ??_init_UART 0004  
     __end_of_wait_1_sec 2A32                 scale@scl 0031         __tdiv_to_l_@exp1 000F  
       __tdiv_to_l_@cntr 000E         __tdiv_to_l_@quot 000A         ___lldiv@dividend 0001  
    select_ADC_CH@AN_pin 0001                 printf@ap 004F             ?__tdiv_to_l_ 0001  
            _printf$1095 004C         ___lldiv@quotient 0009            ?_get_full_ADC 0001  
